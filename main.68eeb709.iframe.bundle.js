(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _badgesConfig,ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),client=__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/index.js"),storybook_addon_badges_esm=__webpack_require__("./node_modules/@geometricpanda/storybook-addon-badges/storybook-addon-badges.esm.js"),package_0=__webpack_require__("./package.json"),custom_elements=__webpack_require__("./custom-elements.json");Object(client.e)(custom_elements),Object(client.a)({badgesConfig:(_badgesConfig={},_badgesConfig[storybook_addon_badges_esm.a.DEFAULT]={contrast:"#edeef7",color:"#32394D",title:package_0.a},_badgesConfig[storybook_addon_badges_esm.a.STABLE]={contrast:"#00ab6d",color:"#ffffff",title:"Stable"},_badgesConfig[storybook_addon_badges_esm.a.BETA]={contrast:"#f8ab00",color:"#32394D",title:"In Progress"},_badgesConfig)});var parameters={controls:{expanded:!0,hideNoControlsWarning:!0},badges:[storybook_addon_badges_esm.a.DEFAULT,storybook_addon_badges_esm.a.STABLE],docs:{source:{state:"open"}},options:{storySort:function storySort(a,b){return a[1].kind===b[1].kind?0:a[1].id.localeCompare(b[1].id,void 0,{numeric:!0})}},backgrounds:{default:"white",values:[{name:"white",value:"#ffffff"},{name:"grey",value:"#f4f5fa"}],grid:{disable:!0}},viewport:{viewports:{mobile:{name:"Mobile",styles:{width:"360px",height:"640px"}},tablet:{name:"Tablet",styles:{width:"768px",height:"1024px"}},desktop:{name:"Desktop",styles:{width:"1600px",height:"864px"}}},defaultViewport:"Desktop"}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return Object(ClientApi.d)(value);case"argTypes":return Object(ClientApi.b)(value);case"decorators":return value.forEach((function(decorator){return Object(ClientApi.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.g)(loader,!1)}));case"parameters":return Object(ClientApi.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.e)(enhancer)}));case"render":return Object(ClientApi.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./.storybook/utilities.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return injectStyles}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.string.starts-with.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js");function injectStyles(args,context){var argTypes=context.argTypes,cssVars=Object.keys(argTypes).filter((function(v){return v.startsWith("--")})),styles=[];if(cssVars.forEach((function(cssVar){null!=args[cssVar]&&styles.push(cssVar+": "+args[cssVar]+";")})),styles.length>0)return styles.join(" ")}},"./custom-elements.json":function(module){module.exports=JSON.parse('{"version":"1.0.0","modules":[{"kind":"javascript-module","path":"./src/components/dnn-button/dnn-button.tsx","declarations":[{"kind":"class","name":"dnn-button.tsx","tagName":"dnn-button","description":"","attributes":[{"name":"confirm","type":{"text":"boolean"},"description":"Optionally add a confirmation dialog before firing the action.","default":"false","required":false},{"name":"confirm-message","type":{"text":"string"},"description":"The text of the confirmation message;","default":"\\"Are you sure ?\\"","required":false},{"name":"confirm-no-text","type":{"text":"string"},"description":"The text of the no button for confirmation.","default":"\\"No\\"","required":false},{"name":"confirm-yes-text","type":{"text":"string"},"description":"The text of the yes button for confirmation.","default":"\\"Yes\\"","required":false},{"name":"disabled","type":{"text":"boolean"},"description":"Disables the button","default":"false","required":false},{"name":"reversed","type":{"text":"boolean"},"description":"Optionally reverses the button style.","default":"false","required":false},{"name":"size","type":{"text":"\\"large\\" | \\"normal\\" | \\"small\\""},"description":"Optionally sets the button size, small normal or large, defaults to normal","default":"\'normal\'","required":false},{"name":"type","type":{"text":"\\"primary\\" | \\"secondary\\" | \\"tertiary\\""},"description":"Optional button style,\\r\\ncan be either primary, secondary or tertiary and defaults to primary if not specified","default":"\'primary\'","required":false}],"members":[],"events":[{"name":"canceled","type":{"text":"any"},"description":"Fires when confirm is true and the user cancels the action."},{"name":"confirmed","type":{"text":"any"},"description":"Fires when confirm is true and the user confirms the action."}],"slots":[{"name":"Content of the button","description":""}],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-checkbox/dnn-checkbox.tsx","declarations":[{"kind":"class","name":"dnn-checkbox.tsx","tagName":"dnn-checkbox","description":"","attributes":[{"name":"checked","type":{"text":"\\"checked\\" | \\"intermediate\\" | \\"unchecked\\""},"description":"Defines if the checkbox is checked (true) or unchecked (false) or in an intermediate state (undefined)","default":"\\"unchecked\\"","required":false},{"name":"use-intermediate","type":{"text":"boolean"},"description":"Defines if clicking the checkbox will go through the intermediate state between checked and unchecked (tri-state)","default":"false","required":false},{"name":"value","type":{"text":"string"},"description":"The value for this checkbox (not to be confused with its checked state).","required":false}],"members":[],"events":[{"name":"checkedchange","type":{"text":"\\"checked\\" | \\"intermediate\\" | \\"unchecked\\""},"description":"Fires up when the checkbox checked property changes."}],"slots":[{"name":" ","description":"The label for the checkbox."},{"name":"checkedicon","description":"Allows overriding the default checked icon."},{"name":"intermediateicon","description":"If intermadiate state is used, allows overriding its icon."},{"name":"uncheckedicon","description":"Allows overriding the unchecked icon."}],"cssProperties":[{"name":"--focus-color","description":"The color to outline the checkbox when hovered or focused, default to the dnn primary color."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-chevron/dnn-chevron.tsx","declarations":[{"kind":"class","name":"dnn-chevron.tsx","tagName":"dnn-chevron","description":"","attributes":[{"name":"collapse-text","type":{"text":"string"},"description":"Collapse text for screen readers","default":"\\"collapse\\"","required":false},{"name":"expand-text","type":{"text":"string"},"description":"Expand text for screen readers","default":"\\"expand\\"","required":false},{"name":"expanded","type":{"text":"boolean"},"description":"Is the chevron expanded","default":"false","required":false}],"members":[],"events":[{"name":"changed","type":{"text":"any"},"description":"Fires up when the expanded status changes"}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-collapsible/dnn-collapsible.tsx","declarations":[{"kind":"class","name":"dnn-collapsible.tsx","tagName":"dnn-collapsible","description":"","attributes":[{"name":"expanded","type":{"text":"boolean"},"description":"Defines if the panel is expanded or not.","default":"false","required":false},{"name":"transition-duration","type":{"text":"number"},"description":"Defines the transition time in ms, defaults to 150ms","default":"150","required":false}],"members":[{"kind":"method","name":"updateSize","description":"Updates the component height, use to update after a slot content changes.","signature":"updateSize() => Promise<void>"}],"events":[{"name":"dnnCollapsibleHeightChanged","type":{"text":"void"},"description":"Fires whenever the collapsible height has changed"}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-color-picker/dnn-color-picker.tsx","declarations":[{"kind":"class","name":"dnn-color-picker.tsx","tagName":"dnn-color-picker","description":"Color Picker for Dnn","attributes":[{"name":"color","type":{"text":"string"},"description":"Sets the initial color, must be a valid 8 character hexadecimal string without the # sign.","default":"\\"FFFFFF\\"","required":false},{"name":"color-box-height","type":{"text":"string"},"description":"Sets the width-height ratio of the color picker saturation-lightness box.","default":"\\"50%\\"","required":false}],"members":[],"events":[{"name":"colorChanged","type":{"text":"ColorInfo"},"description":"Fires up when the color is changed and emits a ColorInfo object"}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-dropzone/dnn-dropzone.tsx","declarations":[{"kind":"class","name":"dnn-dropzone.tsx","tagName":"dnn-dropzone","description":"","attributes":[{"name":"allow-camera-mode","type":{"text":"boolean"},"description":"If true, will allow the user to take a snapshot\\r\\nusing the device camera. (only works over https).","default":"false","required":false},{"name":"capture-quality","type":{"text":"number"},"description":"Specifies the jpeg quality for when the device\\r\\ncamera is used to generate a picture.\\r\\nNeeds to be a number between 0 and 1 and defaults to 0.8","default":"0.8","required":false}],"members":[{"kind":"field","name":"allowedExtensions","type":{"text":"string[]"},"description":"A list of allowed file extensions.\\r\\nIf not specified, any file is allowed.\\r\\nEx: [\\"jpg\\", \\"jped\\", \\"gif\\", \\"png\\"]","required":false},{"kind":"field","name":"resx","type":{"text":"{ dragAndDropFile: string; capture: string; or: string; takePicture: string; uploadFile: string; }"},"description":"Localization strings","default":"{\\r\\n    dragAndDropFile: \\"Drag and drop a file\\",\\r\\n    capture: \\"Capture\\",\\r\\n    or: \\"or\\",\\r\\n    takePicture: \\"Take a picture\\",\\r\\n    uploadFile: \\"Upload a file\\",\\r\\n  }","required":false}],"events":[{"name":"filesSelected","type":{"text":"File[]"},"description":"Fires when file were selected."}],"slots":[],"cssProperties":[{"name":"--border-color","description":"The color of the border."},{"name":"--border-radius","description":"The radius of the controls borders."},{"name":"--drop-background-color","description":"The color of the background when a file is dropping."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-image-cropper/dnn-image-cropper.tsx","declarations":[{"kind":"class","name":"dnn-image-cropper.tsx","tagName":"dnn-image-cropper","description":"Allows cropping an image in-browser with the option to enforce a specific final size.\\r\\nAll computation happens in the browser and the final image is emmited\\r\\nin an event that has a data-url of the image.","attributes":[{"name":"height","type":{"text":"number"},"description":"Sets the desired final image height.","default":"600","required":false},{"name":"prevent-undersized","type":{"text":"boolean"},"description":"When set to true, prevents cropping an image smaller than the required size, which would blow pixel and make the final picture look blurry.","default":"false","required":false},{"name":"quality","type":{"text":"number"},"description":"Sets the output quality of the corpped image (number between 0 and 1).","default":"0.8","required":false},{"name":"width","type":{"text":"number"},"description":"Sets the desired final image width.","default":"600","required":false}],"members":[{"kind":"field","name":"resx","type":{"text":"{ capture: string; dragAndDropFile: string; or: string; takePicture: string; uploadFile: string; imageTooSmall: string; modalCloseText: string; }"},"description":"Can be used to customize controls text.\\r\\nSome values support tokens, see default values for examples.","default":"{\\r\\n    capture: \\"Capture\\",\\r\\n    dragAndDropFile: \\"Drag and drop an image\\",\\r\\n    or: \\"or\\",\\r\\n    takePicture: \\"Take a picture\\",\\r\\n    uploadFile: \\"Upload an image\\",\\r\\n    imageTooSmall: \\"The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.\\",\\r\\n    modalCloseText: \\"Close\\",\\r\\n  }","required":false}],"events":[{"name":"imageCropChanged","type":{"text":"string"},"description":"When the image crop changes, emits the dataurl for the new cropped image."}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-modal/dnn-modal.tsx","declarations":[{"kind":"class","name":"dnn-modal.tsx","tagName":"dnn-modal","description":"","attributes":[{"name":"backdrop-dismiss","type":{"text":"boolean"},"description":"Pass false to remove the backdrop click auto-dismiss feature.","default":"true","required":false},{"name":"close-text","type":{"text":"string"},"description":"Optionally pass the aria-label text for the close button.\\r\\nDefaults to \\"Close modal\\" if not provided.","default":"\\"Close modal\\"","required":false},{"name":"show-close-button","type":{"text":"boolean"},"description":"Optionally you can pass false to not show the close button.\\r\\nIf you decide to do so, you should either not also prevent dismissal by clicking the backdrop\\r\\nor provide your own dismissal logic in the modal content.","default":"true","required":false},{"name":"visible","type":{"text":"boolean"},"description":"Reflects the visible state of the modal.","default":"false","required":false}],"members":[{"kind":"method","name":"hide","description":"Hides the modal","signature":"hide() => Promise<void>"},{"kind":"method","name":"show","description":"Shows the modal","signature":"show() => Promise<void>"}],"events":[{"name":"dismissed","type":{"text":"any"},"description":"Fires when the modal is dismissed."}],"slots":[],"cssProperties":[{"name":"--max-width","description":"The maximum width of the module."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-monaco-editor/dnn-monaco-editor.tsx","declarations":[{"kind":"class","name":"dnn-monaco-editor.tsx","tagName":"dnn-monaco-editor","description":"","attributes":[{"name":"load-font-from-local","type":{"text":"boolean"},"description":"If set to true, then it is the responsibility of the consumer to have codicon.ttf in their distribution (e.g., ./assets/monaco-editor/codicon.ttf).","default":"false","required":false}],"members":[{"kind":"field","name":"options","type":{"text":"IStandaloneEditorConstructionOptions"},"description":"Sets the monaco editor options, see monaco options.","required":false},{"kind":"method","name":"getValue","description":"Get value of the current model attached to this editor.","signature":"getValue() => Promise<string>"},{"kind":"method","name":"setFocus","description":"Set focus to editor","signature":"setFocus() => Promise<void>"},{"kind":"method","name":"setValue","description":"Sets a new editor value.","signature":"setValue(newValue: string) => Promise<void>"},{"kind":"method","name":"updateLanguage","description":"Update code language editor","signature":"updateLanguage(languageId: string) => Promise<void>"}],"events":[{"name":"editorDidLoad","type":{"text":"void"},"description":"Event to indicate editor has loaded"}],"slots":[],"cssProperties":[{"name":"--monaco-editor-height","description":"height of the editor, default is 50vh"},{"name":"--monaco-editor-width","description":"width of the editor, default is 100%"}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-permissions-grid/dnn-permissions-grid.tsx","declarations":[{"kind":"class","name":"dnn-permissions-grid.tsx","tagName":"dnn-permissions-grid","description":"","attributes":[],"members":[{"kind":"field","name":"foundUsers","type":{"text":"ISearchedUser[]"},"description":"The list of users to show under the search users field when a search is performed.","default":"[]","required":false},{"kind":"field","name":"permissions","type":{"text":"IPermissions"},"description":"The list of permissions.","required":true},{"kind":"field","name":"resx","type":{"text":"ILocalization"},"description":"Optionally allows localizing the component strings.","default":"{\\r\\n    Add: \\"Add\\",\\r\\n    AllRoles: \\"All Roles\\",\\r\\n    FilterByGroup: \\"Filter By Group\\",\\r\\n    GlobalRoles: \\"Global Roles\\",\\r\\n    Role: \\"Role\\",\\r\\n    RolePermissions: \\"Role Permissions\\",\\r\\n    SelectRole: \\"Select Role\\",\\r\\n    User: \\"User\\",\\r\\n    UserPermissions: \\"User Permissions\\",\\r\\n  }","required":false},{"kind":"field","name":"roleGroups","type":{"text":"IRoleGroup[]"},"description":"The list of role groups.","required":true},{"kind":"field","name":"roles","type":{"text":"IRole[]"},"description":"The list of possible roles.","required":true}],"events":[{"name":"permissionsChanged","type":{"text":"IPermissions"},"description":"Fires when any permissions have changed, can be used for instance to have linked permissions."},{"name":"userSearchQueryChanged","type":{"text":"string"},"description":"Fires when searching for users to add to the permissions. Emits the search query."}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-searchbox/dnn-searchbox.tsx","declarations":[{"kind":"class","name":"dnn-searchbox.tsx","tagName":"dnn-searchbox","description":"","attributes":[{"name":"debounced","type":{"text":"boolean"},"description":"Debounces the queryChanged by 500ms.","default":"true","required":false},{"name":"placeholder","type":{"text":"string"},"description":"Sets the field placeholder text.","default":"\\"\\"","required":false},{"name":"query","type":{"text":"string"},"description":"Sets the query","default":"\\"\\"","required":false}],"members":[],"events":[{"name":"queryChanged","type":{"text":"string"},"description":"Fires up each time the search query changes.\\r\\nThe data passed is the new query."}],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-sort-icon/dnn-sort-icon.tsx","declarations":[{"kind":"class","name":"dnn-sort-icon.tsx","tagName":"dnn-sort-icon","description":"","attributes":[{"name":"sort-direction","type":{"text":"\\"asc\\" | \\"desc\\" | \\"none\\""},"description":"Defines the current sort direction","default":"\\"none\\"","required":false}],"members":[],"events":[{"name":"sortChanged","type":{"text":"\\"asc\\" | \\"desc\\" | \\"none\\""},"description":"Emitted when the sort is changed."}],"slots":[],"cssProperties":[{"name":"--color","description":"Normal Color of the inactive sort icon."},{"name":"--color-hover","description":"Color of the icons when hovered."},{"name":"--color-sorted","description":"Color of the sorted sort icon."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-tab/dnn-tab.tsx","declarations":[{"kind":"class","name":"dnn-tab.tsx","tagName":"dnn-tab","description":"Represents a single tab and must be used inside a dnn-tabs element.","attributes":[{"name":"tab-title","type":{"text":"string"},"description":"Defines the tab title.","required":true}],"members":[{"kind":"method","name":"hide","description":"Hides the modal","signature":"hide() => Promise<void>"},{"kind":"method","name":"show","description":"Shows the tab.","signature":"show() => Promise<void>"}],"events":[],"slots":[],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-tabs/dnn-tabs.tsx","declarations":[{"kind":"class","name":"dnn-tabs.tsx","tagName":"dnn-tabs","description":"`dnn-tabs` is a container for `dnn-tab` and should only contain `dnn-tab` elements for its content.","attributes":[],"members":[],"events":[],"slots":[],"cssProperties":[{"name":"--color-background","description":"The color of the inactive tabs."},{"name":"--color-focus","description":"outline color when hovering or pre-selecting a tab."},{"name":"--color-text","description":"The color of the text for inactive tabs."},{"name":"--color-visible","description":"The color of the active tab."},{"name":"--color-visible-text","description":"The color of the text for the active tab."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-toggle/dnn-toggle.tsx","declarations":[{"kind":"class","name":"dnn-toggle.tsx","tagName":"dnn-toggle","description":"","attributes":[{"name":"checked","type":{"text":"boolean"},"description":"If \'true\' the toggle is checked (on).","default":"false","required":false},{"name":"disabled","type":{"text":"boolean"},"description":"If \'true\' the toggle is not be interacted with.","default":"false","required":false}],"members":[],"events":[{"name":"checkChanged","type":{"text":"DnnToggleChangeEventDetail"},"description":"Fires when the toggle changed"}],"slots":[],"cssProperties":[{"name":"--background","description":"Background of the toggle."},{"name":"--background-checked","description":"Background of the toggle when checked."},{"name":"--border-radius","description":"The radius of the background borders."},{"name":"--handle-background","description":"Background of the handle."},{"name":"--handle-background-checked","description":"Background of the handle when checked."},{"name":"--handle-border-radius","description":"The radius of the handle."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-treeview-item/dnn-treeview-item.tsx","declarations":[{"kind":"class","name":"dnn-treeview-item.tsx","tagName":"dnn-treeview-item","description":"","attributes":[{"name":"expanded","type":{"text":"boolean"},"description":"Defines if the current node is expanded.","default":"false","required":false}],"members":[],"events":[{"name":"userCollapsed","type":{"text":"void"},"description":"Fires when the user collapses a node."},{"name":"userExpanded","type":{"text":"void"},"description":"Fires when the user expands a node."}],"slots":[{"name":" ","description":"The content of this node."},{"name":"children","description":"The content nested under this node."}],"cssProperties":[],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.tsx","declarations":[{"kind":"class","name":"dnn-vertical-overflow-menu.tsx","tagName":"dnn-vertical-overflow-menu","description":"","attributes":[],"members":[],"events":[],"slots":[],"cssProperties":[{"name":"--background-color","description":"Defines the menu background color."},{"name":"--foreground-color","description":"A color that contrasts with the background color."}],"cssParts":[]}]},{"kind":"javascript-module","path":"./src/components/dnn-vertical-splitview/dnn-vertical-splitview.tsx","declarations":[{"kind":"class","name":"dnn-vertical-splitview.tsx","tagName":"dnn-vertical-splitview","description":"This allows splitting a UI into vertical adjustable panels, the splitter itself is not part of this component.\\r\\n- The content for the left part should be injected in the `left` slot.\\r\\n- The content for the right part should be injected in the `right` slot.\\r\\n- The content for the actual splitter should go in the default slot and other UI elements can be injected as long as you handle their behaviour, by default only the drag behavior is implemented in the component.","attributes":[{"name":"split-width-percentage","type":{"text":"number"},"description":"The percentage position of the splitter in the container.","default":"30","required":false},{"name":"splitter-width","type":{"text":"number"},"description":"The width of the splitter area.","default":"16","required":false}],"members":[{"kind":"method","name":"getSplitWidthPercentage","description":"Gets the current divider position percentage.","signature":"getSplitWidthPercentage() => Promise<number>"},{"kind":"method","name":"setSplitWidthPercentage","description":"Sets the width percentage of the divider","signature":"setSplitWidthPercentage(newWidth: number) => Promise<void>"}],"events":[{"name":"widthChanged","type":{"text":"number"},"description":"Fires when the width of the divider changes."}],"slots":[{"name":"default","description":"The split divider control you want to use."},{"name":"left","description":"The content of the left pane."},{"name":"right","description":"The content of the right pane."}],"cssProperties":[{"name":"--left-pane-background-color","description":"Allows customizing the left pane background-color"},{"name":"--right-pane-background-color","description":"Allows customizing the right pane background-color"}],"cssParts":[]}]}]}')},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./package.json":function(module){module.exports=JSON.parse('{"a":"0.16.1-beta.6"}')},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./components/dnn-button/dnn-button.stories.ts":"./src/components/dnn-button/dnn-button.stories.ts","./components/dnn-checkbox/dnn-checkbox.stories.ts":"./src/components/dnn-checkbox/dnn-checkbox.stories.ts","./components/dnn-chevron/dnn-chevron.stories.ts":"./src/components/dnn-chevron/dnn-chevron.stories.ts","./components/dnn-collapsible/dnn-collapsible.stories.ts":"./src/components/dnn-collapsible/dnn-collapsible.stories.ts","./components/dnn-color-picker/dnn-color-picker.stories.ts":"./src/components/dnn-color-picker/dnn-color-picker.stories.ts","./components/dnn-dropzone/dnn-dropzone.stories.ts":"./src/components/dnn-dropzone/dnn-dropzone.stories.ts","./components/dnn-image-cropper/dnn-image-cropper.stories.ts":"./src/components/dnn-image-cropper/dnn-image-cropper.stories.ts","./components/dnn-modal/dnn-modal.stories.ts":"./src/components/dnn-modal/dnn-modal.stories.ts","./components/dnn-monaco-editor/dnn-monaco-editor.stories.ts":"./src/components/dnn-monaco-editor/dnn-monaco-editor.stories.ts","./components/dnn-permissions-grid/dnn-permissions-grid.stories.ts":"./src/components/dnn-permissions-grid/dnn-permissions-grid.stories.ts","./components/dnn-searchbox/dnn-searchbox.stories.ts":"./src/components/dnn-searchbox/dnn-searchbox.stories.ts","./components/dnn-sort-icon/dnn-sort-icon.stories.ts":"./src/components/dnn-sort-icon/dnn-sort-icon.stories.ts","./components/dnn-tab/dnn-tab.stories.ts":"./src/components/dnn-tab/dnn-tab.stories.ts","./components/dnn-tabs/dnn-tabs.stories.ts":"./src/components/dnn-tabs/dnn-tabs.stories.ts","./components/dnn-toggle/dnn-toggle.stories.ts":"./src/components/dnn-toggle/dnn-toggle.stories.ts","./components/dnn-treeview-item/dnn-treeview-item.stories.ts":"./src/components/dnn-treeview-item/dnn-treeview-item.stories.ts","./components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.stories.ts":"./src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.stories.ts","./components/dnn-vertical-splitview/dnn-vertical-splitview.stories.ts":"./src/components/dnn-vertical-splitview/dnn-vertical-splitview.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"./src/components/dnn-button/dnn-button.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Button",(function(){return Button}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),unsafe_html=__webpack_require__("./node_modules/lit-html/directives/unsafe-html.js");__webpack_exports__.default={title:"Elements/Button",component:"dnn-button",parameters:{actions:{handles:["confirmed","canceled"]},notes:'# dnn-button\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property         | Attribute          | Description                                                                                                  | Type                                     | Default            |\r\n| ---------------- | ------------------ | ------------------------------------------------------------------------------------------------------------ | ---------------------------------------- | ------------------ |\r\n| `confirm`        | `confirm`          | Optionally add a confirmation dialog before firing the action.                                               | `boolean`                                | `false`            |\r\n| `confirmMessage` | `confirm-message`  | The text of the confirmation message;                                                                        | `string`                                 | `"Are you sure ?"` |\r\n| `confirmNoText`  | `confirm-no-text`  | The text of the no button for confirmation.                                                                  | `string`                                 | `"No"`             |\r\n| `confirmYesText` | `confirm-yes-text` | The text of the yes button for confirmation.                                                                 | `string`                                 | `"Yes"`            |\r\n| `disabled`       | `disabled`         | Disables the button                                                                                          | `boolean`                                | `false`            |\r\n| `reversed`       | `reversed`         | Optionally reverses the button style.                                                                        | `boolean`                                | `false`            |\r\n| `size`           | `size`             | Optionally sets the button size, small normal or large, defaults to normal                                   | `"large" \\| "normal" \\| "small"`         | `\'normal\'`         |\r\n| `type`           | `type`             | Optional button style, can be either primary, secondary or tertiary and defaults to primary if not specified | `"primary" \\| "secondary" \\| "tertiary"` | `\'primary\'`        |\r\n\r\n\r\n## Events\r\n\r\n| Event       | Description                                                  | Type               |\r\n| ----------- | ------------------------------------------------------------ | ------------------ |\r\n| `canceled`  | Fires when confirm is true and the user cancels the action.  | `CustomEvent<any>` |\r\n| `confirmed` | Fires when confirm is true and the user confirms the action. | `CustomEvent<any>` |\r\n\r\n\r\n## Slots\r\n\r\n| Slot                      | Description |\r\n| ------------------------- | ----------- |\r\n| `"Content of the button"` |             |\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-button](.)\r\n - [dnn-permissions-grid](../dnn-permissions-grid)\r\n\r\n### Depends on\r\n\r\n- [dnn-modal](../dnn-modal)\r\n- [dnn-button](.)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-button --\x3e dnn-button\r\n  dnn-permissions-grid --\x3e dnn-button\r\n  style dnn-button fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{type:{options:["primary","secondary","tertiary"],control:{type:"select"}},reversed:{control:"boolean"},size:{options:["small","normal","large"],control:{type:"select"}},confirm:{control:"boolean"},"confirm-yes-text":{control:"text"},"confirm-no-text":{control:"text"},"confirm-message":{control:"text"},disabled:{control:"boolean"}}};var Button=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-button\n            type=","\n            ?reversed=","\n            size=","\n            ?confirm=","\n            confirm-yes-text=","\n            confirm-no-text=","\n            confirm-message=","\n            ?disabled=",">\n            ","\n        </dnn-button>\n    "])),Object(if_defined.a)(args.type),Object(if_defined.a)(args.reversed),Object(if_defined.a)(args.size),Object(if_defined.a)(args.confirm),Object(if_defined.a)(args.confirmYesText),Object(if_defined.a)(args.confirmNoText),Object(if_defined.a)(args.confirmMessage),Object(if_defined.a)(args.disabled),Object(unsafe_html.a)(args.slot))}.bind({});Button.args={type:"primary",reversed:!1,size:"medium",confirm:!0,confirmYesText:"Yes",confirmNoText:"No",confirmMessage:"Are you sure?",disabled:!1,slot:"Click me!"},Button.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-button\r\n            type=${ifDefined(args.type)}\r\n            ?reversed=${ifDefined(args.reversed)}\r\n            size=${ifDefined(args.size)}\r\n            ?confirm=${ifDefined(args.confirm)}\r\n            confirm-yes-text=${ifDefined(args.confirmYesText)}\r\n            confirm-no-text=${ifDefined(args.confirmNoText)}\r\n            confirm-message=${ifDefined(args.confirmMessage)}\r\n            ?disabled=${ifDefined(args.disabled)}>\r\n            ${unsafeHTML(args.slot)}\r\n        </dnn-button>\r\n    `"}},Button.parameters)},"./src/components/dnn-checkbox/dnn-checkbox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Checkbox",(function(){return Checkbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Checkbox",component:"dnn-checkbox",parameters:{actions:{handles:["checkedchange"]},notes:'# dnn-checkbox\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property          | Attribute          | Description                                                                                                       | Type                                         | Default       |\r\n| ----------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------- | -------------------------------------------- | ------------- |\r\n| `checked`         | `checked`          | Defines if the checkbox is checked (true) or unchecked (false) or in an intermediate state (undefined)            | `"checked" \\| "intermediate" \\| "unchecked"` | `"unchecked"` |\r\n| `useIntermediate` | `use-intermediate` | Defines if clicking the checkbox will go through the intermediate state between checked and unchecked (tri-state) | `boolean`                                    | `false`       |\r\n| `value`           | `value`            | The value for this checkbox (not to be confused with its checked state).                                          | `string`                                     | `undefined`   |\r\n\r\n\r\n## Events\r\n\r\n| Event           | Description                                          | Type                                                      |\r\n| --------------- | ---------------------------------------------------- | --------------------------------------------------------- |\r\n| `checkedchange` | Fires up when the checkbox checked property changes. | `CustomEvent<"checked" \\| "intermediate" \\| "unchecked">` |\r\n\r\n\r\n## Slots\r\n\r\n| Slot                 | Description                                                |\r\n| -------------------- | ---------------------------------------------------------- |\r\n|                      | The label for the checkbox.                                |\r\n| `"checkedicon"`      | Allows overriding the default checked icon.                |\r\n| `"intermediateicon"` | If intermadiate state is used, allows overriding its icon. |\r\n| `"uncheckedicon"`    | Allows overriding the unchecked icon.                      |\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name            | Description                                                                                  |\r\n| --------------- | -------------------------------------------------------------------------------------------- |\r\n| `--focus-color` | The color to outline the checkbox when hovered or focused, default to the dnn primary color. |\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-permissions-grid](../dnn-permissions-grid)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-permissions-grid --\x3e dnn-checkbox\r\n  style dnn-checkbox fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{checked:{options:["checked","unchecked","intermediate"],control:"radio"},"use-intermediate":{control:"boolean"},value:{control:"text"}}};var Checkbox=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-checkbox\n            checked=","\n            ?use-intermediate=","\n            value=",">\n        </dnn-checkbox>\n    "])),args.checked,Object(if_defined.a)(args.useIntermediate),args.value)}.bind({});Checkbox.args={checked:"unchecked",useIntermediate:!1,value:"1"},Checkbox.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-checkbox\r\n            checked=${args.checked}\r\n            ?use-intermediate=${ifDefined(args.useIntermediate)}\r\n            value=${args.value}>\r\n        </dnn-checkbox>\r\n    `"}},Checkbox.parameters)},"./src/components/dnn-chevron/dnn-chevron.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Chevron",(function(){return Chevron}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Chevron",component:"dnn-chevron",parameters:{actions:{handles:["changed"]},notes:'# dnn-chevron\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property       | Attribute       | Description                      | Type      | Default      |\r\n| -------------- | --------------- | -------------------------------- | --------- | ------------ |\r\n| `collapseText` | `collapse-text` | Collapse text for screen readers | `string`  | `"collapse"` |\r\n| `expandText`   | `expand-text`   | Expand text for screen readers   | `string`  | `"expand"`   |\r\n| `expanded`     | `expanded`      | Is the chevron expanded          | `boolean` | `false`      |\r\n\r\n\r\n## Events\r\n\r\n| Event     | Description                               | Type               |\r\n| --------- | ----------------------------------------- | ------------------ |\r\n| `changed` | Fires up when the expanded status changes | `CustomEvent<any>` |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{"expand-text":{control:"text"},"collapse-text":{control:"text"},expanded:{control:"boolean"}}};var Chevron=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-chevron\n            expand-text=","\n            collapse-text=","\n            ?expanded=",">\n        </dnn-chevron>\n    "])),Object(if_defined.a)(args.expandText),Object(if_defined.a)(args.collapseText),Object(if_defined.a)(args.expanded))}.bind({});Chevron.args={expandText:"expand",collapseText:"collapse",expanded:!1},Chevron.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-chevron\r\n            expand-text=${ifDefined(args.expandText)}\r\n            collapse-text=${ifDefined(args.collapseText)}\r\n            ?expanded=${ifDefined(args.expanded)}>\r\n        </dnn-chevron>\r\n    `"}},Chevron.parameters)},"./src/components/dnn-collapsible/dnn-collapsible.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Collapsible",(function(){return Collapsible}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Collapsible",component:"dnn-collapsible",parameters:{notes:"# dnn-collapsible\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property             | Attribute             | Description                                          | Type      | Default |\r\n| -------------------- | --------------------- | ---------------------------------------------------- | --------- | ------- |\r\n| `expanded`           | `expanded`            | Defines if the panel is expanded or not.             | `boolean` | `false` |\r\n| `transitionDuration` | `transition-duration` | Defines the transition time in ms, defaults to 150ms | `number`  | `150`   |\r\n\r\n\r\n## Events\r\n\r\n| Event                         | Description                                       | Type                |\r\n| ----------------------------- | ------------------------------------------------- | ------------------- |\r\n| `dnnCollapsibleHeightChanged` | Fires whenever the collapsible height has changed | `CustomEvent<void>` |\r\n\r\n\r\n## Methods\r\n\r\n### `updateSize() => Promise<void>`\r\n\r\nUpdates the component height, use to update after a slot content changes.\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-permissions-grid](../dnn-permissions-grid)\r\n - [dnn-treeview-item](../dnn-treeview-item)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-permissions-grid --\x3e dnn-collapsible\r\n  dnn-treeview-item --\x3e dnn-collapsible\r\n  style dnn-collapsible fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n",actions:{handles:["dnnCollapsibleHeightChanged"]}},argTypes:{expanded:{type:"boolean"},transitionDuration:{type:"number"},"transition-duration":{type:"number",control:"number"}}};var Collapsible=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-collapsible ?expanded="," transition-duration=",'>\n            <div style="border: 1px solid lightgray">\n                <h1>This title is inside the collapsible</h1>\n                <p>Bacon ipsum dolor amet cupim hamburger beef ribs pork belly porchetta shankle swine. Pork belly jowl rump swine corned beef, pancetta kevin cow. Picanha pork chop pork loin corned beef beef prosciutto t-bone short loin bresaola short ribs chicken andouille. Pig leberkas meatball alcatra ribeye meatloaf. Prosciutto shoulder tongue chuck burgdoggen tenderloin, shank sirloin landjaeger doner shankle meatball kevin pork loin ham hock.</p>\n            </div>\n        </dnn-collapsible>\n    '])),Object(if_defined.a)(args.expanded),Object(if_defined.a)(args.transitionDuration))}.bind({});Collapsible.args={expanded:!1,transitionDuration:150},Collapsible.parameters=Object.assign({storySource:{source:'(args: { expanded: boolean; transitionDuration: number; }) =>\r\n    html`\r\n        <dnn-collapsible ?expanded=${ifDefined(args.expanded)} transition-duration=${ifDefined(args.transitionDuration)}>\r\n            <div style="border: 1px solid lightgray">\r\n                <h1>This title is inside the collapsible</h1>\r\n                <p>Bacon ipsum dolor amet cupim hamburger beef ribs pork belly porchetta shankle swine. Pork belly jowl rump swine corned beef, pancetta kevin cow. Picanha pork chop pork loin corned beef beef prosciutto t-bone short loin bresaola short ribs chicken andouille. Pig leberkas meatball alcatra ribeye meatloaf. Prosciutto shoulder tongue chuck burgdoggen tenderloin, shank sirloin landjaeger doner shankle meatball kevin pork loin ham hock.</p>\r\n            </div>\r\n        </dnn-collapsible>\r\n    `'}},Collapsible.parameters)},"./src/components/dnn-color-picker/dnn-color-picker.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ColorPicker",(function(){return ColorPicker}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Color Picker",component:"dnn-color-picker",parameters:{actions:{handles:["colorChanged"]},notes:'# dnn-color-picker\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Overview\r\n\r\nColor Picker for Dnn\r\n\r\n## Properties\r\n\r\n| Property         | Attribute          | Description                                                                                | Type     | Default    |\r\n| ---------------- | ------------------ | ------------------------------------------------------------------------------------------ | -------- | ---------- |\r\n| `color`          | `color`            | Sets the initial color, must be a valid 8 character hexadecimal string without the # sign. | `string` | `"FFFFFF"` |\r\n| `colorBoxHeight` | `color-box-height` | Sets the width-height ratio of the color picker saturation-lightness box.                  | `string` | `"50%"`    |\r\n\r\n\r\n## Events\r\n\r\n| Event          | Description                                                     | Type                     |\r\n| -------------- | --------------------------------------------------------------- | ------------------------ |\r\n| `colorChanged` | Fires up when the color is changed and emits a ColorInfo object | `CustomEvent<ColorInfo>` |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{color:{control:"text"},colorBoxHeight:{control:"text"}}};var ColorPicker=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-color-picker\n            color=","\n            color-box-height=",">\n        </dnn-color-picker>\n    "])),Object(if_defined.a)(args.color),Object(if_defined.a)(args.colorBoxHeight))}.bind({});ColorPicker.args={color:"FFFFFF",colorBoxHeight:"50%"},ColorPicker.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-color-picker\r\n            color=${ifDefined(args.color)}\r\n            color-box-height=${ifDefined(args.colorBoxHeight)}>\r\n        </dnn-color-picker>\r\n    `"}},ColorPicker.parameters)},"./src/components/dnn-dropzone/dnn-dropzone.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Dropzone",(function(){return Dropzone}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Dropzone",component:"dnn-dropzone",parameters:{actions:{handles:["filesSelected"]},notes:'# dnn-dropzone\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property            | Attribute           | Description                                                                                                                                   | Type                                                                                                 | Default                                                                                                                                                        |\r\n| ------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| `allowCameraMode`   | `allow-camera-mode` | If true, will allow the user to take a snapshot using the device camera. (only works over https).                                             | `boolean`                                                                                            | `false`                                                                                                                                                        |\r\n| `allowedExtensions` | --                  | A list of allowed file extensions. If not specified, any file is allowed. Ex: ["jpg", "jped", "gif", "png"]                                   | `string[]`                                                                                           | `undefined`                                                                                                                                                    |\r\n| `captureQuality`    | `capture-quality`   | Specifies the jpeg quality for when the device camera is used to generate a picture. Needs to be a number between 0 and 1 and defaults to 0.8 | `number`                                                                                             | `0.8`                                                                                                                                                          |\r\n| `resx`              | --                  | Localization strings                                                                                                                          | `{ dragAndDropFile: string; capture: string; or: string; takePicture: string; uploadFile: string; }` | `{     dragAndDropFile: "Drag and drop a file",     capture: "Capture",     or: "or",     takePicture: "Take a picture",     uploadFile: "Upload a file",   }` |\r\n\r\n\r\n## Events\r\n\r\n| Event           | Description                    | Type                  |\r\n| --------------- | ------------------------------ | --------------------- |\r\n| `filesSelected` | Fires when file were selected. | `CustomEvent<File[]>` |\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                      | Description                                          |\r\n| ------------------------- | ---------------------------------------------------- |\r\n| `--border-color`          | The color of the border.                             |\r\n| `--border-radius`         | The radius of the controls borders.                  |\r\n| `--drop-background-color` | The color of the background when a file is dropping. |\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-image-cropper](../dnn-image-cropper)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-image-cropper --\x3e dnn-dropzone\r\n  style dnn-dropzone fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{allowedExtensions:{control:"text"},allowCameraMode:{control:"boolean"}},captureQuality:{options:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1],control:"number"}};var Dropzone=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-dropzone\n            .resx=","\n            allowed-extensions=","\n            ?allow-camera-mode=","\n            capture-quality=",">\n        </dnn-dropzone>\n    "])),args.resx,Object(if_defined.a)(args.allowedExtensions),Object(if_defined.a)(args.allCameraMode),Object(if_defined.a)(args.captureQuality))}.bind({});Dropzone.args={allowedExtensions:"jpg,jpeg,png,gif",allowCameraMode:!1,captureQuality:.8,resx:{dragAndDropFile:"Drag and drop a file",capture:"Capture",or:"or",takePicture:"Take a picture",uploadFile:"Upload a file"}},Dropzone.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-dropzone\r\n            .resx=${args.resx}\r\n            allowed-extensions=${ifDefined(args.allowedExtensions)}\r\n            ?allow-camera-mode=${ifDefined(args.allCameraMode)}\r\n            capture-quality=${ifDefined(args.captureQuality)}>\r\n        </dnn-dropzone>\r\n    `"}},Dropzone.parameters)},"./src/components/dnn-image-cropper/dnn-image-cropper.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ImageCropper",(function(){return ImageCropper}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Image Cropper",component:"dnn-image-cropper",parameters:{actions:{handles:["imageCropChanged"]},notes:'# dnn-image-cropper\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Overview\r\n\r\nAllows cropping an image in-browser with the option to enforce a specific final size.\r\nAll computation happens in the browser and the final image is emmited\r\nin an event that has a data-url of the image.\r\n\r\n## Properties\r\n\r\n| Property            | Attribute            | Description                                                                                                                                 | Type                                                                                                                                                | Default                                                                                                                                                                                                                                                                                                                                                                     |\r\n| ------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| `height`            | `height`             | Sets the desired final image height.                                                                                                        | `number`                                                                                                                                            | `600`                                                                                                                                                                                                                                                                                                                                                                       |\r\n| `preventUndersized` | `prevent-undersized` | When set to true, prevents cropping an image smaller than the required size, which would blow pixel and make the final picture look blurry. | `boolean`                                                                                                                                           | `false`                                                                                                                                                                                                                                                                                                                                                                     |\r\n| `quality`           | `quality`            | Sets the output quality of the corpped image (number between 0 and 1).                                                                      | `number`                                                                                                                                            | `0.8`                                                                                                                                                                                                                                                                                                                                                                       |\r\n| `resx`              | --                   | Can be used to customize controls text. Some values support tokens, see default values for examples.                                        | `{ capture: string; dragAndDropFile: string; or: string; takePicture: string; uploadFile: string; imageTooSmall: string; modalCloseText: string; }` | `{     capture: "Capture",     dragAndDropFile: "Drag and drop an image",     or: "or",     takePicture: "Take a picture",     uploadFile: "Upload an image",     imageTooSmall: "The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.",     modalCloseText: "Close",   }` |\r\n| `width`             | `width`              | Sets the desired final image width.                                                                                                         | `number`                                                                                                                                            | `600`                                                                                                                                                                                                                                                                                                                                                                       |\r\n\r\n\r\n## Events\r\n\r\n| Event              | Description                                                               | Type                  |\r\n| ------------------ | ------------------------------------------------------------------------- | --------------------- |\r\n| `imageCropChanged` | When the image crop changes, emits the dataurl for the new cropped image. | `CustomEvent<string>` |\r\n\r\n\r\n## Dependencies\r\n\r\n### Depends on\r\n\r\n- [dnn-dropzone](../dnn-dropzone)\r\n- [dnn-modal](../dnn-modal)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-image-cropper --\x3e dnn-dropzone\r\n  dnn-image-cropper --\x3e dnn-modal\r\n  style dnn-image-cropper fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{width:{control:"number"},height:{control:"number"},allowedExtensions:{control:"text"},quality:{options:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1],control:"number"},preventUndersized:{control:"boolean"}}};var ImageCropper=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-image-cropper\n            .resx=","\n            width=","\n            height=","\n            allowed-extensions=","\n            quality=","\n            ?prevent-undersized=",">\n        </dnn-image-cropper>\n    "])),args.resx,Object(if_defined.a)(args.width),Object(if_defined.a)(args.height),Object(if_defined.a)(args.allowedExtensions),Object(if_defined.a)(args.captureQuality),Object(if_defined.a)(args.preventUndersized))}.bind({});ImageCropper.args={width:600,height:600,allowedExtensions:"jpg,jpeg,png,gif",quality:.8,preventUndersized:!1,resx:{capture:"Capture",dragAndDropFile:"Drag and drop an image",or:"or",takePicture:"Take a picture",uploadFile:"Upload an image",imageTooSmall:"The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.",modalCloseText:"Close"}},ImageCropper.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-image-cropper\r\n            .resx=${args.resx}\r\n            width=${ifDefined(args.width)}\r\n            height=${ifDefined(args.height)}\r\n            allowed-extensions=${ifDefined(args.allowedExtensions)}\r\n            quality=${ifDefined(args.captureQuality)}\r\n            ?prevent-undersized=${ifDefined(args.preventUndersized)}>\r\n        </dnn-image-cropper>\r\n    `"}},ImageCropper.parameters)},"./src/components/dnn-modal/dnn-modal.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Modal",(function(){return Modal}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),unsafe_html=__webpack_require__("./node_modules/lit-html/directives/unsafe-html.js");__webpack_exports__.default={title:"Elements/Modal",component:"dnn-modal",parameters:{actions:{handles:["dismissed"]},notes:'# dnn-modal\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property          | Attribute           | Description                                                                                                                                                                                                         | Type      | Default         |\r\n| ----------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | --------------- |\r\n| `backdropDismiss` | `backdrop-dismiss`  | Pass false to remove the backdrop click auto-dismiss feature.                                                                                                                                                       | `boolean` | `true`          |\r\n| `closeText`       | `close-text`        | Optionally pass the aria-label text for the close button. Defaults to "Close modal" if not provided.                                                                                                                | `string`  | `"Close modal"` |\r\n| `showCloseButton` | `show-close-button` | Optionally you can pass false to not show the close button. If you decide to do so, you should either not also prevent dismissal by clicking the backdrop or provide your own dismissal logic in the modal content. | `boolean` | `true`          |\r\n| `visible`         | `visible`           | Reflects the visible state of the modal.                                                                                                                                                                            | `boolean` | `false`         |\r\n\r\n\r\n## Events\r\n\r\n| Event       | Description                        | Type               |\r\n| ----------- | ---------------------------------- | ------------------ |\r\n| `dismissed` | Fires when the modal is dismissed. | `CustomEvent<any>` |\r\n\r\n\r\n## Methods\r\n\r\n### `hide() => Promise<void>`\r\n\r\nHides the modal\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n### `show() => Promise<void>`\r\n\r\nShows the modal\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name          | Description                      |\r\n| ------------- | -------------------------------- |\r\n| `--max-width` | The maximum width of the module. |\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-button](../dnn-button)\r\n - [dnn-image-cropper](../dnn-image-cropper)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-button --\x3e dnn-modal\r\n  dnn-image-cropper --\x3e dnn-modal\r\n  style dnn-modal fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{"backdrop-dismiss":{control:"boolean"},"close-text":{control:"text"},"show-close-button":{control:"boolean"},visible:{control:"boolean"}}};var Modal=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-modal\n            ?backdrop-dismiss=","\n            close-text=","\n            ?show-close-button=","\n            ?visible=",">\n            ","\n        </dnn-modal>\n    "])),Object(if_defined.a)(args.backdropDismiss),Object(if_defined.a)(args.closeText),Object(if_defined.a)(args.showCloseButton),Object(if_defined.a)(args.visible),Object(unsafe_html.a)(args.slot))}.bind({});Modal.args={backdropDismiss:!0,closeText:"Close modal",showCloseButton:!0,visible:!0,slot:"<h1>Welcome to the DNN Modal</h1>\n        <p>This is a modal component that can be used to display content to the user.</p>"},Modal.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-modal\r\n            ?backdrop-dismiss=${ifDefined(args.backdropDismiss)}\r\n            close-text=${ifDefined(args.closeText)}\r\n            ?show-close-button=${ifDefined(args.showCloseButton)}\r\n            ?visible=${ifDefined(args.visible)}>\r\n            ${unsafeHTML(args.slot)}\r\n        </dnn-modal>\r\n    `"}},Modal.parameters)},"./src/components/dnn-monaco-editor/dnn-monaco-editor.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"MonacoEditor",(function(){return MonacoEditor}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Monaco Editor",component:"dnn-monaco-editor",parameters:{actions:{handles:[]},notes:"# dnn-monaco-editor\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property            | Attribute              | Description                                                                                                                                         | Type                                   | Default     |\r\n| ------------------- | ---------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------- | ----------- |\r\n| `loadFontFromLocal` | `load-font-from-local` | If set to true, then it is the responsibility of the consumer to have codicon.ttf in their distribution (e.g., ./assets/monaco-editor/codicon.ttf). | `boolean`                              | `false`     |\r\n| `options`           | --                     | Sets the monaco editor options, see monaco options.                                                                                                 | `IStandaloneEditorConstructionOptions` | `undefined` |\r\n\r\n\r\n## Events\r\n\r\n| Event           | Description                         | Type                |\r\n| --------------- | ----------------------------------- | ------------------- |\r\n| `editorDidLoad` | Event to indicate editor has loaded | `CustomEvent<void>` |\r\n\r\n\r\n## Methods\r\n\r\n### `getValue() => Promise<string>`\r\n\r\nGet value of the current model attached to this editor.\r\n\r\n#### Returns\r\n\r\nType: `Promise<string>`\r\n\r\n\r\n\r\n### `setFocus() => Promise<void>`\r\n\r\nSet focus to editor\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n### `setValue(newValue: string) => Promise<void>`\r\n\r\nSets a new editor value.\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n### `updateLanguage(languageId: string) => Promise<void>`\r\n\r\nUpdate code language editor\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                     | Description                           |\r\n| ------------------------ | ------------------------------------- |\r\n| `--monaco-editor-height` | height of the editor, default is 50vh |\r\n| `--monaco-editor-width`  | width of the editor, default is 100%  |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n"},argTypes:{}};var MonacoEditor=function Template(){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n<script>\n    self.MonacoEnvironment = {\n        getWorkerUrl: function (_moduleId, label) {\n            if (label === 'json') {\n                return './dnn/json.worker.js';\n            }\n            if (label === 'css' || label === 'scss' || label === 'less') {\n                return './dnn/css.worker.js';\n            }\n            if (label === 'html' || label === 'handlebars' || label === 'razor') {\n                return './dnn/html.worker.js';\n            }\n            if (label === 'typescript' || label === 'javascript') {\n                return './dnn/ts.worker.js';\n            }\n            return './dnn/editor.worker.js';\n        }\n    };\n<\/script>\n<dnn-monaco-editor>\n    <code>\nexport interface Employee{\n  firstName: string;\n  lastName: string;\n  fullName(): string;\n}\n\nlet employee: Employee = {\n  firstName : \"jane\",\n  lastName: \"doe\",\n  fullName(): string{\n    return this.firstName + \" \" + this.lastName;\n  }\n}\n\nconsole.log(employee.firstName);\nconsole.log(employee.lastName);\nconsole.log(employee.fullName());\n    </code>\n</dnn-monaco-editor>\n    "])))}.bind({});MonacoEditor.args={},MonacoEditor.parameters=Object.assign({storySource:{source:"() =>\r\n    html`\r\n<script>\r\n    self.MonacoEnvironment = {\r\n        getWorkerUrl: function (_moduleId, label) {\r\n            if (label === 'json') {\r\n                return './dnn/json.worker.js';\r\n            }\r\n            if (label === 'css' || label === 'scss' || label === 'less') {\r\n                return './dnn/css.worker.js';\r\n            }\r\n            if (label === 'html' || label === 'handlebars' || label === 'razor') {\r\n                return './dnn/html.worker.js';\r\n            }\r\n            if (label === 'typescript' || label === 'javascript') {\r\n                return './dnn/ts.worker.js';\r\n            }\r\n            return './dnn/editor.worker.js';\r\n        }\r\n    };\r\n<\/script>\r\n<dnn-monaco-editor>\r\n    <code>\r\nexport interface Employee{\r\n  firstName: string;\r\n  lastName: string;\r\n  fullName(): string;\r\n}\r\n\r\nlet employee: Employee = {\r\n  firstName : \"jane\",\r\n  lastName: \"doe\",\r\n  fullName(): string{\r\n    return this.firstName + \" \" + this.lastName;\r\n  }\r\n}\r\n\r\nconsole.log(employee.firstName);\r\nconsole.log(employee.lastName);\r\nconsole.log(employee.fullName());\r\n    </code>\r\n</dnn-monaco-editor>\r\n    `"}},MonacoEditor.parameters)},"./src/components/dnn-permissions-grid/dnn-permissions-grid.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"PermissionsGrid",(function(){return PermissionsGrid}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Permissions Grid",component:"dnn-permissions-grid",parameters:{notes:'# dnn-permissions-grid\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property                   | Attribute | Description                                                                        | Type              | Default                                                                                                                                                                                                                                                                        |\r\n| -------------------------- | --------- | ---------------------------------------------------------------------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r\n| `foundUsers`               | --        | The list of users to show under the search users field when a search is performed. | `ISearchedUser[]` | `[]`                                                                                                                                                                                                                                                                           |\r\n| `permissions` _(required)_ | --        | The list of permissions.                                                           | `IPermissions`    | `undefined`                                                                                                                                                                                                                                                                    |\r\n| `resx`                     | --        | Optionally allows localizing the component strings.                                | `ILocalization`   | `{     Add: "Add",     AllRoles: "All Roles",     FilterByGroup: "Filter By Group",     GlobalRoles: "Global Roles",     Role: "Role",     RolePermissions: "Role Permissions",     SelectRole: "Select Role",     User: "User",     UserPermissions: "User Permissions",   }` |\r\n| `roleGroups` _(required)_  | --        | The list of role groups.                                                           | `IRoleGroup[]`    | `undefined`                                                                                                                                                                                                                                                                    |\r\n| `roles` _(required)_       | --        | The list of possible roles.                                                        | `IRole[]`         | `undefined`                                                                                                                                                                                                                                                                    |\r\n\r\n\r\n## Events\r\n\r\n| Event                    | Description                                                                                   | Type                        |\r\n| ------------------------ | --------------------------------------------------------------------------------------------- | --------------------------- |\r\n| `permissionsChanged`     | Fires when any permissions have changed, can be used for instance to have linked permissions. | `CustomEvent<IPermissions>` |\r\n| `userSearchQueryChanged` | Fires when searching for users to add to the permissions. Emits the search query.             | `CustomEvent<string>`       |\r\n\r\n\r\n## Dependencies\r\n\r\n### Depends on\r\n\r\n- [dnn-checkbox](../dnn-checkbox)\r\n- [dnn-button](../dnn-button)\r\n- [dnn-searchbox](../dnn-searchbox)\r\n- [dnn-collapsible](../dnn-collapsible)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-permissions-grid --\x3e dnn-checkbox\r\n  dnn-permissions-grid --\x3e dnn-button\r\n  dnn-permissions-grid --\x3e dnn-searchbox\r\n  dnn-permissions-grid --\x3e dnn-collapsible\r\n  dnn-button --\x3e dnn-modal\r\n  dnn-button --\x3e dnn-button\r\n  style dnn-permissions-grid fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n',actions:{handles:["userSearchQueryChanged","permissionsChanged"]}}};var users=[{userId:1,displayName:"Georgena Menico"},{userId:2,displayName:"Ibbie Swindin"},{userId:3,displayName:"Wynn Mc Queen"},{userId:4,displayName:"Emmett Buckthought"},{userId:5,displayName:"Claudianus Aizikov"},{userId:6,displayName:"Burlie D'eathe"},{userId:7,displayName:"Fabio Hysom"},{userId:8,displayName:"Raeann Finker"},{userId:9,displayName:"Kevin Craigmyle"},{userId:10,displayName:"Beaufort MacCoughen"},{userId:11,displayName:"Marcus Ropars"},{userId:12,displayName:"Barnebas Mallinar"},{userId:13,displayName:"Cally McGerr"},{userId:14,displayName:"Claiborn Tather"},{userId:15,displayName:"Adrianna Borsi"},{userId:16,displayName:"Bill De Vuyst"},{userId:17,displayName:"Ervin Kinane"},{userId:18,displayName:"Pam Friel"},{userId:19,displayName:"Garry Twiddle"},{userId:20,displayName:"Loni Mabey"},{userId:21,displayName:"Gerard McGarrie"},{userId:22,displayName:"Claudina McCathy"},{userId:23,displayName:"Bryanty Amorts"},{userId:24,displayName:"Orren Siaskowski"},{userId:25,displayName:"Daisie Barr"},{userId:26,displayName:"Elsbeth Senett"},{userId:27,displayName:"Celestine Cawley"},{userId:28,displayName:"Desmond Cuphus"},{userId:29,displayName:"Ignaz Lewisham"},{userId:30,displayName:"Paola Odams"},{userId:31,displayName:"Nicolais Ducker"},{userId:32,displayName:"Camile McNab"},{userId:33,displayName:"Binni Acreman"},{userId:34,displayName:"Zonda O' Lone"},{userId:35,displayName:"Theressa McCawley"},{userId:36,displayName:"Mareah Heakins"},{userId:37,displayName:"Pasquale Bagworth"},{userId:38,displayName:"Veronike Capey"},{userId:39,displayName:"Jed Kubczak"},{userId:40,displayName:"Stephanus Ricciardelli"},{userId:41,displayName:"Carey Coldman"},{userId:42,displayName:"Shirlee Belliss"},{userId:43,displayName:"Kai Capponeer"},{userId:44,displayName:"Lockwood Pilling"},{userId:45,displayName:"Olga Puleque"},{userId:46,displayName:"Cleon Piccard"},{userId:47,displayName:"Al Rousel"},{userId:48,displayName:"Ida Coltart"},{userId:49,displayName:"Pennie Housley"},{userId:50,displayName:"Lind Ikringill"}],handleUserSearchChanged=function handleUserSearchChanged(e){var query=e.detail,results=users.filter((function(u){return u.displayName.includes(query)}));document.querySelector("dnn-permissions-grid").foundUsers=results},PermissionsGrid=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-permissions-grid\n            .permissions=","\n            .roles=","\n            .roleGroups=",'\n            @userSearchQueryChanged="','"\n        />\n    '])),args.permissions,args.roles,args.roleGroups,handleUserSearchChanged)}.bind({});PermissionsGrid.args={permissions:{permissionDefinitions:[{permissionId:8,permissionName:"Browse Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!1},{permissionId:5,permissionName:"View Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!1},{permissionId:6,permissionName:"Write to Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!1}],rolePermissions:[{roleId:0,roleName:"Administrators",permissions:[{permissionId:8,permissionName:"Browse Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0},{permissionId:5,permissionName:"View Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0},{permissionId:6,permissionName:"Write to Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0}],locked:!0,default:!0},{roleId:-1,roleName:"All Users",permissions:[{permissionId:8,permissionName:"Browse Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0},{permissionId:5,permissionName:"View Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0}],locked:!1,default:!0},{roleId:1,roleName:"Registered Users",permissions:[],locked:!1,default:!0}],userPermissions:[{userId:2,displayName:"Daniel Valadas",permissions:[{permissionId:8,permissionName:"Browse Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0},{permissionId:5,permissionName:"View Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0},{permissionId:6,permissionName:"Write to Folder",permissionKey:null,permissionCode:null,fullControl:!1,view:!1,allowAccess:!0}]}]},roles:[{IsSystemRole:!0,RoleId:0,RoleGroupId:-1,RoleName:"Administrators"},{IsSystemRole:!0,RoleId:1,RoleGroupId:-1,RoleName:"Registered Users"},{IsSystemRole:!0,RoleId:5,RoleGroupId:-1,RoleName:"Translator (fr-FR)"},{IsSystemRole:!0,RoleId:-3,RoleGroupId:-1,RoleName:"Unauthenticated Users"},{IsSystemRole:!1,RoleId:10,RoleGroupId:1,RoleName:"Test Role"},{IsSystemRole:!1,RoleId:11,RoleGroupId:2,RoleName:"Another test role"}],roleGroups:[{id:0,name:"Test group",rolesCount:0,description:"This is a a test role group"},{id:1,name:"Another test group",rolesCount:0,description:"Another test role."}]},PermissionsGrid.parameters=Object.assign({storySource:{source:'(args: {\r\n    permissions: IPermissions\r\n    roles: IRole[],\r\n    roleGroups: IRoleGroup[],\r\n    }) =>\r\n    html`\r\n        <dnn-permissions-grid\r\n            .permissions=${args.permissions}\r\n            .roles=${args.roles}\r\n            .roleGroups=${args.roleGroups}\r\n            @userSearchQueryChanged="${handleUserSearchChanged}"\r\n        />\r\n    `'}},PermissionsGrid.parameters)},"./src/components/dnn-searchbox/dnn-searchbox.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Searchbox",(function(){return Searchbox}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js");__webpack_exports__.default={title:"Elements/Searchbox",component:"dnn-searchbox",parameters:{notes:'# dnn-searchbox\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property      | Attribute     | Description                          | Type      | Default |\r\n| ------------- | ------------- | ------------------------------------ | --------- | ------- |\r\n| `debounced`   | `debounced`   | Debounces the queryChanged by 500ms. | `boolean` | `true`  |\r\n| `placeholder` | `placeholder` | Sets the field placeholder text.     | `string`  | `""`    |\r\n| `query`       | `query`       | Sets the query                       | `string`  | `""`    |\r\n\r\n\r\n## Events\r\n\r\n| Event          | Description                                                                    | Type                  |\r\n| -------------- | ------------------------------------------------------------------------------ | --------------------- |\r\n| `queryChanged` | Fires up each time the search query changes. The data passed is the new query. | `CustomEvent<string>` |\r\n\r\n\r\n## Dependencies\r\n\r\n### Used by\r\n\r\n - [dnn-permissions-grid](../dnn-permissions-grid)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-permissions-grid --\x3e dnn-searchbox\r\n  style dnn-searchbox fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n',actions:{handles:["queryChanged"]}}};var Searchbox=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-searchbox\n            ?debounced=","\n            placeholder=","\n            query=","\n        />\n    "])),args.debounced,args.placeholder,args.query)}.bind({});Searchbox.args={debounced:!0,placeholder:"Search",query:""},Searchbox.parameters=Object.assign({storySource:{source:"(args : {\r\n    debounced: boolean,\r\n    placeholder: string,\r\n    query: string,\r\n}) =>\r\n    html`\r\n        <dnn-searchbox\r\n            ?debounced=${args.debounced}\r\n            placeholder=${args.placeholder}\r\n            query=${args.query}\r\n        />\r\n    `"}},Searchbox.parameters)},"./src/components/dnn-sort-icon/dnn-sort-icon.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SortIcon",(function(){return SortIcon}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),utilities=__webpack_require__("./.storybook/utilities.js");__webpack_exports__.default={title:"Elements/Sort Icon",component:"dnn-sort-icon",parameters:{notes:'# dnn-sort-icon\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property        | Attribute        | Description                        | Type                        | Default  |\r\n| --------------- | ---------------- | ---------------------------------- | --------------------------- | -------- |\r\n| `sortDirection` | `sort-direction` | Defines the current sort direction | `"asc" \\| "desc" \\| "none"` | `"none"` |\r\n\r\n\r\n## Events\r\n\r\n| Event         | Description                       | Type                                     |\r\n| ------------- | --------------------------------- | ---------------------------------------- |\r\n| `sortChanged` | Emitted when the sort is changed. | `CustomEvent<"asc" \\| "desc" \\| "none">` |\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name             | Description                             |\r\n| ---------------- | --------------------------------------- |\r\n| `--color`        | Normal Color of the inactive sort icon. |\r\n| `--color-hover`  | Color of the icons when hovered.        |\r\n| `--color-sorted` | Color of the sorted sort icon.          |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n',actions:{handles:["sortChanged"]}},argTypes:{sortDirection:{options:["asc","desc","none"],control:{type:"radio"},defaultValue:"none"},"sort-direction":{options:["asc","desc","none"],control:{type:"radio"},defaultValue:"none"},"--color":{control:{type:"color"}},"--color-hover":{control:{type:"color"}},"--color-sorted":{control:{type:"color"}}}};var SortIcon=function Template(args,context){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n            <dnn-sort-icon\n                style=","\n                .sortDirection=","\n            />\n        "])),Object(if_defined.a)(Object(utilities.a)(args,context)),Object(if_defined.a)(args.sortDirection))}.bind({});SortIcon.args={sortDirection:"none"},SortIcon.parameters=Object.assign({storySource:{source:'(args: {\r\n    sortDirection: "asc" | "desc" | "none",\r\n    color: string;\r\n}, context) =>\r\n    {\r\n        return html`\r\n            <dnn-sort-icon\r\n                style=${ifDefined(injectStyles(args, context))}\r\n                .sortDirection=${ifDefined(args.sortDirection)}\r\n            />\r\n        `;\r\n    }'}},SortIcon.parameters)},"./src/components/dnn-tab/dnn-tab.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Tab",(function(){return Tab}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Tab",component:"dnn-tab",parameters:{notes:'# dnn-tab\r\n\r\n`dnn-tab` should only be used as part of `dnn-tabs` in order to define the title and content of each of the tabs.\r\n\r\n## Example usage\r\n```html\r\n<dnn-tabs>\r\n    <dnn-tab tab-title="First Tab">\r\n        <p>Content of the first tab.</p>\r\n    </dnn-tab>\r\n    <dnn-tab tab-title="Second Tab">\r\n        <p>This is the second tab<p>\r\n    </dnn-tab>\r\n</dnn-tabs>\r\n```\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Overview\r\n\r\nRepresents a single tab and must be used inside a dnn-tabs element.\r\n\r\n## Properties\r\n\r\n| Property                | Attribute   | Description            | Type     | Default     |\r\n| ----------------------- | ----------- | ---------------------- | -------- | ----------- |\r\n| `tabTitle` _(required)_ | `tab-title` | Defines the tab title. | `string` | `undefined` |\r\n\r\n\r\n## Methods\r\n\r\n### `hide() => Promise<void>`\r\n\r\nHides the modal\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n### `show() => Promise<void>`\r\n\r\nShows the tab.\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{"tab-title":{control:"text"}}};var Tab=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-tab\n            tab-title=",">\n        </dnn-tab>\n    "])),Object(if_defined.a)(args.tabTitle))}.bind({});Tab.args={tabTitle:"My Tab"},Tab.parameters=Object.assign({storySource:{source:"(args) =>\r\n    html`\r\n        <dnn-tab\r\n            tab-title=${ifDefined(args.tabTitle)}>\r\n        </dnn-tab>\r\n    `"}},Tab.parameters)},"./src/components/dnn-tabs/dnn-tabs.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Tabs",(function(){return Tabs}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),utilities=__webpack_require__("./.storybook/utilities.js");__webpack_exports__.default={title:"Elements/Tabs",component:"dnn-tabs",parameters:{notes:'# dnn-tabs\r\n\r\n`dnn-tabs` is a container for `dnn-tab` and should only contain `dnn-tab` elements for its content.\r\n\r\n## Example usage\r\n```html\r\n<dnn-tabs>\r\n    <dnn-tab tab-title="First Tab">\r\n        <p>Content of the first tab.</p>\r\n    </dnn-tab>\r\n    <dnn-tab tab-title="Second Tab">\r\n        <p>This is the second tab<p>\r\n    </dnn-tab>\r\n</dnn-tabs>\r\n```\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                   | Description                                         |\r\n| ---------------------- | --------------------------------------------------- |\r\n| `--color-background`   | The color of the inactive tabs.                     |\r\n| `--color-focus`        | outline color when hovering or pre-selecting a tab. |\r\n| `--color-text`         | The color of the text for inactive tabs.            |\r\n| `--color-visible`      | The color of the active tab.                        |\r\n| `--color-visible-text` | The color of the text for the active tab.           |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{"--color-background":{control:"color"},"--color-focus":{control:"color"},"--color-text":{control:"color"},"--color-visible":{control:"color"},"--color-visible-text":{control:"color"}}};var Tabs=function Template(args,context){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['\n<style type="text/css">\n    dnn-tab p{\n        margin: 1em;\n    }\n</style>\n<dnn-tabs style=','>\n    <dnn-tab tab-title="Lorem Ipsum">\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla hendrerit nisl vel aliquam cursus. Fusce tincidunt vitae mi a malesuada. Praesent eros mi, semper ut orci quis, faucibus viverra felis. Cras non lacus vehicula, fermentum felis id, dictum diam. Proin congue urna est, ac viverra ligula sagittis eu. Proin diam libero, vulputate egestas dui at, molestie dictum dolor. Fusce varius ex vitae massa pulvinar, ut hendrerit enim molestie. Aliquam volutpat facilisis ipsum, nec mollis elit dapibus eu. Donec scelerisque interdum tristique. Aliquam accumsan sem urna, vel posuere dui faucibus et. Mauris quis rutrum massa.</p>\n        <p>Curabitur nisl tortor, egestas a lacus eu, consectetur ornare erat. Praesent auctor ante gravida rutrum dictum. Praesent congue in enim sed ornare. In at ultrices mauris. Donec vulputate ante vel lectus ullamcorper varius. Nullam ac dui velit. Quisque porttitor, eros id interdum posuere, turpis nisi convallis ex, quis venenatis massa eros sit amet ex. Donec sem quam, consectetur at consectetur quis, suscipit sit amet ligula. Morbi nec lectus iaculis, dapibus lorem eget, molestie dui. Sed porttitor lacus ut hendrerit vulputate. Cras efficitur nec ligula ut lobortis. Cras aliquam, magna ac condimentum ullamcorper, sapien dolor varius sapien, sed volutpat lorem felis et nulla.</p>\n    </dnn-tab>\n    <dnn-tab tab-title="Bacon Ipsum">\n        <p>Bacon ipsum dolor amet kielbasa kevin prosciutto andouille doner burgdoggen ham. Flank pork belly ham landjaeger venison, cow chicken andouille. Frankfurter pork swine alcatra meatloaf drumstick capicola. Sausage landjaeger strip steak swine ribeye kielbasa. Kevin tongue andouille drumstick landjaeger shank porchetta pork beef sirloin fatback. Prosciutto tri-tip burgdoggen, chislic ham flank bresaola shank tenderloin. Capicola pancetta sirloin hamburger cupim, shankle ground round kevin flank landjaeger meatball chuck beef short ribs ball tip.</p>\n        <p>Turducken leberkas doner, hamburger venison meatloaf sausage cow pork chop pork strip steak short ribs salami alcatra beef. Pastrami tenderloin sausage turkey hamburger pork sirloin pork belly burgdoggen spare ribs bacon jowl. Tail spare ribs filet mignon kevin, swine flank drumstick jerky pork loin beef ribs pork belly fatback ground round. Short ribs tail jowl jerky kevin, cow burgdoggen pancetta. Corned beef tri-tip pastrami pork chop bresaola chuck.</p>\n    </dnn-tab>\n    <dnn-tab tab-title="CupCake Ipsum">\n        <p>Candy cookie pie caramels soufflé danish. Wafer cake gummies soufflé biscuit dragée cheesecake cheesecake. Cookie tart fruitcake oat cake bear claw macaroon jelly beans. Sesame snaps sugar plum sugar plum halvah shortbread chocolate bar pastry. Wafer caramels cake marzipan oat cake apple pie cake halvah cake. Lollipop muffin gummies jujubes lollipop topping bonbon pastry.</p>\n        <p>Gingerbread sesame snaps toffee cake cheesecake gummies cake. Danish cake sweet sweet roll oat cake gummi bears shortbread bear claw. Croissant gummi bears cake danish tart gingerbread tootsie roll carrot cake jelly beans. Liquorice biscuit pastry cake carrot cake marzipan. Brownie gummies halvah chocolate cake donut. Gummi bears cotton candy jujubes macaroon gingerbread.</p>\n    </dnn-tab>\n</dnn-tabs>\n    '])),Object(if_defined.a)(Object(utilities.a)(args,context)))}.bind({});Tabs.parameters=Object.assign({storySource:{source:'(args: {}, context) => {\r\n \r\n    return html`\r\n<style type="text/css">\r\n    dnn-tab p{\r\n        margin: 1em;\r\n    }\r\n</style>\r\n<dnn-tabs style=${ifDefined(injectStyles(args, context))}>\r\n    <dnn-tab tab-title="Lorem Ipsum">\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla hendrerit nisl vel aliquam cursus. Fusce tincidunt vitae mi a malesuada. Praesent eros mi, semper ut orci quis, faucibus viverra felis. Cras non lacus vehicula, fermentum felis id, dictum diam. Proin congue urna est, ac viverra ligula sagittis eu. Proin diam libero, vulputate egestas dui at, molestie dictum dolor. Fusce varius ex vitae massa pulvinar, ut hendrerit enim molestie. Aliquam volutpat facilisis ipsum, nec mollis elit dapibus eu. Donec scelerisque interdum tristique. Aliquam accumsan sem urna, vel posuere dui faucibus et. Mauris quis rutrum massa.</p>\r\n        <p>Curabitur nisl tortor, egestas a lacus eu, consectetur ornare erat. Praesent auctor ante gravida rutrum dictum. Praesent congue in enim sed ornare. In at ultrices mauris. Donec vulputate ante vel lectus ullamcorper varius. Nullam ac dui velit. Quisque porttitor, eros id interdum posuere, turpis nisi convallis ex, quis venenatis massa eros sit amet ex. Donec sem quam, consectetur at consectetur quis, suscipit sit amet ligula. Morbi nec lectus iaculis, dapibus lorem eget, molestie dui. Sed porttitor lacus ut hendrerit vulputate. Cras efficitur nec ligula ut lobortis. Cras aliquam, magna ac condimentum ullamcorper, sapien dolor varius sapien, sed volutpat lorem felis et nulla.</p>\r\n    </dnn-tab>\r\n    <dnn-tab tab-title="Bacon Ipsum">\r\n        <p>Bacon ipsum dolor amet kielbasa kevin prosciutto andouille doner burgdoggen ham. Flank pork belly ham landjaeger venison, cow chicken andouille. Frankfurter pork swine alcatra meatloaf drumstick capicola. Sausage landjaeger strip steak swine ribeye kielbasa. Kevin tongue andouille drumstick landjaeger shank porchetta pork beef sirloin fatback. Prosciutto tri-tip burgdoggen, chislic ham flank bresaola shank tenderloin. Capicola pancetta sirloin hamburger cupim, shankle ground round kevin flank landjaeger meatball chuck beef short ribs ball tip.</p>\r\n        <p>Turducken leberkas doner, hamburger venison meatloaf sausage cow pork chop pork strip steak short ribs salami alcatra beef. Pastrami tenderloin sausage turkey hamburger pork sirloin pork belly burgdoggen spare ribs bacon jowl. Tail spare ribs filet mignon kevin, swine flank drumstick jerky pork loin beef ribs pork belly fatback ground round. Short ribs tail jowl jerky kevin, cow burgdoggen pancetta. Corned beef tri-tip pastrami pork chop bresaola chuck.</p>\r\n    </dnn-tab>\r\n    <dnn-tab tab-title="CupCake Ipsum">\r\n        <p>Candy cookie pie caramels soufflé danish. Wafer cake gummies soufflé biscuit dragée cheesecake cheesecake. Cookie tart fruitcake oat cake bear claw macaroon jelly beans. Sesame snaps sugar plum sugar plum halvah shortbread chocolate bar pastry. Wafer caramels cake marzipan oat cake apple pie cake halvah cake. Lollipop muffin gummies jujubes lollipop topping bonbon pastry.</p>\r\n        <p>Gingerbread sesame snaps toffee cake cheesecake gummies cake. Danish cake sweet sweet roll oat cake gummi bears shortbread bear claw. Croissant gummi bears cake danish tart gingerbread tootsie roll carrot cake jelly beans. Liquorice biscuit pastry cake carrot cake marzipan. Brownie gummies halvah chocolate cake donut. Gummi bears cotton candy jujubes macaroon gingerbread.</p>\r\n    </dnn-tab>\r\n</dnn-tabs>\r\n    `;\r\n}'}},Tabs.parameters)},"./src/components/dnn-toggle/dnn-toggle.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Toggle",(function(){return Toggle}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),utilities=__webpack_require__("./.storybook/utilities.js");__webpack_exports__.default={title:"Elements/Toggle",component:"dnn-toggle",parameters:{actions:{handles:["checkChanged"]},notes:"# dnn-toggle\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property   | Attribute  | Description                                     | Type      | Default |\r\n| ---------- | ---------- | ----------------------------------------------- | --------- | ------- |\r\n| `checked`  | `checked`  | If 'true' the toggle is checked (on).           | `boolean` | `false` |\r\n| `disabled` | `disabled` | If 'true' the toggle is not be interacted with. | `boolean` | `false` |\r\n\r\n\r\n## Events\r\n\r\n| Event          | Description                   | Type                                      |\r\n| -------------- | ----------------------------- | ----------------------------------------- |\r\n| `checkChanged` | Fires when the toggle changed | `CustomEvent<DnnToggleChangeEventDetail>` |\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                          | Description                            |\r\n| ----------------------------- | -------------------------------------- |\r\n| `--background`                | Background of the toggle.              |\r\n| `--background-checked`        | Background of the toggle when checked. |\r\n| `--border-radius`             | The radius of the background borders.  |\r\n| `--handle-background`         | Background of the handle.              |\r\n| `--handle-background-checked` | Background of the handle when checked. |\r\n| `--handle-border-radius`      | The radius of the handle.              |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n"},argTypes:{checked:{control:"boolean"},disabled:{control:"boolean"},"--background":{control:"color"},"--background-checked":{control:"color"},"--handle-background":{control:"color"},"--handle-background-checked":{control:"color"},"--border-radius":{control:"text"},"--handle-border-radius":{control:"text"}}};var Toggle=function Template(args,context){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-toggle\n            style=","\n            ?checked=","\n            ?disabled=",">\n        </dnn-toggle>\n    "])),Object(if_defined.a)(Object(utilities.a)(args,context)),Object(if_defined.a)(args.checked),Object(if_defined.a)(args.disabled))}.bind({});Toggle.args={checked:!1,disabled:!1},Toggle.parameters=Object.assign({storySource:{source:"(args: {\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}, context) =>\r\n    html`\r\n        <dnn-toggle\r\n            style=${ifDefined(injectStyles(args, context))}\r\n            ?checked=${ifDefined(args.checked)}\r\n            ?disabled=${ifDefined(args.disabled)}>\r\n        </dnn-toggle>\r\n    `"}},Toggle.parameters)},"./src/components/dnn-treeview-item/dnn-treeview-item.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"TreeviewItem",(function(){return TreeviewItem}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js");__webpack_exports__.default={title:"Elements/Treeview Item",component:"dnn-treeview-item",parameters:{notes:'# dnn-treeview-item\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property   | Attribute  | Description                              | Type      | Default |\r\n| ---------- | ---------- | ---------------------------------------- | --------- | ------- |\r\n| `expanded` | `expanded` | Defines if the current node is expanded. | `boolean` | `false` |\r\n\r\n\r\n## Events\r\n\r\n| Event           | Description                           | Type                |\r\n| --------------- | ------------------------------------- | ------------------- |\r\n| `userCollapsed` | Fires when the user collapses a node. | `CustomEvent<void>` |\r\n| `userExpanded`  | Fires when the user expands a node.   | `CustomEvent<void>` |\r\n\r\n\r\n## Slots\r\n\r\n| Slot         | Description                         |\r\n| ------------ | ----------------------------------- |\r\n|              | The content of this node.           |\r\n| `"children"` | The content nested under this node. |\r\n\r\n\r\n## Dependencies\r\n\r\n### Depends on\r\n\r\n- [dnn-collapsible](../dnn-collapsible)\r\n\r\n### Graph\r\n```mermaid\r\ngraph TD;\r\n  dnn-treeview-item --\x3e dnn-collapsible\r\n  style dnn-treeview-item fill:#f9f,stroke:#333,stroke-width:4px\r\n```\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{expanded:{control:"boolean"}}};var TreeviewItem=function Template(args){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n        <dnn-treeview-item\n            ?expanded=",'\n        >\n            <span>Root Item</span>\n            <dnn-treeview-item slot="children">\n                <span>Child 1</span>\n            </dnn-treeview-item>\n            <dnn-treeview-item slot="children">\n                <span>Child 2</span>\n            </dnn-treeview-item>\n            <dnn-treeview-item slot="children">\n                <span>Child 3</span>\n            </dnn-treeview-item>\n        </dnn-treeview-item>\n    '])),Object(if_defined.a)(args.expanded))}.bind({});TreeviewItem.args={expanded:!1},TreeviewItem.parameters=Object.assign({storySource:{source:'(args: {\r\n    expanded: boolean,\r\n}) =>\r\n    html`\r\n        <dnn-treeview-item\r\n            ?expanded=${ifDefined(args.expanded)}\r\n        >\r\n            <span>Root Item</span>\r\n            <dnn-treeview-item slot="children">\r\n                <span>Child 1</span>\r\n            </dnn-treeview-item>\r\n            <dnn-treeview-item slot="children">\r\n                <span>Child 2</span>\r\n            </dnn-treeview-item>\r\n            <dnn-treeview-item slot="children">\r\n                <span>Child 3</span>\r\n            </dnn-treeview-item>\r\n        </dnn-treeview-item>\r\n    `'}},TreeviewItem.parameters)},"./src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"VerticalOverflowMenu",(function(){return VerticalOverflowMenu}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),utilities=__webpack_require__("./.storybook/utilities.js");__webpack_exports__.default={title:"Elements/Vertical Overflow Menu",component:"dnn-vertical-overflow-menu",parameters:{notes:"# dnn-vertical-overflow-menu\r\n\r\n\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                 | Description                                       |\r\n| -------------------- | ------------------------------------------------- |\r\n| `--background-color` | Defines the menu background color.                |\r\n| `--foreground-color` | A color that contrasts with the background color. |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n"},argTypes:{"--background-color":{control:"color"},"--foreground-color":{control:"color"}}};var VerticalOverflowMenu=function Template(args,context){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['\n<style type="text/css">\n    dnn-vertical-overflow-menu svg{\n        fill: #3792ED;\n    }\n    dnn-vertical-overflow-menu button{\n        display: flex;\n        align-items: center;\n    }\n    dnn-vertical-overflow-menu a{\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: black;\n    }\n</style>\n<dnn-vertical-overflow-menu\n    style=','>\n    <button>\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"/></svg>\n        <span>Create a new item</span>\n        </button>\n    <a href="#">\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"/></svg>\n        <span>Copy an item</span>\n    </a>\n    <a href="#">\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><circle cx="6" cy="18" fill="none" r="2"/><circle cx="12" cy="12" fill="none" r=".5"/><circle cx="6" cy="6" fill="none" r="2"/><path d="M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z"/></svg>\n        <span>Cut an item</span>\n    </a>\n    <a href="#">\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z"/></svg>\n        <span>Paste an item</span>\n    </a>\n    <a href="#">\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"/></svg>\n        <span>Save the item</span>\n    </a>\n</dnn-vertical-overflow-menu>\n    '])),Object(utilities.a)(args,context))}.bind({});VerticalOverflowMenu.parameters=Object.assign({storySource:{source:'(args: {}, context) => \r\n    html`\r\n<style type="text/css">\r\n    dnn-vertical-overflow-menu svg{\r\n        fill: #3792ED;\r\n    }\r\n    dnn-vertical-overflow-menu button{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    dnn-vertical-overflow-menu a{\r\n        display: flex;\r\n        align-items: center;\r\n        text-decoration: none;\r\n        color: black;\r\n    }\r\n</style>\r\n<dnn-vertical-overflow-menu\r\n    style=${injectStyles(args, context)}>\r\n    <button>\r\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"/></svg>\r\n        <span>Create a new item</span>\r\n        </button>\r\n    <a href="#">\r\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"/></svg>\r\n        <span>Copy an item</span>\r\n    </a>\r\n    <a href="#">\r\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><circle cx="6" cy="18" fill="none" r="2"/><circle cx="12" cy="12" fill="none" r=".5"/><circle cx="6" cy="6" fill="none" r="2"/><path d="M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z"/></svg>\r\n        <span>Cut an item</span>\r\n    </a>\r\n    <a href="#">\r\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z"/></svg>\r\n        <span>Paste an item</span>\r\n    </a>\r\n    <a href="#">\r\n        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#000000"><path d="M0 0h24v24H0z" fill="none"/><path d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"/></svg>\r\n        <span>Save the item</span>\r\n    </a>\r\n</dnn-vertical-overflow-menu>\r\n    `'}},VerticalOverflowMenu.parameters)},"./src/components/dnn-vertical-splitview/dnn-vertical-splitview.stories.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"VerticalSplitview",(function(){return VerticalSplitview}));__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,lit_html=__webpack_require__("./node_modules/lit-html/lit-html.js"),if_defined=__webpack_require__("./node_modules/lit-html/directives/if-defined.js"),utilities=__webpack_require__("./.storybook/utilities.js");__webpack_exports__.default={title:"Elements/Vertical Splitview",component:"dnn-vertical-splitview",parameters:{actions:{handles:["widthChanged"]},notes:'# dnn-vertical-splitview\r\nThis allows splitting a UI into vertical adjustable panels, the splitter itself is not part of this component.\r\n- The content for the left part should be injected in the `left` slot.\r\n- The content for the right part should be injected in the `right` slot.\r\n- The content for the actual splitter should go in the default slot and other UI elements can be injected as long as you handle their behaviour, by default only the drag behavior is implemented in the component.\r\n\r\n## Usage example\r\n```html\r\n<dnn-vertical-splitview id="split-view-demo" style="border: 1px solid lightgray; height: 400px;">\r\n      <div style="height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        box-shadow: inset 8px 0 8px -8px grey;"\r\n      >\r\n        <button\r\n          id="vertical-splitview-button"\r\n          style="margin: 0;\r\n          padding: 0;\r\n          width: 24px;\r\n          height: 24px;\r\n          border: 1px solid lightgray;\r\n          border-radius: 50%;\r\n          background-color: white;\r\n          box-shadow: 2px 2px 4px rgb(0 0 0 / 20%);\r\n          position: relative;\r\n          left: -8px;"\r\n        >\r\n          &lt;&gt;\r\n        </button>\r\n      </div>\r\n      <div slot="left">\r\n        <p>Laboris velit ullamco reprehenderit incididunt culpa id do voluptate non. Do et officia ad ullamco et. Aliqua dolor nostrud velit ex duis adipisicing sit consectetur ea id nostrud sit labore. Voluptate culpa ut anim pariatur.</p>\r\n        <p>Officia tempor anim nulla irure elit excepteur velit ea mollit non minim ad duis. Mollit in et sint adipisicing in tempor et fugiat. Laborum id pariatur ut deserunt anim esse ullamco officia dolor labore proident esse. Reprehenderit adipisicing eu irure officia labore sint velit. Anim consequat incididunt tempor excepteur dolor consequat eiusmod dolore adipisicing consectetur. Incididunt aliqua eiusmod sint proident nisi nostrud minim quis mollit tempor.</p>\r\n        <p>Anim aute duis excepteur ipsum mollit. Ea officia elit amet qui labore reprehenderit pariatur laboris amet exercitation eu et. Ad Lorem aute exercitation amet. Est excepteur occaecat id consequat consequat.</p>\r\n      </div>\r\n      <div slot="right">\r\n        <p>Deserunt occaecat incididunt ipsum consectetur ullamco nulla qui sunt nostrud. Laborum incididunt enim culpa exercitation nisi dolore duis do sit deserunt cillum ullamco. Et incididunt nisi consectetur et cillum proident consectetur dolor cupidatat mollit magna. Ut Lorem incididunt sit consequat culpa mollit do officia. Amet eu proident non enim eu id mollit et occaecat. Ut dolor consectetur Lorem minim Lorem culpa quis nostrud elit reprehenderit labore sint. Officia dolore dolore ullamco tempor cupidatat est amet.</p>\r\n        <p>Consequat cillum ex elit pariatur laborum ullamco qui est nisi tempor ullamco. Dolor proident ipsum cupidatat culpa quis est amet exercitation veniam proident nulla consequat quis anim. Lorem exercitation incididunt aliqua sit nisi.</p>\r\n        <p>Consectetur elit tempor Lorem nostrud non cillum aliquip. Culpa culpa eu est est id deserunt exercitation elit occaecat enim in velit. Reprehenderit nostrud reprehenderit ex cillum pariatur enim. Amet minim elit quis excepteur exercitation eiusmod amet labore. Officia culpa exercitation do eu in ad id qui eiusmod aliqua id ex. Aliqua ullamco fugiat ex magna ex dolore fugiat consectetur mollit consequat consequat nulla et. Ea eu Lorem non officia pariatur nostrud.</p>\r\n      </div>\r\n    </dnn-vertical-splitview>\r\n    <script type="text/javascript">\r\n      (() => {\r\n        const splitView = document.querySelector("#split-view-demo");\r\n        const button = document.querySelector("#vertical-splitview-button");\r\n        splitView.addEventListener("widthChanged", e =>{\r\n          if (e.detail != 0){\r\n            localStorage.setItem("splitLastValue", e.detail);\r\n          }\r\n        });\r\n        button.addEventListener("click", async () => {\r\n          const currentWidth = await splitView.getSplitWidthPercentage();\r\n          const lastWidth = localStorage.getItem("splitLastValue");\r\n          if (currentWidth > 0){\r\n            splitView.setSplitWidthPercentage(0);\r\n            return;\r\n          }\r\n          splitView.setSplitWidthPercentage(localStorage.getItem("splitLastValue"));\r\n        })\r\n      })();\r\n    <\/script>\r\n```\r\n\r\n\x3c!-- Auto Generated Below --\x3e\r\n\r\n\r\n## Properties\r\n\r\n| Property               | Attribute                | Description                                               | Type     | Default |\r\n| ---------------------- | ------------------------ | --------------------------------------------------------- | -------- | ------- |\r\n| `splitWidthPercentage` | `split-width-percentage` | The percentage position of the splitter in the container. | `number` | `30`    |\r\n| `splitterWidth`        | `splitter-width`         | The width of the splitter area.                           | `number` | `16`    |\r\n\r\n\r\n## Events\r\n\r\n| Event          | Description                                  | Type                  |\r\n| -------------- | -------------------------------------------- | --------------------- |\r\n| `widthChanged` | Fires when the width of the divider changes. | `CustomEvent<number>` |\r\n\r\n\r\n## Methods\r\n\r\n### `getSplitWidthPercentage() => Promise<number>`\r\n\r\nGets the current divider position percentage.\r\n\r\n#### Returns\r\n\r\nType: `Promise<number>`\r\n\r\n\r\n\r\n### `setSplitWidthPercentage(newWidth: number) => Promise<void>`\r\n\r\nSets the width percentage of the divider\r\n\r\n#### Returns\r\n\r\nType: `Promise<void>`\r\n\r\n\r\n\r\n\r\n## Slots\r\n\r\n| Slot        | Description                                |\r\n| ----------- | ------------------------------------------ |\r\n| `"default"` | The split divider control you want to use. |\r\n| `"left"`    | The content of the left pane.              |\r\n| `"right"`   | The content of the right pane.             |\r\n\r\n\r\n## CSS Custom Properties\r\n\r\n| Name                            | Description                                        |\r\n| ------------------------------- | -------------------------------------------------- |\r\n| `--left-pane-background-color`  | Allows customizing the left pane background-color  |\r\n| `--right-pane-background-color` | Allows customizing the right pane background-color |\r\n\r\n\r\n----------------------------------------------\r\n\r\n*Built with [StencilJS](https://stenciljs.com/)*\r\n'},argTypes:{"splitter-width":{control:"number"},"split-width-percentage":{control:"number"}},"--left-pane-background-color":{control:"color"},"--right-pane-background-color":{control:"color"}};var VerticalSplitview=function Template(args,context){return Object(lit_html.b)(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(['\n<dnn-vertical-splitview\n    id="split-view-demo"\n    style=',"\n    splitter-width=","\n    split-width-percentage=",'\n    @setSplitWidthPercentage>\n    <div style="height: 100%;\n        display: flex;\n        align-items: center;\n        box-shadow: inset 8px 0 8px -8px grey;\n        position: absolute;\n        top:0;">\n        <button\n            id="vertical-splitview-button"\n            style="margin: 0;\n            padding: 0;\n            width: 24px;\n            height: 24px;\n            border: 1px solid lightgray;\n            border-radius: 50%;\n            background-color: white;\n            box-shadow: 2px 2px 4px rgb(0 0 0 / 20%);\n            position: relative;\n            left: -12px;"\n        >\n        &lt;&gt;\n    </button>\n    </div>\n    <div slot="left" style="padding: 1em;">\n        <p>Laboris velit ullamco reprehenderit incididunt culpa id do voluptate non. Do et officia ad ullamco et. Aliqua dolor nostrud velit ex duis adipisicing sit consectetur ea id nostrud sit labore. Voluptate culpa ut anim pariatur.</p>\n        <p>Officia tempor anim nulla irure elit excepteur velit ea mollit non minim ad duis. Mollit in et sint adipisicing in tempor et fugiat. Laborum id pariatur ut deserunt anim esse ullamco officia dolor labore proident esse. Reprehenderit adipisicing eu irure officia labore sint velit. Anim consequat incididunt tempor excepteur dolor consequat eiusmod dolore adipisicing consectetur. Incididunt aliqua eiusmod sint proident nisi nostrud minim quis mollit tempor.</p>\n        <p>Anim aute duis excepteur ipsum mollit. Ea officia elit amet qui labore reprehenderit pariatur laboris amet exercitation eu et. Ad Lorem aute exercitation amet. Est excepteur occaecat id consequat consequat.</p>\n    </div>\n    <div slot="right" style="padding: 1em;">\n    <p>Deserunt occaecat incididunt ipsum consectetur ullamco nulla qui sunt nostrud. Laborum incididunt enim culpa exercitation nisi dolore duis do sit deserunt cillum ullamco. Et incididunt nisi consectetur et cillum proident consectetur dolor cupidatat mollit magna. Ut Lorem incididunt sit consequat culpa mollit do officia. Amet eu proident non enim eu id mollit et occaecat. Ut dolor consectetur Lorem minim Lorem culpa quis nostrud elit reprehenderit labore sint. Officia dolore dolore ullamco tempor cupidatat est amet.</p>\n    <p>Consequat cillum ex elit pariatur laborum ullamco qui est nisi tempor ullamco. Dolor proident ipsum cupidatat culpa quis est amet exercitation veniam proident nulla consequat quis anim. Lorem exercitation incididunt aliqua sit nisi.</p>\n    <p>Consectetur elit tempor Lorem nostrud non cillum aliquip. Culpa culpa eu est est id deserunt exercitation elit occaecat enim in velit. Reprehenderit nostrud reprehenderit ex cillum pariatur enim. Amet minim elit quis excepteur exercitation eiusmod amet labore. Officia culpa exercitation do eu in ad id qui eiusmod aliqua id ex. Aliqua ullamco fugiat ex magna ex dolore fugiat consectetur mollit consequat consequat nulla et. Ea eu Lorem non officia pariatur nostrud.</p>\n    </div>\n</dnn-vertical-splitview>\n    '])),Object(if_defined.a)(Object(utilities.a)(args,context)),Object(if_defined.a)(args.splitterWidth),Object(if_defined.a)(args.splitWidthPercentage))}.bind({});VerticalSplitview.args={splitterWidth:16,splitWidthPercentage:30},VerticalSplitview.parameters=Object.assign({storySource:{source:'(args: {\r\n    splitterWidth: number,\r\n    splitWidthPercentage: number,\r\n}, context) => \r\n    html`\r\n<dnn-vertical-splitview\r\n    id="split-view-demo"\r\n    style=${ifDefined(injectStyles(args, context))}\r\n    splitter-width=${ifDefined(args.splitterWidth)}\r\n    split-width-percentage=${ifDefined(args.splitWidthPercentage)}\r\n    @setSplitWidthPercentage>\r\n    <div style="height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        box-shadow: inset 8px 0 8px -8px grey;\r\n        position: absolute;\r\n        top:0;">\r\n        <button\r\n            id="vertical-splitview-button"\r\n            style="margin: 0;\r\n            padding: 0;\r\n            width: 24px;\r\n            height: 24px;\r\n            border: 1px solid lightgray;\r\n            border-radius: 50%;\r\n            background-color: white;\r\n            box-shadow: 2px 2px 4px rgb(0 0 0 / 20%);\r\n            position: relative;\r\n            left: -12px;"\r\n        >\r\n        &lt;&gt;\r\n    </button>\r\n    </div>\r\n    <div slot="left" style="padding: 1em;">\r\n        <p>Laboris velit ullamco reprehenderit incididunt culpa id do voluptate non. Do et officia ad ullamco et. Aliqua dolor nostrud velit ex duis adipisicing sit consectetur ea id nostrud sit labore. Voluptate culpa ut anim pariatur.</p>\r\n        <p>Officia tempor anim nulla irure elit excepteur velit ea mollit non minim ad duis. Mollit in et sint adipisicing in tempor et fugiat. Laborum id pariatur ut deserunt anim esse ullamco officia dolor labore proident esse. Reprehenderit adipisicing eu irure officia labore sint velit. Anim consequat incididunt tempor excepteur dolor consequat eiusmod dolore adipisicing consectetur. Incididunt aliqua eiusmod sint proident nisi nostrud minim quis mollit tempor.</p>\r\n        <p>Anim aute duis excepteur ipsum mollit. Ea officia elit amet qui labore reprehenderit pariatur laboris amet exercitation eu et. Ad Lorem aute exercitation amet. Est excepteur occaecat id consequat consequat.</p>\r\n    </div>\r\n    <div slot="right" style="padding: 1em;">\r\n    <p>Deserunt occaecat incididunt ipsum consectetur ullamco nulla qui sunt nostrud. Laborum incididunt enim culpa exercitation nisi dolore duis do sit deserunt cillum ullamco. Et incididunt nisi consectetur et cillum proident consectetur dolor cupidatat mollit magna. Ut Lorem incididunt sit consequat culpa mollit do officia. Amet eu proident non enim eu id mollit et occaecat. Ut dolor consectetur Lorem minim Lorem culpa quis nostrud elit reprehenderit labore sint. Officia dolore dolore ullamco tempor cupidatat est amet.</p>\r\n    <p>Consequat cillum ex elit pariatur laborum ullamco qui est nisi tempor ullamco. Dolor proident ipsum cupidatat culpa quis est amet exercitation veniam proident nulla consequat quis anim. Lorem exercitation incididunt aliqua sit nisi.</p>\r\n    <p>Consectetur elit tempor Lorem nostrud non cillum aliquip. Culpa culpa eu est est id deserunt exercitation elit occaecat enim in velit. Reprehenderit nostrud reprehenderit ex cillum pariatur enim. Amet minim elit quis excepteur exercitation eiusmod amet labore. Officia culpa exercitation do eu in ad id qui eiusmod aliqua id ex. Aliqua ullamco fugiat ex magna ex dolore fugiat consectetur mollit consequat consequat nulla et. Ea eu Lorem non officia pariatur nostrud.</p>\r\n    </div>\r\n</dnn-vertical-splitview>\r\n    `'}},VerticalSplitview.parameters)},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/html/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/web-components/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,6,7]]]);