/*! For license information please see components-dnn-collapsible-dnn-collapsible-stories.ec18f60f.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[57],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nw:()=>actions});var chunk_KKE3V3AL=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-KKE3V3AL.mjs"),actions=(...args)=>{let options=chunk_KKE3V3AL.vc,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...chunk_KKE3V3AL.vc,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=(0,chunk_KKE3V3AL.aD)(namesObject[name],options)})),actionsObject};__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs")},"./src/components/dnn-collapsible/dnn-collapsible.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Collapsible:()=>Collapsible,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_collapsible_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),if_defined=__webpack_require__("../../node_modules/lit-html/directives/if-defined.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const dnn_collapsible_stories={title:"Elements/Collapsible",component:"dnn-collapsible",tags:["autodocs"],parameters:{docs:{description:{component:"# dnn-collapsible\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute             | Description                                          | Type      | Default |\n| -------------------- | --------------------- | ---------------------------------------------------- | --------- | ------- |\n| `expanded`           | `expanded`            | Defines if the panel is expanded or not.             | `boolean` | `false` |\n| `transitionDuration` | `transition-duration` | Defines the transition time in ms, defaults to 150ms | `number`  | `150`   |\n\n\n## Events\n\n| Event                         | Description                                       | Type                |\n| ----------------------------- | ------------------------------------------------- | ------------------- |\n| `dnnCollapsibleHeightChanged` | Fires whenever the collapsible height has changed | `CustomEvent<void>` |\n\n\n## Methods\n\n### `updateSize() => Promise<void>`\n\nUpdates the component height, use to update after a slot content changes.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Dependencies\n\n### Used by\n\n - [dnn-permissions-grid](../dnn-permissions-grid)\n - [dnn-treeview-item](../dnn-treeview-item)\n\n### Graph\n```mermaid\ngraph TD;\n  dnn-permissions-grid --\x3e dnn-collapsible\n  dnn-treeview-item --\x3e dnn-collapsible\n  style dnn-collapsible fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"}}},argTypes:{expanded:{type:"boolean"},transitionDuration:{type:"number",control:"number"}}},Collapsible=((0,dist.Nw)("dnnCollapsibleHeightChanged"),(args=>lit.dy`
        <dnn-collapsible ?expanded=${(0,if_defined.o)(args.expanded)} transition-duration=${(0,if_defined.o)(args.transitionDuration)}>
            <div style="border: 1px solid lightgray">
                <h1>This title is inside the collapsible</h1>
                <p>Bacon ipsum dolor amet cupim hamburger beef ribs pork belly porchetta shankle swine. Pork belly jowl rump swine corned beef, pancetta kevin cow. Picanha pork chop pork loin corned beef beef prosciutto t-bone short loin bresaola short ribs chicken andouille. Pig leberkas meatball alcatra ribeye meatloaf. Prosciutto shoulder tongue chuck burgdoggen tenderloin, shank sirloin landjaeger doner shankle meatball kevin pork loin ham hock.</p>
            </div>
        </dnn-collapsible>
    `).bind({}));Collapsible.args={expanded:!1,transitionDuration:150},Collapsible.parameters={...Collapsible.parameters,docs:{...Collapsible.parameters?.docs,source:{originalSource:'(args: {\n  expanded: boolean;\n  transitionDuration: number;\n}) => html`\n        <dnn-collapsible ?expanded=${ifDefined(args.expanded)} transition-duration=${ifDefined(args.transitionDuration)}>\n            <div style="border: 1px solid lightgray">\n                <h1>This title is inside the collapsible</h1>\n                <p>Bacon ipsum dolor amet cupim hamburger beef ribs pork belly porchetta shankle swine. Pork belly jowl rump swine corned beef, pancetta kevin cow. Picanha pork chop pork loin corned beef beef prosciutto t-bone short loin bresaola short ribs chicken andouille. Pig leberkas meatball alcatra ribeye meatloaf. Prosciutto shoulder tongue chuck burgdoggen tenderloin, shank sirloin landjaeger doner shankle meatball kevin pork loin ham hock.</p>\n            </div>\n        </dnn-collapsible>\n    `',...Collapsible.parameters?.docs?.source}}};const __namedExportsOrder=["Collapsible"]},"../../node_modules/lit-html/directives/if-defined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>l});var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit-html/lit-html.js"),l=l=>null!=l?l:_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.Ld}}]);