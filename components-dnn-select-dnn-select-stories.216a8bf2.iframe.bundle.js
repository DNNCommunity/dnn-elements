/*! For license information please see components-dnn-select-dnn-select-stories.216a8bf2.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[375],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nw:()=>actions});var chunk_KKE3V3AL=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-KKE3V3AL.mjs"),actions=(...args)=>{let options=chunk_KKE3V3AL.vc,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...chunk_KKE3V3AL.vc,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=(0,chunk_KKE3V3AL.aD)(namesObject[name],options)})),actionsObject};__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs")},"./src/components/dnn-select/dnn-select.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Dropdown:()=>Dropdown,Required:()=>Required,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_select_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),if_defined=__webpack_require__("../../node_modules/lit-html/directives/if-defined.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const dnn_select_stories={title:"Elements/Select",component:"dnn-select",tags:["autodocs"],parameters:{docs:{description:{component:"# dnn-select\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                   | Attribute                    | Description                                                              | Type      | Default     |\n| -------------------------- | ---------------------------- | ------------------------------------------------------------------------ | --------- | ----------- |\n| `disableValidityReporting` | `disable-validity-reporting` | If true, the browser default validation message will be hidden.          | `boolean` | `undefined` |\n| `disabled`                 | `disabled`                   | Defines whether the field is disabled.                                   | `boolean` | `undefined` |\n| `helpText`                 | `help-text`                  | Defines the help label displayed under the field.                        | `string`  | `undefined` |\n| `label`                    | `label`                      | The label for this input.                                                | `string`  | `undefined` |\n| `name`                     | `name`                       | The name for this input, if not provided a random name will be assigned. | `string`  | `undefined` |\n| `required`                 | `required`                   | Defines whether the field requires having a value.                       | `boolean` | `undefined` |\n| `value`                    | `value`                      | The value of the input.                                                  | `string`  | `undefined` |\n\n\n## Events\n\n| Event         | Description                                                    | Type                  |\n| ------------- | -------------------------------------------------------------- | --------------------- |\n| `valueChange` | Fires when the value has changed and the user exits the input. | `CustomEvent<string>` |\n\n\n## CSS Custom Properties\n\n| Name                 | Description                                              |\n| -------------------- | -------------------------------------------------------- |\n| `--background`       | Defines the background color.                            |\n| `--control-radius`   | Defines the radius for the control corners.              |\n| `--danger-color`     | Defines the danger color used for invalid data.          |\n| `--focus-color`      | Defines the color when the component is focused.         |\n| `--foreground`       | Defines the foreground color.                            |\n| `--input-text-align` | Allows customizing the text alignment of the input text. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"}}},argTypes:{"disable-validity-reporting":{control:"boolean"},disabled:{control:"boolean"},"help-text":{control:"text"},label:{control:"text"},name:{control:"text"},required:{control:"boolean"},value:{control:"text"}}},eventsFromNames=(0,dist.Nw)("valueChange"),Template=args=>lit.dy`
        <dnn-select
          ?disable-validity-reporting=${args["disable-validity-reporting"]}
          ?disabled=${args.disabled}
          help-text=${(0,if_defined.o)(args["help-text"])}
          label=${(0,if_defined.o)(args.label)}
          name=${(0,if_defined.o)(args.name)}
          ?required=${(0,if_defined.o)(args.required)}
          value=${(0,if_defined.o)(args.value)}
          @valueChange=${e=>eventsFromNames.valueChange(e)}
        >
          <option value="">-- Select an option --</option>
          <option value="1">Option 1</option>
          <option value="2">Option 2</option>
          <option value="3">Option 3</option>
        </dnn-select>
    `,Dropdown=Template.bind({});Dropdown.args={label:"Option","help-text":"This is a help text",disabled:!1,"disable-validity-reporting":!1,readonly:!1,required:!1};const Required=Template.bind({});Required.args={...Dropdown.args,required:!0},Dropdown.parameters={...Dropdown.parameters,docs:{...Dropdown.parameters?.docs,source:{originalSource:'args => html`\n        <dnn-select\n          ?disable-validity-reporting=${args["disable-validity-reporting"]}\n          ?disabled=${args.disabled}\n          help-text=${ifDefined(args["help-text"])}\n          label=${ifDefined(args.label)}\n          name=${ifDefined(args.name)}\n          ?required=${ifDefined(args.required)}\n          value=${ifDefined(args.value)}\n          @valueChange=${e => eventsFromNames.valueChange(e)}\n        >\n          <option value="">-- Select an option --</option>\n          <option value="1">Option 1</option>\n          <option value="2">Option 2</option>\n          <option value="3">Option 3</option>\n        </dnn-select>\n    `',...Dropdown.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'args => html`\n        <dnn-select\n          ?disable-validity-reporting=${args["disable-validity-reporting"]}\n          ?disabled=${args.disabled}\n          help-text=${ifDefined(args["help-text"])}\n          label=${ifDefined(args.label)}\n          name=${ifDefined(args.name)}\n          ?required=${ifDefined(args.required)}\n          value=${ifDefined(args.value)}\n          @valueChange=${e => eventsFromNames.valueChange(e)}\n        >\n          <option value="">-- Select an option --</option>\n          <option value="1">Option 1</option>\n          <option value="2">Option 2</option>\n          <option value="3">Option 3</option>\n        </dnn-select>\n    `',...Required.parameters?.docs?.source}}};const __namedExportsOrder=["Dropdown","Required"]},"../../node_modules/lit-html/directives/if-defined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>l});var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit-html/lit-html.js"),l=l=>null!=l?l:_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.Ld}}]);