import{x as i}from"./lit-element-BTykW0Pr.js";import{o}from"./if-defined-rEY2lmWu.js";import{a as l}from"./index-BMoMLr6o.js";import"./v4-CtRu48qb.js";const s='# dnn-dropzone\n\n\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property            | Attribute            | Description                                                                                                                                   | Type                        | Default     |\n| ------------------- | -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------- | ----------- |\n| `allowCameraMode`   | `allow-camera-mode`  | If true, will allow the user to take a snapshot using the device camera. (only works over https).                                             | `boolean`                   | `false`     |\n| `allowedExtensions` | `allowed-extensions` | A list of allowed file extensions. If not specified, any file is allowed. Ex: ["jpg", "jpeg", "gif", "png"]                                   | `string[] \\| undefined`     | `undefined` |\n| `captureQuality`    | `capture-quality`    | Specifies the jpeg quality for when the device camera is used to generate a picture. Needs to be a number between 0 and 1 and defaults to 0.8 | `number`                    | `0.8`       |\n| `maxFileSize`       | `max-file-size`      | Max file size in bytes.                                                                                                                       | `number \\| undefined`       | `undefined` |\n| `name`              | `name`               | The name of the field when used in a form.                                                                                                    | `string \\| undefined`       | `undefined` |\n| `resx`              | `resx`               | Localization strings                                                                                                                          | `DropzoneResx \\| undefined` | `undefined` |\n\n\n## Events\n\n| Event           | Description                    | Type                  |\n| --------------- | ------------------------------ | --------------------- |\n| `filesSelected` | Fires when file were selected. | `CustomEvent<File[]>` |\n\n\n## CSS Custom Properties\n\n| Name                      | Description                                          |\n| ------------------------- | ---------------------------------------------------- |\n| `--border-color`          | The color of the border.                             |\n| `--border-radius`         | The radius of the controls borders.                  |\n| `--drop-background-color` | The color of the background when a file is dropping. |\n\n\n## Dependencies\n\n### Used by\n\n - [dnn-example-form](../examples/dnn-example-form)\n - [dnn-image-cropper](../dnn-image-cropper)\n\n### Graph\n```mermaid\ngraph TD;\n  dnn-example-form --> dnn-dropzone\n  dnn-image-cropper --> dnn-dropzone\n  style dnn-dropzone fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',x={title:"Elements/Dropzone",component:"dnn-dropzone",tags:["autodocs"],parameters:{docs:{description:{component:s}}},argTypes:{allowedExtensions:{control:"text"},allowCameraMode:{control:"boolean"},captureQuality:{options:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1],control:"number"},maxFileSize:{control:"number"}}};l("filesSelected");const d={dragAndDropFile:"Drag and drop a file",capture:"Capture",or:"or",takePicture:"Take a picture",uploadFile:"Upload a file"},p=e=>i`
        <dnn-dropzone
            resx=${e.resx}
            allowed-extensions=${o(e.allowedExtensions)}
            ?allow-camera-mode=${o(e.allCameraMode)}
            capture-quality=${o(e.captureQuality)}
            max-file-size=${o(e.maxFileSize)}>
        </dnn-dropzone>
    `,n=p.bind({});n.args={allowedExtensions:"jpg,jpeg,png,gif",allowCameraMode:!1,captureQuality:.8,resx:d};var r,a,t;n.parameters={...n.parameters,docs:{...(r=n.parameters)==null?void 0:r.docs,source:{originalSource:`args => html\`
        <dnn-dropzone
            resx=\${args.resx}
            allowed-extensions=\${ifDefined(args.allowedExtensions)}
            ?allow-camera-mode=\${ifDefined(args.allCameraMode)}
            capture-quality=\${ifDefined(args.captureQuality)}
            max-file-size=\${ifDefined(args.maxFileSize)}>
        </dnn-dropzone>
    \``,...(t=(a=n.parameters)==null?void 0:a.docs)==null?void 0:t.source}}};const g=["Dropzone"];export{n as Dropzone,g as __namedExportsOrder,x as default};
