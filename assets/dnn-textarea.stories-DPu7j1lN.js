import{E as s,x as d}from"./lit-element-BTykW0Pr.js";import{o as n}from"./if-defined-rEY2lmWu.js";import{a as u}from"./index-BMoMLr6o.js";import"./v4-CtRu48qb.js";const m='# dnn-textarea\n\n\n\n<!-- Auto Generated Below -->\n\n\n## Overview\n\nA custom textarea component.\n\n## Properties\n\n| Property       | Attribute      | Description                                                                                                                               | Type                                                                    | Default     |\n| -------------- | -------------- | ----------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------- | ----------- |\n| `autocomplete` | `autocomplete` | Defines the type of auto-completion to use for this field, see https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete. | `string`                                                                | `"off"`     |\n| `disabled`     | `disabled`     | Defines whether the field is disabled.                                                                                                    | `boolean \\| undefined`                                                  | `undefined` |\n| `helpText`     | `help-text`    | Defines the help label displayed under the field.                                                                                         | `string \\| undefined`                                                   | `undefined` |\n| `label`        | `label`        | The label for this input.                                                                                                                 | `string \\| undefined`                                                   | `undefined` |\n| `maxlength`    | `maxlength`    | Defines the maximum amount of charaters.                                                                                                  | `number \\| undefined`                                                   | `undefined` |\n| `minlength`    | `minlength`    | Defines the minimum amount of charaters.                                                                                                  | `number \\| undefined`                                                   | `undefined` |\n| `name`         | `name`         | The name for this input when used in forms.                                                                                               | `string \\| undefined`                                                   | `undefined` |\n| `readonly`     | `readonly`     | Defines wheter the defined value is readonly.                                                                                             | `boolean \\| undefined`                                                  | `undefined` |\n| `required`     | `required`     | Defines whether the field requires having a value.                                                                                        | `boolean \\| undefined`                                                  | `undefined` |\n| `resizable`    | `resizable`    | Can be set to change how the user can resize the field.                                                                                   | `"block" \\| "both" \\| "horizontal" \\| "inline" \\| "none" \\| "vertical"` | `"block"`   |\n| `rows`         | `rows`         | Defines how many rows (lines of text) to initially show.                                                                                  | `number`                                                                | `3`         |\n| `value`        | `value`        | Sets the value of the textarea.                                                                                                           | `string`                                                                | `""`        |\n\n\n## Events\n\n| Event         | Description                                                    | Type                  |\n| ------------- | -------------------------------------------------------------- | --------------------- |\n| `valueChange` | Fires when the value has changed and the user exits the input. | `CustomEvent<string>` |\n| `valueInput`  | Fires when the using is inputing data (on keystrokes).         | `CustomEvent<string>` |\n\n\n## Methods\n\n### `checkValidity() => Promise<ValidityState>`\n\nReports the input validity details. See https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\n\n#### Returns\n\nType: `Promise<ValidityState>`\n\n\n\n### `setCustomValidity(message: string) => Promise<void>`\n\nCan be used to set a custom validity message.\n\n#### Parameters\n\n| Name      | Type     | Description |\n| --------- | -------- | ----------- |\n| `message` | `string` |             |\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                 | Description                                      |\n| -------------------- | ------------------------------------------------ |\n| `--background-color` | Defines the background color.                    |\n| `--control-radius`   | Defines the radius for the control corners.      |\n| `--danger-color`     | Defines the danger color used for invalid data.  |\n| `--focus-color`      | Defines the color when the component is focused. |\n| `--foreground-color` | Defines the foreground color.                    |\n\n\n## Dependencies\n\n### Used by\n\n - [dnn-example-form](../examples/dnn-example-form)\n\n### Depends on\n\n- [dnn-fieldset](../dnn-fieldset)\n\n### Graph\n```mermaid\ngraph TD;\n  dnn-textarea --> dnn-fieldset\n  dnn-example-form --> dnn-textarea\n  style dnn-textarea fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n',b={title:"Elements/Textarea",component:"dnn-textarea",tags:["autodocs"],parameters:{docs:{description:{component:m}}},argTypes:{autocomplete:{type:"string"},disabled:{control:"boolean"},"help-text":{control:"text"},label:{control:"text"},minlength:{control:"number"},maxlength:{control:"number"},name:{control:"text"},readonly:{control:"boolean"},required:{control:"boolean"},value:{control:"text"}}},a=u("valueChange","valueInput"),f=e=>d`
        <dnn-textarea
          autocomplete=${e.autocomplete=="off"?s:e.autocomplete}
          ?disabled=${e.disabled}
          help-text=${n(e["help-text"])}
          label=${n(e.label)}
          minlength=${n(e.minlength)}
          maxlength=${n(e.maxlength)}
          name=${n(e.name)}
          ?readonly=${n(e.readonly)}
          ?required=${n(e.required)}
          value=${n(e.value)}
          @valueChange=${o=>a.valueChange(o)}
          @valueInput=${o=>a.valueInput(o)}
        >
        </dnn-input>
    `,t=f.bind({});t.args={autocomplete:"off",disabled:!1,readonly:!1,required:!1};var i,r,l;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:`args => html\`
        <dnn-textarea
          autocomplete=\${args.autocomplete == "off" ? nothing : args.autocomplete}
          ?disabled=\${args.disabled}
          help-text=\${ifDefined(args["help-text"])}
          label=\${ifDefined(args.label)}
          minlength=\${ifDefined(args.minlength)}
          maxlength=\${ifDefined(args.maxlength)}
          name=\${ifDefined(args.name)}
          ?readonly=\${ifDefined(args.readonly)}
          ?required=\${ifDefined(args.required)}
          value=\${ifDefined(args.value)}
          @valueChange=\${e => eventsFromNames.valueChange(e)}
          @valueInput=\${e => eventsFromNames.valueInput(e)}
        >
        </dnn-input>
    \``,...(l=(r=t.parameters)==null?void 0:r.docs)==null?void 0:l.source}}};const v=["Text"];export{t as Text,v as __namedExportsOrder,b as default};
