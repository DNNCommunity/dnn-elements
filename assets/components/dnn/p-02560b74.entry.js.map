{"version":3,"names":["dnnButtonCss","DnnButton","componentDidLoad","this","modal","el","shadowRoot","querySelector","handleConfirm","hide","modalVisible","confirmed","emit","handleCancel","canceled","handleClick","confirm","show","getElementClasses","classes","push","type","reversed","size","join","render","h","Host","class","disabled","style","onClick","showCloseButton","backdropDismiss","confirmMessage","display","justifyContent","margin","confirmYesText","confirmNoText","dnnCheckboxCss","DnnCheckbox","changeState","useIntermediate","checked","checkedchange","name","xmlns","height","viewBox","width","fill","d","htmlFor","id","dnnChevronCss","DnnChevron","handleExpandedChanged","newValue","changed","expanded","collapseText","expandText","dnnCollapsibleCss","DnnCollapsible","handleHeightChanged","requestAnimationFrame","updateSize","async","container","maxHeight","scrollHeight","setTimeout","transitionDuration","handledExpandedChanged","dnnCollapsibleHeightChanged","transition","ref","ColorInfo","constructor","_hue","_saturation","_lightness","hue","value","saturation","lightness","red","getRGB","setHSL","green","blue","hex","r","getHex","g","b","parseInt","substr","contrastColor","brightness","chroma","Math","abs","quadrant","offset","bias","round","min","max","diff","s","l","toString","length","dnnColorPickerCss","DnnColorPicker","handleSaturationLightnessMouseDown","e","preventDefault","handleDragLightnessSaturation","window","addEventListener","handleSaturationLightnessMouseUp","rect","saturationLightnessBox","getBoundingClientRect","x","clientX","left","y","clientY","top","newColor","currentColor","removeEventListener","handleHueMouseDown","handleDragHue","handleHueMouseUp","hueRange","handleComponentValueChange","channel","target","isNaN","handleHSLChange","component","handleSaturationLightnessKeyDown","shiftKey","key","handleHueKeyDown","colorChangedHandler","color","colorChanged","handeCurrentColorChanged","componentWillLoad","handleHexChange","setProperty","colorBoxHeight","getDoublet","getContrast","valueString","toUpperCase","match","switchColorMode","rgbDisplay","hslDisplay","hexDisplay","element","backgroundColor","onMouseDown","bind","role","bottom","onKeyDown","boxShadow","step","onChange","__decorate","Debounce","dnnDropzoneCss","DnnDropzone","handleDragOver","event","stopPropagation","dataTransfer","dropEffect","dropzone","classList","add","handleDrop","dropEvent","files","hasInvalidExtensions","fileList","getFilesFromFileList","filesSelected","dragAndDropFile","capture","or","takePicture","uploadFile","allowCameraMode","checkIfBrowserCanTakeSnapshots","then","result","canTakeSnapshots","allowedExtensions","undefined","extensionsWithDots","map","extensionsList","fileInput","accept","Promise","resolve","mediaDevices","navigator","enumerateDevices","devices","some","device","kind","index","file","handleUploadButton","hasInvalid","fileIndex","regex","fileExtension","exec","includes","takeSnapshot","takingPicture","getUserMedia","video","audio","stream","videoPreview","srcObject","play","videoSettings","getVideoTracks","getSettings","catch","error","alert","applySnapshot","canvas","document","createElement","context","getContext","drawImage","toBlob","blob","File","captureQuality","onDragOver","onDrop","onDragLeave","remove","_a","resx","_b","_c","_d","cx","cy","_e","_f","CornerType","getMovementFromEvent","previousTouch","movementX","movementY","MouseEvent","TouchEvent","touch","touches","pageX","pageY","dnnImageCropperCss","DnnImageCropper","handleCropMouseDown","className","handleImageCropFinished","handleCropDrag","handleNwMouseMove","handleNeMouseMove","handleSeMouseMove","handleSwMouseMove","_ev","emitImage","handleCornerDrag","nw","ne","se","sw","corner","isMouseStillInTarget","getCornerLeftTop","newWidth","newHeight","orientation","wantedRatio","cropRect","crop","imageRect","image","topOffset","offsetTop","leftOffset","offsetLeft","preventUndersized","zoomRatio","naturalWidth","ev","newLeft","newTop","imageTooSmall","modalCloseText","setView","newView","views","host","querySelectorAll","forEach","v","noPictureView","hasPictureView","view","initCrop","imageRatio","wantedHeight","wantedWidth","setImage","src","toDataURL","handleNewFile","split","reader","FileReader","onload","readerLoadEvent","img","Image","imageTooSmallModal","ctx","readAsDataURL","naturalHeight","dataUrl","generateCroppedImage","imageCropChanged","desiredWidth","desiredHeight","clearRect","quality","inside","mouseX","mouseY","corners","cornerRect","onTouchStart","onFilesSelected","detail","replace","dnnModalCss","DnnModal","visible","handleDismiss","dismissed","handleBackdropClick","closeText","escapeCode","code","unescapeCode","pending","Map","callbacks","createWorker","workerPath","workerName","workerMsgId","worker","Worker","data","workerMsg","err","reject","callbackIds","get","delete","errObj","Object","assign","Error","message","consoleError","dnnMonacoEditorCss","DnnMonacoEditor","defaultOptions","automaticLayout","language","lineNumbers","fixedOverflowWidgets","useShadowDOM","minimap","enabled","readOnly","roundedSelection","scrollBeyondLastLine","theme","wordWrap","wordWrapColumn","wrappingIndent","onOptionsChange","editor","updateOptions","mergeOptions","focus","languageId","monaco","setModelLanguage","getModel","getValue","setValue","options","loadMonacoEditor","initializeEditor","getSlottetCode","slottedCode","innerHTML","trim","loadScript","script","onerror","head","appendChild","getFullAssetPath","path","monacoDir","URL","url","finalPath","require","config","paths","vs","MonacoEnvironment","getWorker","_moduleId","label","jsonWorker","cssWorker","htmlWorker","tsWorker","editorWorker","create","dnnPermissionsGridCss","DnnPermissionsGrid","Add","AllRoles","FilterByGroup","GlobalRoles","Role","RolePermissions","SelectRole","User","UserPermissions","handleFoundUsersChanged","userCollapsible","dismissUserResults","disconnectedCallback","dropdownRect","roleDropDown","right","handleRoleGroupChanged","dropdown","selectedIndex","Number","selectedRoleGroupId","addRole","roleId","roles","filter","RoleId","permissions","rolePermissions","default","locked","roleName","RoleName","permissionsChanged","addUser","pickedUser","userPermissions","displayName","userId","userQuery","getRoles","filteredRoles","rp","IsSystemRole","RoleGroupId","renderRoleCheckBox","rolePermission","permissionDefinition","item","permission","permissionId","opacity","allowAccess","onCheckedchange","handleRoleChanged","slot","permissionName","renderUserCheckBox","userPermission","handleUserChanged","newRolePermission","p","fullControl","permissionCode","permissionKey","u","newUserPermission","removeRole","removeUser","up","handleQueryChanged","query","foundUsers","userSearchQueryChanged","handleSearchUserFieldKeyDown","firstButton","handleSearchedUserKeyDown","button","nextButton","nextElementSibling","previousButton","previousElementSibling","handleUserPicked","searchedUser","getFilteredUsers","fu","selected","roleGroups","roleGroup","permissionDefinitions","placeholder","debounced","onQueryChanged","dnnSearchboxCss","DnnSearchbox","fireQueryChanged","debouncedHandleQueryChanged","queryChanged","onInput","dnnSortIconCss","DnnSortIcon","changeSort","sortDirection","sortChanged","active","dnnTabCss","DnnTab","dnnTabsCss","DnnTabs","updateTitles","showFirstTab","getTabs","assignedElements","tabs","tab","tabTitles","tabTitle","selectedTabTitle","showTab","dnnToggleCss","DnnToggle","checkedChanged","isChecked","checkChanged","dnnTreeviewItemCss","DnnTreeviewItem","watchExpanded","expander","collapsible","child","childElement","children","count","hasChildren","toggleCollapse","userExpanded","userCollapsed","dnnVerticalOverflowMenuCss","DnnVerticalOverflowMenu","previousMenuWidth","componentDidRender","moveItemsToDropDownIfNecessery","resizeObserver","ResizeObserver","entries","entry","contentRect","moveItemsToMenuIfPossible","observe","menuItems","Array","from","menu","availableWidth","neededWidth","parseFloat","getComputedStyle","fontSize","getFullWidth","showDropdownButton","lastItem","hasChildNodes","firstItem","showDropdownMenu","styles","marginLeft","marginRight","paddingLeft","paddingRight","toggleOverflowMenu","contentHeight","items","emHeight","gapsHeight","marginHeight","dismissMenu","buttonRect","dnnVerticalSplitviewCss","DnnVerticalSplitview","panes","pane","splitter","fullWidth","leftWidth","rightWidth","splitWidthPercentage","widthChanged","handleMouseDown","handleDrag","handleDragFinished","newPercentage","handleKeyDown","minWidth","splitterWidth"],"sources":["./src/components/dnn-button/dnn-button.scss?tag=dnn-button&encapsulation=shadow","./src/components/dnn-button/dnn-button.tsx","./src/components/dnn-checkbox/dnn-checkbox.scss?tag=dnn-checkbox&encapsulation=shadow","./src/components/dnn-checkbox/dnn-checkbox.tsx","./src/components/dnn-chevron/dnn-chevron.scss?tag=dnn-chevron&encapsulation=shadow","./src/components/dnn-chevron/dnn-chevron.tsx","./src/components/dnn-collapsible/dnn-collapsible.scss?tag=dnn-collapsible&encapsulation=shadow","./src/components/dnn-collapsible/dnn-collapsible.tsx","./src/utilities/colorInfo.ts","./src/components/dnn-color-picker/dnn-color-picker.scss?tag=dnn-color-picker&encapsulation=shadow","./src/components/dnn-color-picker/dnn-color-picker.tsx","./src/components/dnn-dropzone/dnn-dropzone.scss?tag=dnn-dropzone&encapsulation=shadow","./src/components/dnn-dropzone/dnn-dropzone.tsx","./src/components/dnn-image-cropper/CornerType.ts","./src/utilities/mouseUtilities.ts","./src/components/dnn-image-cropper/dnn-image-cropper.scss?tag=dnn-image-cropper&encapsulation=shadow","./src/components/dnn-image-cropper/dnn-image-cropper.tsx","./src/components/dnn-modal/dnn-modal.scss?tag=dnn-modal&encapsulation=shadow","./src/components/dnn-modal/dnn-modal.tsx","./src/components/dnn-monaco-editor/utils/code.utils.ts","@worker-helper","./src/components/dnn-monaco-editor/dnn-monaco-editor.scss?tag=dnn-monaco-editor&encapsulation=shadow","./src/components/dnn-monaco-editor/dnn-monaco-editor.tsx","./src/components/dnn-permissions-grid/dnn-permissions-grid.scss?tag=dnn-permissions-grid&encapsulation=shadow","./src/components/dnn-permissions-grid/dnn-permissions-grid.tsx","./src/components/dnn-searchbox/dnn-searchbox.scss?tag=dnn-searchbox&encapsulation=shadow","./src/components/dnn-searchbox/dnn-searchbox.tsx","./src/components/dnn-sort-icon/dnn-sort-icon.scss?tag=dnn-sort-icon&encapsulation=shadow","./src/components/dnn-sort-icon/dnn-sort-icon.tsx","./src/components/dnn-tab/dnn-tab.scss?tag=dnn-tab&encapsulation=shadow","./src/components/dnn-tab/dnn-tab.tsx","./src/components/dnn-tabs/dnn-tabs.scss?tag=dnn-tabs&encapsulation=shadow","./src/components/dnn-tabs/dnn-tabs.tsx","./src/components/dnn-toggle/dnn-toggle.scss?tag=dnn-toggle&encapsulation=shadow","./src/components/dnn-toggle/dnn-toggle.tsx","./src/components/dnn-treeview-item/dnn-treeview-item.scss?tag=dnn-treeview-item&encapsulation=shadow","./src/components/dnn-treeview-item/dnn-treeview-item.tsx","./src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.scss?tag=dnn-vertical-overflow-menu&encapsulation=shadow","./src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.tsx","./src/components/dnn-vertical-splitview/dnn-vertical-splitview.scss?tag=dnn-vertical-splitview&encapsulation=shadow","./src/components/dnn-vertical-splitview/dnn-vertical-splitview.tsx"],"sourcesContent":[":host {\n  --background-color: transparent;\n  --color: #333;\n  --border-size: 1px;\n  --border-color: var(--backround-color);\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --padding: var(--dnn-controls-padding, 5px);\n  display: inline-block;\n  width: auto;\n}\n\n:host(.disabled){\n  pointer-events: none;\n}\n\n:host(.primary){\n  --background-color: var(--dnn-color-primary, blue);\n  --color: var(--dnn-color-primary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.primary.reversed){\n  --background-color: var(--dnn-color-primary-contrast, white);\n  --color: var(--dnn-color-primary, blue);\n  --border-color: var(--dnn-color-primary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.secondary){\n  --background-color: var(--dnn-color-secondary, green);\n  --color: var(--dnn-color-secondary-contrast, white);\n  --focus-color: var(--background-color);\n}\n\n:host(.secondary.reversed){\n  --background-color: var(--dnn-color-secondary-contrast, white);\n  --color: var(--dnn-color-secondary, blue);\n  --border-color: var(--dnn-color-secondary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.tertiary){\n  --background-color: var(--dnn-color-tertiary, yellow);\n  --color: var(--dnn-color-tertiary-contrast, black);\n  --focus-color: var(--background-color);\n}\n\n:host(.tertiary.reversed){\n  --background-color: var(--dnn-color-tertiary-contrast, white);\n  --color: var(--dnn-color-tertiary, blue);\n  --border-color: var(--dnn-color-tertiary, blue);\n  --focus-color: var(--color);\n}\n\n:host(.hydrated){\n  button{\n    border: var(--border-size) solid var(--border-color);\n    border-radius: var(--border-radius);\n    padding: var(--padding) calc(var(--padding) * 2);\n    background-color: transparent;\n    background-color: var(--background-color);\n    color: var(--color);\n    outline: none;\n    &:focus, &:hover{\n      box-shadow: 0 0 2px 2px var(--focus-color);\n    }\n  }\n}\n\n:host(:disabled, [disabled]){\n  button{\n    pointer-events: none;\n    opacity: 0.5;\n  }\n}\n\n:host(.small){\n  button{\n    padding: calc(var(--padding) / 2) var(--padding);\n    font-size: 0.7em;\n  }\n}\n\n:host(.large){\n  button{\n    padding: calc(var(--padding) * 1.5) calc(var(--padding) * 3);\n    font-size: 1.2em;\n  }\n}\n\nbutton{\n  height: 100%;\n  width: 100%;\n  cursor: pointer;\n}","import { Component, Element, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot Content of the button\n */\n@Component({\n  tag: 'dnn-button',\n  styleUrl: 'dnn-button.scss',\n  shadow: true\n})\nexport class DnnButton {\n\n  /**\n   * Optional button style,\n   * can be either primary, secondary or tertiary and defaults to primary if not specified\n   */\n  @Prop() type: 'primary' | 'secondary' | 'tertiary' = 'primary';\n\n  /**\n   * Optionally reverses the button style.\n   */\n  @Prop() reversed: boolean = false;\n\n  /**\n   * Optionally sets the button size, small normal or large, defaults to normal\n   */\n  @Prop() size?: 'small' | 'normal' | 'large' = 'normal';\n\n  /**\n   * Optionally add a confirmation dialog before firing the action.\n   */\n  @Prop() confirm?: boolean = false;\n\n  /**\n   * The text of the yes button for confirmation.\n   */\n  @Prop() confirmYesText?: string = \"Yes\";\n\n  /**\n   * The text of the no button for confirmation.\n   */\n  @Prop() confirmNoText?: string = \"No\";\n\n  /**\n   * The text of the confirmation message;\n   */\n  @Prop() confirmMessage?: string = \"Are you sure ?\";\n  \n  /**\n   * Disables the button\n   */\n  @Prop() disabled: boolean = false;\n\n  @State() modalVisible: boolean = false;\n\n  @Element() el!: HTMLDnnButtonElement;\n\n  private modal!: HTMLDnnModalElement;\n\n  /** \n   * Fires when confirm is true and the user confirms the action.\n  */\n  @Event({\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  }) confirmed: EventEmitter;\n\n  /**\n   * Fires when confirm is true and the user cancels the action.\n   */\n  @Event({bubbles: true}) canceled: EventEmitter;\n\n  componentDidLoad(){\n    this.modal = this.el.shadowRoot.querySelector('dnn-modal');\n  }\n\n  private handleConfirm(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.confirmed.emit();\n  }\n\n  private handleCancel(){\n    this.modal.hide();\n    this.modalVisible = false;\n    this.canceled.emit();\n  }\n  \n  private handleClick(): void {\n    if (this.confirm && !this.modalVisible){\n      this.modal.show();\n      this.modalVisible = true;\n    }\n  }\n\n  private getElementClasses(): string | { [className: string]: boolean; } {\n    const classes: string[] = [];\n    classes.push(this.type);\n    if (this.reversed){\n      classes.push('reversed');\n    }\n    if (this.size !== 'normal'){\n      classes.push(this.size);\n    }\n    return classes.join(' ');\n  }\n\n  render() {\n    return (\n      <Host class={this.getElementClasses()} disabled={this.disabled} style={{'pointer-events': this.disabled ? 'none' : 'all'}}>\n        <button class=\"button\" onClick={() => this.handleClick()} disabled={this.disabled}>\n          <slot></slot>\n        </button>\n        {this.confirm &&\n            <dnn-modal showCloseButton={false} backdropDismiss={false}>\n              <p>{this.confirmMessage}</p>\n              <div style={\n                {\n                  display: 'flex',\n                  justifyContent: 'flex-end'\n                }\n              }>\n                <dnn-button type='primary' style={{margin: '5px'}} onClick={() => this.handleConfirm()}>{this.confirmYesText}</dnn-button>\n                <dnn-button type='secondary' style={{margin: '5px'}} onClick={() => this.handleCancel()}>{this.confirmNoText}</dnn-button>\n              </div>\n            </dnn-modal>\n          }\n      </Host>\n    );\n  }\n}\n",":host {\n    /**\n    * @prop --focus-color: The color to outline the checkbox when hovered or focused, default to the dnn primary color.\n    */\n  --focus-color: var(--dnn-color-primary, #3792ED);\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  margin: 3px;\n}\nbutton{\n  background-color: transparent;\n  border: 0;\n  padding: 0;\n  margin: 0;\n  outline: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .unchecked, .checked, .intermediate{\n    display: none;\n  }\n  &.checked .checked, &.unchecked .unchecked, &.intermediate .intermediate{\n    display: block;\n  }\n  svg.undefined{\n    opacity: 0.45;\n  }\n  &:focus{\n    box-shadow: 0 0 2px 2px var(--focus-color);\n  }\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n/**\n * @slot - The label for the checkbox.\n * @slot checkedicon - Allows overriding the default checked icon.\n * @slot uncheckedicon - Allows overriding the unchecked icon.\n * @slot intermediateicon - If intermadiate state is used, allows overriding its icon.\n */\n@Component({\n  tag: 'dnn-checkbox',\n  styleUrl: 'dnn-checkbox.scss',\n  shadow: true,\n})\nexport class DnnCheckbox {\n  @Element() el: HTMLDnnCheckboxElement;\n\n  /** Defines if the checkbox is checked (true) or unchecked (false) or in an intermediate state (undefined) */\n  @Prop({mutable: true}) checked: \"checked\" | \"unchecked\" | \"intermediate\" = \"unchecked\";\n\n  /** Defines if clicking the checkbox will go through the intermediate state between checked and unchecked (tri-state) */\n  @Prop() useIntermediate: boolean = false;\n\n  /** The value for this checkbox (not to be confused with its checked state). */\n  @Prop() value: string;\n\n  /** Fires up when the checkbox checked property changes. */\n  @Event() checkedchange: EventEmitter<\"checked\" | \"unchecked\" | \"intermediate\">;\n\n  private changeState(): void {\n    if (!this.useIntermediate){\n      switch (this.checked) {\n        case \"checked\":\n          this.checked = \"unchecked\";\n          break;\n        case \"unchecked\":\n        case \"intermediate\":\n          this.checked = \"checked\";\n          break;\n        default:\n          break;\n      }\n      this.checkedchange.emit(this.checked);\n      return;\n    }\n    switch (this.checked) {\n      case \"checked\":\n        this.checked = \"intermediate\";\n        break;\n      case \"intermediate\":\n        this.checked = \"unchecked\";\n        break;\n      case \"unchecked\":\n        this.checked = \"checked\";\n        break;\n      default:\n        break;\n    }\n    this.checkedchange.emit(this.checked);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class={`icon ${this.checked}`}\n          onClick={() => this.changeState()}\n        >\n          <div class=\"unchecked\">\n            <slot name=\"uncheckedicon\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n            </slot>\n          </div>\n          <div class=\"checked\">\n            <slot name=\"checkedicon\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/></svg>\n            </slot>\n          </div>\n          <div class=\"intermediate\">\n            <slot name=\"intermediateicon\">\n              <svg class=\"undefined\" xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g><g><path d=\"M19,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V5C21,3.9,20.1,3,19,3z M17,13H7v-2h10V13z\"/></g></g></g></svg>\n            </slot>\n          </div>\n        </button>\n        <label htmlFor={this.el.id} onClick={() => this.changeState()}><slot></slot></label>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n}\nbutton{\n  border: none;\n  padding: 0px;\n  margin: 0px;\n  min-width: 15px;\n  min-height: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  outline: none;\n}\nsvg{\n  height:2em;\n  width:2em;\n  transition: all 300ms ease-in-out;\n}\n\n// FOCUS\nbutton:focus, button:hover{\n  svg{\n    color: var(--dnn-color-primary);\n  }\n}\n\n// EXPANDED\n:host([expanded]){\n  svg{\n    transform: rotate(90deg);\n  }\n}","import { Component, Host, h, Prop, Event } from '@stencil/core';\nimport { EventEmitter } from '@stencil/core';\nimport { Watch } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-chevron',\n  styleUrl: 'dnn-chevron.scss',\n  shadow: true\n})\nexport class DnnChevron {\n\n  /** Expand text for screen readers */\n  @Prop() expandText?: string = \"expand\";\n\n  /** Collapse text for screen readers */\n  @Prop() collapseText?: string = \"collapse\";\n\n  /** Is the chevron expanded */\n  @Prop({mutable: true, reflect: true}) expanded?: boolean = false;\n\n  /** Fires up when the expanded status changes */\n  @Event() changed: EventEmitter;\n\n  @Watch('expanded')\n  handleExpandedChanged(newValue: boolean) {\n    this.changed.emit(newValue);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button aria-label={this.expanded ? this.collapseText : this.expandText}\n          onClick={() => this.expanded = !this.expanded}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg>\n        </button>\n      </Host>\n    );\n  }\n\n}\n",":host {\n  display: block;\n}\n#container{\n  max-height:0;\n  overflow: hidden;\n  transition: max-height 300ms ease-in-out;\n}","import { Component, Host, h, Prop, Element, Event, EventEmitter, Watch, Listen, Method } from '@stencil/core';\n\n@Component({\n  tag: \"dnn-collapsible\",\n  styleUrl: \"dnn-collapsible.scss\",\n  shadow: true\n})\nexport class DnnCollapsible {\n\n  @Element() el: HTMLDnnCollapsibleElement;\n\n  /** Defines if the panel is expanded or not. */\n  @Prop({reflect: true}) expanded: boolean = false;\n\n  /** Defines the transition time in ms, defaults to 150ms */\n  @Prop() transitionDuration?: number = 150;\n\n  /** Fires whenever the collapsible height has changed */\n  @Event({bubbles: true, composed: true}) dnnCollapsibleHeightChanged: EventEmitter<void>;\n\n  @Listen(\"dnnCollapsibleHeightChanged\")\n  handleHeightChanged(){\n    requestAnimationFrame(() => {\n      this.updateSize();\n    })\n  }\n\n  /**\n   * Updates the component height, use to update after a slot content changes.\n   */\n  @Method()\n  async updateSize() {\n    if (this.expanded){\n        requestAnimationFrame(() => {\n          this.container.style.maxHeight = `${this.container.scrollHeight}px`;\n        });\n        setTimeout(() => {\n          this.container.style.maxHeight = \"none\";\n        }, this.transitionDuration);\n    }\n  }\n  \n  @Watch(\"expanded\")\n  handledExpandedChanged(expanded: boolean){\n    if (expanded){\n      this.updateSize();\n    }\n    else{\n      requestAnimationFrame(() => {\n        this.container.style.maxHeight = `${this.container.scrollHeight}px`;\n        requestAnimationFrame(() => {\n          this.container.style.maxHeight = \"0px\";\n        });\n      });\n    }\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        this.dnnCollapsibleHeightChanged.emit();\n      });\n    }, this.transitionDuration);\n  }\n  \n  private container: HTMLDivElement;\n\n  componentDidLoad() {\n    this.container.style.transition = `max-height ${this.transitionDuration}ms ease-in-out`;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          id=\"container\"\n          class={this.expanded && \"expanded\"}\n          ref={el => this.container = el}\n          style={{transition: `max-height ${this.transitionDuration}ms ease-in-out`}}\n        >\n            <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n\n}\n","/** Color utility class with hsl and rgb converters\r\n * based on math at https://en.wikipedia.org/wiki/HSL_and_HSV\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nexport class ColorInfo{\r\n\r\n    private _hue: number = 0;\r\n    /** gets the color hue\r\n     * @returns a number between 0 and 359, could contain decimals\r\n     */\r\n    get hue() { return this._hue; }\r\n    set hue(value: number){\r\n        if (value < 0) { value = 0; }\r\n        if (value > 359) { value = 359; }\r\n        this._hue = value;\r\n    }\r\n\r\n    private _saturation: number = 0;\r\n    /** gets the color saturation\r\n     * @returns a number between 0 and 1, could contain decimals\r\n    */\r\n    get saturation() { return this._saturation; }\r\n    set saturation(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._saturation = value;\r\n    }\r\n\r\n    private _lightness: number = 0;\r\n    /** gets the color lightness\r\n     * @returns a number between 0 and 1, could contain decimals\r\n     */\r\n    get lightness() { return this._lightness; }\r\n    set lightness(value: number) {\r\n        if (value < 0) { value = 0; }\r\n        if (value > 1) { value = 1; }\r\n        this._lightness = value;\r\n    }\r\n\r\n    /** gets or sets the red component \r\n     * @returns an integer between 0 and 255\r\n    */\r\n    get red() {\r\n        return this.getRGB().red;\r\n    }\r\n    set red(value) {\r\n        this.setHSL(value, this.green, this.blue);\r\n    }\r\n\r\n    /** gets or sets the green component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get green() {\r\n        return this.getRGB().green;\r\n    }\r\n    set green(value: number) {\r\n        this.setHSL(this.red, value, this.blue);\r\n    }\r\n\r\n    /** gets or sets the blue component\r\n     * @returns an integer between 0 and 255\r\n     */\r\n    get blue() {\r\n        return this.getRGB().blue;\r\n    }\r\n    set blue(value: number) {\r\n        this.setHSL(this.red, this.green, value);\r\n    }\r\n\r\n    /** gets or sets the hex color value, expresses as 6 hexadecimal characters.\r\n     * @returns hex representation of the color\r\n     */\r\n    get hex() {\r\n        var r = this.getHex(this.red);\r\n        var g = this.getHex(this.green);\r\n        var b = this.getHex(this.blue);\r\n        return r + g + b;\r\n    }\r\n    set hex(value: string){\r\n        this.red = parseInt(value.substr(0,2));\r\n        this.green = parseInt(value.substr(2,2));\r\n        this.blue = parseInt(value.substr(4,2));\r\n    }\r\n\r\n    /** gets white or black color that is a good oposite to the current color\r\n     * @returns - \"000000\" or \"FFFFFF\"\r\n     */\r\n    get contrastColor() {\r\n        const brightness = (this.red*299 + this.green*587 + this.blue*114) / 1000\r\n        if (brightness > 127){\r\n            return \"000000\";\r\n        }\r\n        return \"FFFFFF\";\r\n    }\r\n\r\n    private getRGB() {\r\n        const chroma = (1 - Math.abs((2 * this._lightness) - 1)) * this.saturation;\r\n        // find the quandrant of the hue\r\n        const quadrant = this._hue / 60;\r\n        // calculate the offset from the quandrant center\r\n        const offset = chroma * (1 - Math.abs(quadrant % 2 - 1));\r\n\r\n        // Apply the chroma to the primary component and the offset to the 2nd most important component\r\n        let r = 0, g = 0, b = 0;\r\n        if (0 <= quadrant && quadrant <= 1) {\r\n            r = chroma; g = offset; // red to yellow\r\n        } else if (1 <= quadrant && quadrant <= 2) {\r\n            g = chroma; r = offset; // yellow to green\r\n        } else if (2 <= quadrant && quadrant <= 3) {\r\n            g = chroma; b = offset; // green to cyan\r\n        } else if (3 <= quadrant && quadrant <= 4) {\r\n            b = chroma; g = offset; // cyan to blue\r\n        } else if (4 <= quadrant && quadrant <= 5) {\r\n            b = chroma; r = offset; // blue to magenta\r\n        } else if (5 <= quadrant && quadrant <= 6) {\r\n            r = chroma; b = offset; // magenta to red\r\n        }\r\n        // calculate the bias to add to all channels to match the lightness\r\n        const bias = this._lightness - (chroma / 2);\r\n\r\n        return {\r\n            red: Math.round((r + bias) * 255),\r\n            green: Math.round((g + bias) * 255),\r\n            blue: Math.round((b + bias) * 255)\r\n        }\r\n    }\r\n\r\n    private setHSL(red: number, green: number, blue: number) {\r\n        // GENERAL DATA\r\n        // all math is based on values from 0 to 1\r\n        const r = red/255, g = green/255, b = blue/255;\r\n        // we need to max, min and the difference between them to derive hsl\r\n        const min = Math.min(r, g, b);\r\n        const max = Math.max(r, g, b);\r\n        const diff = max - min;\r\n        let h = 0, s = 0, l = 0;\r\n\r\n        // HUE\r\n        if (diff === 0) { // neutral\r\n            h = 0;\r\n        } else if (max === r) { // red (magenta to yellow range)\r\n            h = 60 * ((g - b) / diff);\r\n        } else if (max === g) { // green (yellow to cyan range)\r\n            h = 60 * (2 + ((b - r) / diff));\r\n        } else if (max === b) { // blue (cyan to magenta range)\r\n            h = 60 * (4 + ((r - g) / diff));\r\n        }\r\n        if (h < 0) { h = h + 360} // ensures positive hues only\r\n        if (h > 359) { h = 359} // ensures we never return 360 for simplicity since it is the same as 0\r\n\r\n        // LIGHTNESS\r\n        l = (max + min) / 2;\r\n\r\n        // SATURATION\r\n        if (max === 0 || min === 1) { // pure black or white have no saturation\r\n            s = 0;\r\n        } else {\r\n            s = (max - l) / (Math.min(l, 1 - l));\r\n        }\r\n\r\n        this._hue = h;\r\n        this._saturation = s;\r\n        this._lightness = l;\r\n    }\r\n\r\n    private getHex(value: number){\r\n        var hex = value.toString(16);\r\n        if (hex.length < 2){\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n} ",".dnn-color-picker{\r\n    padding: 15px;\r\n    max-width: 400px;\r\n    .dnn-color-sliders{\r\n        display:flex;\r\n        flex-direction: column;\r\n        min-width: 200px;\r\n        .dnn-color-s-b{\r\n            border: 1px solid #ccc;\r\n            padding-bottom: var(--color-box-height, 50%);\r\n            position: relative;\r\n            background-color: red;\r\n            &:before{\r\n                content: '';\r\n                    position: absolute;\r\n                    top:0;\r\n                    left:0;\r\n                    width: 100%;\r\n                    height:100%;\r\n                    z-index:1;\r\n                    background: linear-gradient(to right, white, red);\r\n                    mix-blend-mode: saturation;\r\n            }\r\n            &:after{\r\n                content: '';\r\n                position: absolute;\r\n                top:0;\r\n                left:0;\r\n                width: 100%;\r\n                height:100%;\r\n                z-index:2;\r\n                background: linear-gradient(to bottom, white, black);\r\n                mix-blend-mode: luminosity;\r\n            }\r\n            button{\r\n                position: absolute;\r\n                bottom: calc(50% - 4px);\r\n                left: calc(50% - 4px);\r\n                width: 8px;\r\n                height: 8px;\r\n                z-index: 3;\r\n                display: block;\r\n                background: none;\r\n                border: none;\r\n                margin-left: -4px;\r\n                margin-bottom: -4px;\r\n                padding: 7px;\r\n                background-color: #fff;\r\n                border-radius: 50%;\r\n                &:before{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                    border-radius: 50%;\r\n                }\r\n                &:after{\r\n                    content:'';\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 0px;\r\n                    border-radius: 50%;\r\n                    width: 10px;\r\n                    height: 10px;\r\n                    border: 2px solid #ccc;\r\n                }\r\n            } \r\n        }\r\n        .dnn-color-bar {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-top: 15px;\r\n            .dnn-color-result {\r\n                flex-direction: column;\r\n                width: 50px;\r\n                height: 50px;\r\n                border-radius: 50%;\r\n                background: red;\r\n            }\r\n            .dnn-color-hue{\r\n                flex: auto;\r\n                margin-left: 10px;\r\n                height: 16px;\r\n                border: 1px solid #ccc;\r\n                position: relative;\r\n                background: linear-gradient(\r\n                    to right, \r\n                    #f00 0, \r\n                    #ff0 17%,\r\n                    #0f0 33%,\r\n                    #0ff 50%,\r\n                    #00f 67%,\r\n                    #f0f 84%,\r\n                    #f00 100%\r\n                );\r\n                button{\r\n                    width: 10px;\r\n                    height: 20px;\r\n                    position: absolute;\r\n                    top: -2px;\r\n                    left: calc(50% - 4px);\r\n                    border: 0;\r\n                    padding: 0;\r\n                    background-color: transparent;\r\n                    padding-left: -8px;\r\n                    &:before{\r\n                        content:'';\r\n                        position: absolute;\r\n                        top: -2px;\r\n                        left: 0px;\r\n                        border-radius: 3px;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        border: 1px solid #ccc;\r\n                        background-color: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .dnn-color-fields{\r\n        display:flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        .dnn-color-mode-switch {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            padding: .5em;\r\n            button {\r\n                background-color: transparent;\r\n                border: none;\r\n                svg {\r\n                    width: 3em;\r\n                    height: 3em;\r\n                    pointer-events: none;\r\n                    outline: none;\r\n                }\r\n            }\r\n        }\r\n        .dnn-rgb-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-rgb-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                    &.red{\r\n                        border-color: red;\r\n                    }\r\n                    &.green{\r\n                        border-color: green;                \r\n                    }\r\n                    &.blue{\r\n                        border-color: blue;\r\n                    }            \r\n                }\r\n            }\r\n        }\r\n        .dnn-hsl-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hsl-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                input{\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.5em;\r\n                    padding-left: 1.3em;\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n        .dnn-hex-color-fields {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            .dnn-hex-color-field {\r\n                display: flex;\r\n                flex-direction: column;\r\n                flex: auto;\r\n                text-align: center;\r\n                padding: .5em;\r\n                label {\r\n                    padding-bottom: .25em;\r\n                }\r\n                .hex-input{\r\n                    position: relative;\r\n                    border-radius: var(--dnn-button-radius, 3px);\r\n                    border: 1px solid #ccc;\r\n                    padding: 0.323em;\r\n                    text-align: center;\r\n                    input{\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        width:100%;\r\n                        height:100%;\r\n                        text-align:center;\r\n                    }\r\n                    button{\r\n                        position: absolute;\r\n                        height: 100%;\r\n                        top: 0;\r\n                        right: 1em;\r\n                        background-color: transparent;\r\n                        border:0;\r\n                        padding:0;\r\n                        margin:0;\r\n                        svg{\r\n                            min-width: 1em;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n} ","/** Reusable DNN UI component to pick a color\r\n * @copyright Copyright (c) .NET Foundation. All rights reserved.\r\n * @license MIT \r\n */\r\n\r\nimport { Component, h, State, Element, Prop, EventEmitter, Event, Watch } from \"@stencil/core\";\r\nimport { ColorInfo } from '../../utilities/colorInfo';\r\nimport { Debounce } from \"../../utilities/debounce\";\r\n\r\n/** Color Picker for Dnn */\r\n@Component({\r\n    tag: 'dnn-color-picker',\r\n    styleUrl: 'dnn-color-picker.scss',\r\n    shadow: true\r\n})\r\nexport class DnnColorPicker {\r\n\r\n    @Element() el: HTMLDnnColorPickerElement;\r\n\r\n    /** Sets the initial color, must be a valid 8 character hexadecimal string without the # sign. */\r\n    @Prop() color: string = \"FFFFFF\";\r\n\r\n    /** Sets the width-height ratio of the color picker saturation-lightness box.\r\n     * @example 100% renders a perfect square\r\n     */\r\n    @Prop() colorBoxHeight: string = \"50%\";\r\n    \r\n    @State() currentColor: ColorInfo;\r\n    @State() rgbDisplay: string = \"flex\";\r\n    @State() hslDisplay: string = \"none\";\r\n    @State() hexDisplay: string = \"none\";\r\n\r\n    /** Fires up when the color is changed and emits a ColorInfo object\r\n     * @see ../../utilities/colorInfo.ts\r\n    */\r\n    @Event() colorChanged: EventEmitter<ColorInfo>;\r\n\r\n    @Debounce(100)\r\n    private colorChangedHandler(color: ColorInfo) {\r\n        this.colorChanged.emit(color);\r\n    }\r\n\r\n    @Watch(\"currentColor\")\r\n    handeCurrentColorChanged(newValue: ColorInfo){\r\n        this.colorChangedHandler(newValue);\r\n    }\r\n    \r\n    private saturationLightnessBox?: HTMLDivElement;\r\n    private hueRange?: HTMLDivElement;\r\n\r\n\r\n    componentWillLoad() {\r\n        this.handleHexChange(this.color);\r\n    }\r\n\r\n    componentDidLoad() {\r\n        (this.el as unknown as HTMLElement).style.setProperty(\"--color-box-height\", this.colorBoxHeight.toString());\r\n    }\r\n    \r\n    private getHex() {\r\n       return this.getDoublet(this.currentColor.red) + this.getDoublet(this.currentColor.green) + this.getDoublet(this.currentColor.blue);\r\n    }\r\n\r\n    private getContrast() {\r\n        return this.currentColor.contrastColor;\r\n    }\r\n\r\n    private getDoublet(value: number){\r\n        const valueString = value.toString(16).toUpperCase();\r\n        if (valueString.length === 1){\r\n            return '0' + valueString;\r\n        }\r\n        return valueString;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragLightnessSaturation(e);\r\n        window.addEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.addEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleDragLightnessSaturation = (e) => {\r\n        const rect = this.saturationLightnessBox.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;        \r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width;\r\n\r\n        let y = e.clientY - rect.top;\r\n        if (y < 0) { y = 0}\r\n        if (y > rect.height) { y = rect.height}\r\n        y = 1 - (y/rect.height);\r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = x;\r\n        newColor.lightness = y;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleSaturationLightnessMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragLightnessSaturation);\r\n        window.removeEventListener('mouseup', this.handleSaturationLightnessMouseUp);\r\n    }\r\n\r\n    private handleHueMouseDown = (e) => {\r\n        e.preventDefault();\r\n        this.handleDragHue(e);\r\n        window.addEventListener('mousemove', this.handleDragHue);\r\n        window.addEventListener('mouseup', this.handleHueMouseUp);        \r\n    }\r\n\r\n    private handleHueMouseUp = () => {\r\n        window.removeEventListener('mousemove', this.handleDragHue);\r\n        window.removeEventListener('mouseup', this.handleHueMouseUp); \r\n    }\r\n\r\n    private handleDragHue = (e) => {\r\n        const rect = this.hueRange.getBoundingClientRect();        \r\n\r\n        let x = e.clientX - rect.left;\r\n        if (x < 0) { x = 0}\r\n        if (x > rect.width) { x = rect.width}\r\n        x = x/rect.width*360;        \r\n\r\n        const newColor = new ColorInfo();\r\n        newColor.hue = x;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleComponentValueChange = (e, channel) => {\r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) { return }\r\n        const newColor = new ColorInfo();\r\n        if (value < 0) { value = 0; }\r\n        if (value > 255) { value = 255; }\r\n        let r = this.currentColor.red;\r\n        let g = this.currentColor.green;\r\n        let b = this.currentColor.blue;\r\n        switch (channel) {\r\n            case 'red':\r\n                r = value;\r\n                break;\r\n            case 'green':\r\n                g = value;\r\n                break;\r\n            case 'blue':\r\n                b = value;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        newColor.green = g;\r\n        newColor.red = r;\r\n        newColor.blue = b;\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHSLChange = (e, component) => {        \r\n        let value = parseInt(e.target.value);\r\n        if (isNaN(value)) {return}\r\n        const newColor = new ColorInfo();\r\n        if (value != null) {            \r\n            let h = this.currentColor.hue;\r\n            let s = this.currentColor.saturation;\r\n            let l = this.currentColor.lightness;\r\n            switch (component) {\r\n                case \"hue\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 359) { value = 0}\r\n                    h = value;\r\n                    break;\r\n                case \"saturation\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    s = value / 100;\r\n                    break;\r\n                case \"lightness\":\r\n                    if (value < 0) { value = 0}\r\n                    if (value > 100) { value = 100}\r\n                    l = value / 100;\r\n                    break;            \r\n                default:\r\n                    break;                \r\n            }\r\n            newColor.hue = h;\r\n            newColor.saturation = s;\r\n            newColor.lightness = l;\r\n            this.currentColor = newColor;\r\n        }\r\n    }\r\n\r\n    private handleHexChange(value: string){\r\n        const newColor = new ColorInfo();\r\n        if (value.match(/^(?:[\\da-f]{3}|[\\da-f]{6})$/i).length > 0) {\r\n            if (value.length === 3){\r\n                let expanded = value[0] + value[0] + value[1] + value[1] + value[2] + value [2];\r\n                value = expanded;\r\n            }\r\n            newColor.red = parseInt(value.substr(0,2), 16);\r\n            newColor.green = parseInt(value.substr(2,2), 16);\r\n            newColor.blue = parseInt(value.substr(4,2), 16);\r\n        }\r\n        else{\r\n            newColor.red = this.currentColor.red;\r\n            newColor.green = this.currentColor.green;\r\n            newColor.blue = this.currentColor.blue;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private switchColorMode(e) {\r\n        switch(e.target.id) {\r\n            case \"rgb-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"flex\";\r\n                break;\r\n            case \"hex-switch\":\r\n                this.rgbDisplay = \"none\";\r\n                this.hslDisplay = \"flex\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            case \"hsl-switch\":\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n                break;\r\n            default:\r\n                this.rgbDisplay = \"flex\";\r\n                this.hslDisplay = \"none\";\r\n                this.hexDisplay = \"none\";\r\n        }\r\n    }\r\n\r\n    private handleSaturationLightnessKeyDown = (e) => {        \r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 0.01;\r\n        if (e.shiftKey) { value = 0.1 ;}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowUp\":\r\n                newColor.lightness += value;\r\n                break;\r\n            case \"ArrowDown\":\r\n                newColor.lightness -= value;\r\n                break;\r\n            case \"ArrowLeft\":\r\n                newColor.saturation -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.saturation += value;\r\n            default:\r\n                break;                \r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    private handleHueKeyDown = (e) => {\r\n        let newColor = new ColorInfo();\r\n        newColor.hue = this.currentColor.hue;\r\n        newColor.saturation = this.currentColor.saturation;\r\n        newColor.lightness = this.currentColor.lightness;\r\n\r\n        let value = 1;\r\n        if (e.shiftKey) { value = 10}\r\n\r\n        switch (e.key) {\r\n            case \"ArrowLeft\":\r\n                newColor.hue -= value;\r\n                break;\r\n            case \"ArrowRight\":\r\n                newColor.hue += value;\r\n            default:\r\n                break;\r\n        }\r\n        this.currentColor = newColor;\r\n    }\r\n\r\n    render() {\r\n        const hue = this.currentColor.hue;\r\n        const saturation = this.currentColor.saturation;\r\n        const lightness = this.currentColor.lightness;\r\n        const red = this.currentColor.red;\r\n        const green = this.currentColor.green;\r\n        const blue = this.currentColor.blue;\r\n\r\n        return (\r\n            <div class=\"dnn-color-picker\">\r\n                <div class=\"dnn-color-sliders\">\r\n                    <div class=\"dnn-color-s-b\" ref={(element) => this.saturationLightnessBox = element as HTMLDivElement}\r\n                        style={{backgroundColor: `hsl(${hue},100%,50%)`}}\r\n                        onMouseDown={this.handleSaturationLightnessMouseDown.bind(this)}\r\n                    >\r\n                        <button class=\"dnn-s-b-picker\"\r\n                            aria-label=\"Press up or down to adjust lightness, left or right to adjust saturation, hold shift to move by 10%\"\r\n                            role=\"slider\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuetext={`Saturation: ${Math.round(this.currentColor.saturation*100)}%, Lightness: ${Math.round(this.currentColor.lightness*100)}%`}\r\n                            style={{\r\n                                left: Math.round(saturation * 100)  + \"%\",\r\n                                bottom: Math.round(lightness * 100)  + \"%\"\r\n                            }}\r\n                            onKeyDown={(e) => this.handleSaturationLightnessKeyDown(e)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"dnn-color-bar\">\r\n                        <div class=\"dnn-color-result\" style={{\r\n                            backgroundColor: '#' + this.getHex(),\r\n                            boxShadow: \"0 0 2px 1px \" + \"#\" + this.getContrast()\r\n                        }} \r\n                        />\r\n                        <div class=\"dnn-color-hue\"\r\n                            ref={(element) => this.hueRange = element as HTMLDivElement}\r\n                            onMouseDown={this.handleHueMouseDown.bind(this)}\r\n                        >\r\n                            <button class=\"dnn-hue-picker\"\r\n                                aria-label=\"Press left or right to adjust hue, hold shift to move by 10 degrees\"\r\n                                role=\"slider\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"359\"\r\n                                aria-valuenow={Math.round(hue)}\r\n                                style={{left: (hue/359*100).toString() + \"%\"}}\r\n                                onKeyDown={(e) => this.handleHueKeyDown(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dnn-color-fields\">\r\n                    <div class=\"dnn-rgb-color-fields\" style={{display: this.rgbDisplay}}>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>R</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" step=\"1\" class=\"red\" value={red} aria-label=\"red value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'red')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>G</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"green\" value={green} aria-label=\"green value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'green')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-rgb-color-field\">\r\n                            <label>B</label>\r\n                            <input type=\"number\" min=\"0\" max=\"255\" class=\"blue\" value={blue} aria-label=\"blue value\"\r\n                                onChange={(e) => this.handleComponentValueChange(e, 'blue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"rgb-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"switch to hexadecimal value entry\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hsl-color-fields\" style={{display: this.hslDisplay}}>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>H</label>\r\n                            <input type=\"number\" min=\"0\" max=\"359\" step={1} value={Math.round(hue)} aria-label=\"Hue\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'hue')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>S</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(saturation*100)} aria-label=\"Saturation\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'saturation')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-hsl-color-field\">\r\n                            <label>L</label>\r\n                            <input type=\"number\" min=\"0\" max=\"100\" step={1} value={Math.round(lightness*100)} aria-label=\"Lightness\"\r\n                                onChange={(e) => this.handleHSLChange(e, 'lightness')}\r\n                            />\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hsl-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to red, green, blue entry mode\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dnn-hex-color-fields\" style={{display: this.hexDisplay}}>\r\n                        <div class=\"dnn-hex-color-field\">\r\n                            <label>HEX</label>\r\n                            <div class=\"hex-input\">\r\n                                <input type=\"text\" aria-label=\"Hexadecimal value\"\r\n                                    value={this.getHex()}\r\n                                    onChange={e => this.handleHexChange((e.target as HTMLInputElement).value)}\r\n                                />\r\n                                <button\r\n                                    class=\"copy\"\r\n                                    aria-label=\"copy value\"\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/></svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"dnn-color-mode-switch\">\r\n                            <button\r\n                                id=\"hex-switch\"\r\n                                onClick={this.switchColorMode.bind(this)}\r\n                                aria-label=\"Switch to hue saturation lightness values\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z\"/></svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\n:host {\n  /** \n  * @prop --border-color: The color of the border.\n  * @prop --border-radius: The radius of the controls borders.\n  * @prop --drop-background-color: The color of the background when a file is dropping.\n  */\n  --border-color: var(--dnn-color-tertiary-contrast, lightgray);\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --drop-background-color: var(--dnn-color-tertiary, lightblue);\n\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  text-align: center;\n  border: 2px dashed var(--border-color);\n  border-radius: var(--border-radius);\n  padding: 1rem;\n  transition: all 300ms ease-in-out;\n}\n\n:host(.dropping){\n  background-color: var(--drop-background-color);\n}\np{\n  margin: 0;\n  padding: 0;\n}\nbutton{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0px;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  &:hover{\n    cursor: pointer;\n  }\n  svg{\n    margin-right: 0.5rem;\n  }\n}\nlabel.upload-file{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  input{\n    display: none;\n  }\n}\n.video-preview{\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  button{\n    margin: 1rem;\n  }\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-dropzone',\n  styleUrl: 'dnn-dropzone.scss',\n  shadow: true,\n})\nexport class DnnDropzone {\n  /** Localization strings */\n  @Prop() resx:{\n    dragAndDropFile: string;\n    capture: string;\n    or: string;\n    takePicture: string;\n    uploadFile: string;\n  } = {\n    dragAndDropFile: \"Drag and drop a file\",\n    capture: \"Capture\",\n    or: \"or\",\n    takePicture: \"Take a picture\",\n    uploadFile: \"Upload a file\",\n  }\n\n  /** A list of allowed file extensions.\n   * If not specified, any file is allowed.\n   * Ex: [\"jpg\", \"jped\", \"gif\", \"png\"]\n   */\n  @Prop() allowedExtensions: string[];\n\n  /**\n   * If true, will allow the user to take a snapshot\n   * using the device camera. (only works over https).\n   */\n  @Prop() allowCameraMode: boolean = false;\n\n  /**\n   * Specifies the jpeg quality for when the device\n   * camera is used to generate a picture.\n   * Needs to be a number between 0 and 1 and defaults to 0.8\n   */\n  @Prop() captureQuality: number = 0.8;\n\n  /** Fires when file were selected. */\n  @Event() filesSelected: EventEmitter<File[]>;\n  \n  @State() canTakeSnapshots: boolean = false;\n\n  @State() takingPicture: boolean = false;\n  \n  private dropzone: HTMLElement;\n  private fileInput: HTMLInputElement;\n  private videoPreview: HTMLVideoElement;\n  private videoSettings!: MediaTrackSettings;\n\n\n  componentDidLoad() {\n    if (this.allowCameraMode){\n      this.checkIfBrowserCanTakeSnapshots()\n      .then(result => this.canTakeSnapshots = result);\n    }\n    if (this.allowedExtensions != undefined && this.allowedExtensions.length > 0){\n      var extensionsWithDots = this.allowedExtensions.map(e => `.${e}`);\n      var extensionsList = extensionsWithDots.join(\",\");\n      this.fileInput.accept = extensionsList;\n    }\n  }\n\n  private checkIfBrowserCanTakeSnapshots(): Promise<boolean> {\n    return new Promise((resolve) => {\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices == undefined || mediaDevices.enumerateDevices == undefined) {\n        resolve(false);\n      }\n      mediaDevices.enumerateDevices()\n        .then(devices => {\n          var result = devices.some(device => device.kind == \"videoinput\");\n          resolve(result);\n        });\n    });\n  }\n\n  private getFilesFromFileList(files: FileList) : File[] {\n    var fileList: File[] = [];\n    for (let index = 0; index < files.length; index++) {\n      const file = files[index];\n      fileList.push(file);\n    }\n\n    return fileList;\n  }\n\n  private handleUploadButton(element: HTMLInputElement): void {\n    let files = this.getFilesFromFileList(element.files);\n\n    this.filesSelected.emit(files);\n  }\n\n  private handleDragOver = (event: DragEvent) => \n  {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"copy\";\n    this.dropzone.classList.add(\"dropping\");\n  };\n\n  private hasInvalidExtensions(files: FileList): boolean{\n    var hasInvalid = false;\n    for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\n      const file = files[fileIndex];\n      var regex = /(?:\\.([^.]+))?$/;\n      const fileExtension = regex.exec(file.name)[1];\n      if (fileExtension == undefined){\n        hasInvalid = true;\n      }\n\n      if (this.allowedExtensions != undefined && !this.allowedExtensions.includes(fileExtension)){\n        hasInvalid = true;\n      }\n\n      return hasInvalid;\n    }\n  }\n\n  private handleDrop = (dropEvent: DragEvent) => {\n    dropEvent.stopPropagation();\n    dropEvent.preventDefault();\n    const files = dropEvent.dataTransfer.files;\n\n    if (this.hasInvalidExtensions(files)){\n      return;\n    }\n    var fileList = this.getFilesFromFileList(files);\n    this.filesSelected.emit(fileList);\n  };\n\n  private takeSnapshot(): void {\n    this.takingPicture = true;\n    navigator.mediaDevices.getUserMedia({video: true, audio: false})\n    .then(stream => {\n      stream\n      this.videoPreview.srcObject = stream;\n      this.videoPreview.play()\n      .then(() => {\n        this.videoSettings = stream.getVideoTracks()[0].getSettings();\n      });\n    })\n    .catch(error => alert(error));\n  }\n\n  private applySnapshot(): void {\n    var canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = this.videoSettings.width;\n    canvas.height = this.videoSettings.height;\n    context.drawImage(this.videoPreview, 0, 0);\n    canvas.toBlob(blob => {\n      var file = new File([blob], \"image.jpeg\", {type:\"image/jpeg\"});\n      this.takingPicture = false;\n      \n      var fileList = [file];\n      this.filesSelected.emit(fileList)\n    }, \"image/jpeg\", this.captureQuality);\n  }\n  \n  render() {\n    return (\n      <Host\n        ref={e => this.dropzone = e}\n        class=\"dropzone\"\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n        onDragLeave={() => this.dropzone.classList.remove(\"dropping\")}\n      >\n        {!this.takingPicture &&\n          [\n            <p>{this.resx?.dragAndDropFile}</p>\n          ,\n            <p>- {this.resx?.or} -</p>\n          ,\n            <label class=\"upload-file\">\n              <input\n                type=\"file\"\n                ref={el => this.fileInput = el}\n                onChange={e => this.handleUploadButton(e.target as HTMLInputElement)}\n              >\n              </input>\n              <span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><path d=\"M5,20h14v-2H5V20z M5,10h4v6h6v-6h4l-7-7L5,10z\"/></g></svg>\n              </span>\n              &nbsp;\n              {this.resx?.uploadFile}\n            </label>\n            ,\n            this.canTakeSnapshots &&\n              [\n                <p>- {this.resx?.or} -</p>\n                ,\n                <button\n                  onClick={() => this.takeSnapshot()}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><circle cx=\"12\" cy=\"12\" r=\"3.2\"/><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/></svg>\n                  {this.resx?.takePicture}\n                </button>\n              ]\n          ]\n        }\n        {this.takingPicture &&\n          <div class=\"video-preview\">\n            <video ref={e => this.videoPreview = e} />\n            <button\n              onClick={() => this.applySnapshot()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><circle cx=\"12\" cy=\"12\" r=\"3.2\"/><path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/></svg>&nbsp;\n              {this.resx?.capture}\n            </button>\n          </div>\n        }\n      </Host>\n    );\n  }\n\n}\n","export enum CornerType {\r\n    \"nw\",\r\n    \"ne\",\r\n    \"se\",\r\n    \"sw\",\r\n};","export function getMovementFromEvent(\r\n    event: MouseEvent | TouchEvent,\r\n    previousTouch: Touch\r\n) {\r\n    let movementX = 0;\r\n    let movementY = 0;\r\n    if (event instanceof MouseEvent) {\r\n      movementX = event.movementX;\r\n      movementY = event.movementY;\r\n    }\r\n    if (typeof TouchEvent !== \"undefined\"){\r\n      if (event instanceof TouchEvent) {\r\n        let touch = event.touches[0];\r\n        if (previousTouch != undefined) {\r\n          movementX = touch.pageX - this.previousTouch.pageX;\r\n          movementY = touch.pageY - this.previousTouch.pageY;\r\n        }\r\n        previousTouch = touch;\r\n      }\r\n    }\r\n    return { movementX, movementY };\r\n  }",":host {\n  display: block;\n}\ncanvas {\n  display: none;\n}\n.view{\n  visibility: hidden;\n  opacity: 0;\n  height: 0;\n  overflow: hidden;\n  transition: all 300ms ease-in-out;\n  &.visible{\n    visibility: visible;\n    opacity: 1;\n    height: initial;\n    overflow: visible;\n  }\n  .cropper{\n    position: relative;\n    width: 100%;\n    img{\n      width: 100%;\n      display: block;\n      margin: 0 auto;\n    }\n    .backdrop{\n      backdrop-filter: saturate(0.5);\n      backdrop-filter: brightness(0.5);\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .crop{\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      outline: 2px dashed white;\n      box-shadow: black 0 0 0px 2px;\n      backdrop-filter: saturate(2);\n      backdrop-filter: brightness(2);\n      cursor: move;\n      >div{\n        width: 20px;\n        height: 20px;\n        background-color: white;\n        border: 2px solid rgba(0,0,0,0.5);\n        position: absolute;\n        &.nw, &.ne{\n          top: -17px;\n        }\n        &.ne, &.se{\n          right: -17px;\n        }\n        &.se, &.sw{\n          bottom: -17px;\n        }\n        &.sw, &.nw{\n          left: -17px;\n        }\n        &.nw, &.se{\n          cursor: nwse-resize;\n        }\n        &.ne, &.sw{\n          cursor: nesw-resize;\n        }\n      }\n    }\n  }\n}\ndnn-modal{\n  --max-width: 512px;\n}","import { Component, Host, h, State, Prop, Event, EventEmitter } from '@stencil/core';\nimport { CornerType } from './CornerType';\nimport { getMovementFromEvent } from \"../../utilities/mouseUtilities\";\n\n/**\n * Allows cropping an image in-browser with the option to enforce a specific final size.\n * All computation happens in the browser and the final image is emmited\n * in an event that has a data-url of the image.\n */\n@Component({\n  tag: 'dnn-image-cropper',\n  styleUrl: 'dnn-image-cropper.scss',\n  shadow: true,\n})\nexport class DnnImageCropper {\n  /** Sets the desired final image width. */\n  @Prop() width: number = 600;\n\n  /** Sets the desired final image height. */\n  @Prop() height: number = 600;\n\n  /** Can be used to customize controls text.\n   * Some values support tokens, see default values for examples.\n  */\n  @Prop() resx: {\n    capture: string;\n    dragAndDropFile: string;\n    or: string;\n    takePicture: string;\n    uploadFile: string;\n    imageTooSmall: string;\n    modalCloseText: string;\n  } = {\n    capture: \"Capture\",\n    dragAndDropFile: \"Drag and drop an image\",\n    or: \"or\",\n    takePicture: \"Take a picture\",\n    uploadFile: \"Upload an image\",\n    imageTooSmall: \"The image you are attempting to upload does not meet the minimum size requirement of {width} pixels by {height} pixels. Please upload a larger image.\",\n    modalCloseText: \"Close\",\n  }\n\n  /** Sets the output quality of the corpped image (number between 0 and 1). */\n  @Prop() quality: number = 0.8;\n\n  /** When set to true, prevents cropping an image smaller than the required size, which would blow pixel and make the final picture look blurry. */\n  @Prop() preventUndersized: boolean = false;\n\n  /** When the image crop changes, emits the dataurl for the new cropped image. */\n  @Event() imageCropChanged: EventEmitter<string>;\n\n  @State() view: IComponentInterfaces[\"View\"];\n  \n  private host: HTMLElement;\n  private hasPictureView: HTMLDivElement;\n  private noPictureView: HTMLDivElement;\n  private canvas: HTMLCanvasElement;\n  private image: HTMLImageElement;\n  private crop: HTMLDivElement;\n  private previousTouch: Touch;\n  private imageTooSmallModal!: HTMLDnnModalElement;\n\n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      this.setView(\"noPictureView\");\n    })\n  }\n\n  private setView(newView: IComponentInterfaces[\"View\"]){\n    const views = this.host.shadowRoot.querySelectorAll(\".view\");\n    views.forEach(v =>\n      v.classList.remove(\"visible\"));\n    switch (newView) {\n      case \"noPictureView\":\n        this.noPictureView.classList.add(\"visible\");\n        break;\n      case \"hasPictureView\":\n        this.hasPictureView.classList.add(\"visible\");\n        break;\n      default:\n        break;\n    }\n    this.view = newView;\n  }\n\n  private initCrop(){\n    var wantedRatio = this.width / this.height;\n    var imageRect = this.image.getBoundingClientRect();\n    var imageRatio = imageRect.width / imageRect.height;\n    \n    if (wantedRatio > imageRatio){\n        var wantedHeight = imageRect.width / wantedRatio;\n        var diff = imageRect.height - wantedHeight;\n        this.crop.style.top = Math.round(diff/2).toString() + \"px\";\n        this.crop.style.height = Math.round(wantedHeight).toString() + \"px\";\n    }\n    else{\n      var wantedWidth = imageRect.height * wantedRatio;\n      var diff = imageRect.width - wantedWidth;\n        this.crop.style.left = Math.round(diff/2).toString() + \"px\";\n        this.crop.style.width = Math.round(wantedWidth).toString() + \"px\";\n    }\n  }\n\n  private setImage(){\n    this.image.addEventListener('load', () => {\n      this.initCrop();\n      this.emitImage();\n    })\n    this.image.src = this.canvas.toDataURL();\n  }\n\n  private handleNewFile(file: File): void {\n    if (file.type.split('/')[0] != \"image\"){\n      return;\n    }\n    \n    var reader = new FileReader();\n    reader.onload = readerLoadEvent => {\n      var img = new Image();\n      img.onload = () => {\n        this.canvas.width = img.width;\n        this.canvas.height = img.height;\n        if (this.preventUndersized && (img.width < this.width || img.height< this.height)){\n          this.imageTooSmallModal.show();\n          return;\n        }\n        var ctx = this.canvas.getContext(\"2d\");\n        ctx.drawImage(img,0,0);\n        this.setView(\"hasPictureView\");\n        this.setImage();\n      }\n      img.src = readerLoadEvent.target.result.toString();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  private handleCropMouseDown = (event: MouseEvent | TouchEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const element = event.target as HTMLElement;\n    const className = element.classList[0];\n\n    document.addEventListener(\"mouseup\", this.handleImageCropFinished, false);\n    document.addEventListener(\"touchend\", this.handleImageCropFinished, false);\n    switch (className) {\n      case \"crop\":\n        document.addEventListener(\"mousemove\", this.handleCropDrag, false);\n        document.addEventListener(\"touchmove\", this.handleCropDrag, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleCropDrag));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleCropDrag));\n        break;\n      case \"nw\":\n        document.addEventListener(\"mousemove\", this.handleNwMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleNwMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNwMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNwMouseMove));\n        break;\n      case \"ne\":\n        document.addEventListener(\"mousemove\", this.handleNeMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleNeMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleNeMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleNeMouseMove));\n        break\n      case \"se\":\n        document.addEventListener(\"mousemove\", this.handleSeMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleSeMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSeMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSeMouseMove));\n        break;\n      case \"sw\":\n        document.addEventListener(\"mousemove\", this.handleSwMouseMove, false);\n        document.addEventListener(\"touchmove\", this.handleSwMouseMove, false)\n        document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", this.handleSwMouseMove));\n        document.addEventListener(\"touchend\", () => document.removeEventListener(\"touchmove\", this.handleSwMouseMove));\n        break;\n      default:\n        break;\n    }\n  };\n\n  private handleImageCropFinished = (_ev: MouseEvent) => {\n    this.emitImage();\n    document.removeEventListener(\"mouseup\", this.handleImageCropFinished);\n    this.previousTouch = undefined;\n  }\n\n  private emitImage() {\n    var x = this.crop.offsetLeft / this.image.width * this.image.naturalWidth;\n    var y = this.crop.offsetTop / this.image.height * this.image.naturalHeight;\n\n    var cropRect = this.crop.getBoundingClientRect();\n    var width = cropRect.width / this.image.width * this.image.naturalWidth;\n    var height = cropRect.height / this.image.height * this.image.naturalHeight;\n\n    if (x < 0)\n      x = 0;\n    if (x > this.image.naturalWidth)\n      x = this.image.naturalWidth;\n    if (y < 0)\n      y = 0;\n    if (y > this.image.naturalWidth)\n      y = this.image.naturalWidth;\n    if (width > this.image.naturalWidth)\n      width = this.image.naturalWidth;\n    if (height > this.image.naturalHeight)\n      height = this.image.naturalHeight;\n\n    var dataUrl = this.generateCroppedImage(x, y, width, height, this.width, this.height);\n    this.imageCropChanged.emit(dataUrl);\n  }\n\n  private generateCroppedImage(x: number, y: number, width: number, height: number, desiredWidth: number, desiredHeight: number) {\n    this.canvas.width = desiredWidth;\n    this.canvas.height = desiredHeight;\n    const context = this.canvas.getContext(\"2d\");\n    context.clearRect(0, 0, desiredWidth, desiredHeight);\n    context.drawImage(this.image, x, y, width, height, 0, 0, desiredWidth, desiredHeight);\n\n    return this.canvas.toDataURL(\"image/jpeg\", this.quality);\n  }\n\n  private handleNwMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.nw);\n  }\n\n  private handleNeMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.ne);\n  }\n\n  private handleSeMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.se);\n  }\n\n  private handleSwMouseMove = (event: MouseEvent | TouchEvent) => {\n    this.handleCornerDrag(event, CornerType.sw);\n  }\n\n  private handleCornerDrag = (event: MouseEvent | TouchEvent, corner: CornerType) => {\n    if (!this.isMouseStillInTarget(event)){\n      return;\n    }\n    \n    let {left, top} = this.getCornerLeftTop(corner);\n    let newWidth = 0;\n    let newHeight = 0;\n    let orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\n    const wantedRatio = this.width / this.height;\n    const cropRect = this.crop.getBoundingClientRect();\n    const imageRect = this.image.getBoundingClientRect();\n    let { movementX, movementY } = getMovementFromEvent(event, this.previousTouch);\n    if (Math.abs(movementX) < Math.abs(movementY)){\n      orientation = \"vertical\";\n    }\n\n    if (orientation == \"horizontal\"){\n      switch (corner) {\n        case CornerType.nw:\n        case CornerType.sw:\n          newWidth = cropRect.width - movementX;\n          newHeight = newWidth / wantedRatio;\n          break;\n        case CornerType.ne:\n        case CornerType.se:\n          newWidth = cropRect.width + movementX;\n          newHeight = newWidth / wantedRatio;\n          break;\n        default:\n          break;\n      }\n    } else{\n      switch (corner) {\n        case CornerType.nw:\n        case CornerType.ne:\n          newHeight = cropRect.height - movementY;\n          newWidth = newHeight * wantedRatio;\n          break;\n        case CornerType.se:\n        case CornerType.sw:\n          newHeight = cropRect.height + movementY;\n          newWidth = newHeight * wantedRatio;\n          break;\n        default:\n          break;\n      }\n    }\n\n    switch (corner) {\n      case CornerType.ne:\n      case CornerType.nw:\n        const topOffset = cropRect.height - newHeight;\n        top = this.crop.offsetTop + topOffset;\n      default:\n        break;\n    }\n\n    switch (corner) {\n      case CornerType.nw:\n      case CornerType.sw:\n        const leftOffset = cropRect.width - newWidth;\n        left = this.crop.offsetLeft + leftOffset;\n        if (left < 0) left = 0;\n        if (left > imageRect.width) left = imageRect.width;\n        if (top < 0) top = 0;\n        if (top > imageRect.height) top = imageRect.height;\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\n        break;\n      case CornerType.ne:\n      case CornerType.se:\n        if (top < 0) top = 0;\n        if (top > imageRect.height) top = imageRect.height;\n        if (left + newWidth > imageRect.width) newWidth = imageRect.width - left;\n        if (top + newHeight > imageRect.height) newHeight = imageRect.height - top;\n        break;\n      default:\n        break;\n    }\n\n    if (newWidth / newHeight != wantedRatio){\n      return;\n    }\n\n    if (this.preventUndersized){\n      const zoomRatio = this.image.width / this.image.naturalWidth;\n      if (newWidth / zoomRatio < this.width || newHeight / zoomRatio < this.height){\n        return;\n      }\n    }\n\n    switch (corner) {\n      case CornerType.ne:\n        this.crop.style.top = `${top}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.nw:\n        this.crop.style.left = `${left}px`;\n        this.crop.style.top = `${top}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.se:\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      case CornerType.sw:\n        this.crop.style.left = `${left}px`;\n        this.crop.style.width = `${newWidth}px`;\n        this.crop.style.height = `${newHeight}px`;\n        break;\n      default:\n        break;\n    }\n  }\n\n  private getCornerLeftTop(corner: CornerType): { left: number; top: number; } {\n    let left = 0;\n    let top = 0;\n    switch (corner) {\n      case CornerType.se:\n        left = this.crop.offsetLeft;\n        top = this.crop.offsetTop;\n        break;\n      case CornerType.sw:\n        top = this.crop.offsetTop;\n        break;\n      default:\n        break;\n    }\n    return {top, left};\n  }\n\n  private handleCropDrag = (ev: MouseEvent | TouchEvent) => {\n    if (!this.isMouseStillInTarget(ev)){\n      return;\n    }\n    let {movementX, movementY} = getMovementFromEvent(ev, this.previousTouch);\n    let newLeft = this.crop.offsetLeft + movementX;\n    let newTop = this.crop.offsetTop + movementY;\n    var imageRect = this.image.getBoundingClientRect();\n    var cropRect = this.crop.getBoundingClientRect();\n    if (newLeft < 0){\n      newLeft = 0;\n    }\n    if (newTop < 0){\n      newTop = 0;\n    }\n    if (newLeft + cropRect.width > imageRect.width){\n      newLeft = this.crop.offsetLeft;\n    }\n    if (newTop + cropRect.height > imageRect.height){\n      newTop = this.crop.offsetTop;\n    }\n    this.crop.style.left = newLeft + \"px\";\n    this.crop.style.top = newTop + \"px\";\n  };\n\n  private isMouseStillInTarget(event: MouseEvent | TouchEvent) {\n    var inside = false;\n    let mouseX: number;\n    let mouseY: number;\n    const imageRect = this.image.getBoundingClientRect();\n    \n    if (event instanceof MouseEvent){\n      mouseX = event.clientX;\n      mouseY = event.clientY;\n    }\n\n    if (typeof TouchEvent !== \"undefined\"){\n      if (event instanceof TouchEvent){\n        var touch = event.touches[0];\n        mouseX = touch.clientX;\n        mouseY = touch.clientY;\n      }\n    }\n    \n    if (\n      mouseX >= imageRect.x &&\n      mouseY >= imageRect.y &&\n      mouseX <= imageRect.left + imageRect.width &&\n      mouseY <= imageRect.top + imageRect.height)\n    {\n      inside = true;\n    }\n\n    var corners = this.crop.querySelectorAll(\"div\");\n    corners.forEach(corner =>{\n      var cornerRect = corner.getBoundingClientRect();\n      if (\n        mouseX >= cornerRect.x &&\n        mouseY >= cornerRect.y &&\n        mouseX <= cornerRect.left + cornerRect.width &&\n        mouseY <= cornerRect.top + cornerRect.height)\n        {\n          inside = true;\n        }\n    })\n\n    return inside;\n  }\n\n  render() {\n    return (\n      <Host ref={el => this.host = el}>\n        <canvas ref={el => this.canvas = el} />\n        <div\n          class=\"view\"\n          ref={el => this.hasPictureView = el}\n        >\n          <div class=\"cropper\">\n            <img ref={el => this.image = el} />\n            <div class=\"backdrop\" />\n            <div\n              class=\"crop\"\n              ref={e => this.crop = e}\n              onMouseDown={this.handleCropMouseDown}\n              onTouchStart={this.handleCropMouseDown}\n            >\n              <div class=\"nw\" />\n              <div class=\"ne\" />\n              <div class=\"se\" />\n              <div class=\"sw\" />\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"view\"\n          ref={el => this.noPictureView = el}>\n            <dnn-dropzone\n              allowCameraMode\n              onFilesSelected={e => this.handleNewFile(e.detail[0])}\n              resx={\n                {\n                  capture: this.resx.capture,\n                  dragAndDropFile: this.resx.dragAndDropFile,\n                  or: this.resx.or,\n                  takePicture: this.resx.takePicture,\n                  uploadFile: this.resx.uploadFile,\n                }\n              }\n            />\n        </div>\n        <dnn-modal ref={el => this.imageTooSmallModal = el} close-text={this.resx.modalCloseText}>\n          <p>{this.resx.imageTooSmall.replace(\"{width}\", this.width.toString()).replace(\"{height}\", this.height.toString())}</p>\n        </dnn-modal>\n      </Host>\n    );\n  }\n}\n\ninterface IComponentInterfaces\n{\n  View: \"noPictureView\" | \"takingPictureView\" | \"hasPictureView\" | \"hasCroppedPictureView\";\n}",":host {\n  /**\n   * @prop --max-width: The maximum width of the module.\n  */\n  display: block;\n  .overlay{\n    background-color: rgba(0,0,0,0.5);\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    z-index: 1002; // DNN default theme has menus on z-index 1001\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    backdrop-filter: blur(2px);\n    transition: all 300ms ease-in-out;\n    visibility: hidden;\n    opacity: 0;\n    .modal{\n      max-width: var(--max-width, 1200px);\n      background-color: white;\n      padding: 30px;\n      transform: scale(2);\n      transition: all 300ms ease-in-out;\n      z-index: 2;\n      position: relative;\n      margin: 10%;\n      max-height: 80%;\n      border-radius: var(--dnn-controls-radius, 5px);\n      box-shadow: 10px 10px 20px 0 rgba(0,0,0,0.5);\n      display: block;\n      .content{\n        max-width: 80vw;\n        max-height: 80vh;\n        overflow: auto;\n      }\n      .close{\n        position: absolute;\n        background-color:white;\n        border: 2px solid white;\n        border-radius: 50%;\n        padding: 0;\n        margin: 0;\n        top: -12px;\n        right: -12px;\n        outline: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        &:focus, &:hover{\n          box-shadow: 0 0 2px 2px var(--dnn-color-primary, blue);\n        }\n        svg{\n          width: 24px;\n          height: 24px;\n          color: grey;\n        }\n      }\n    }\n    &.visible{\n      visibility: visible;\n      opacity: 1;\n      .modal{\n        transform: scale(1);\n        box-shadow: 4px 4px 10px 0px rgba(0,0,0,0.5);\n        display: block;\n      }\n    }\n  }\n}","import { Component, Element, Host, h, Prop, Event, EventEmitter, Method } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-modal',\n  styleUrl: 'dnn-modal.scss',\n  shadow: true\n})\nexport class DnnModal {\n  \n  @Element() el!: HTMLDnnModalElement;\n  \n  /**\n   * Pass false to remove the backdrop click auto-dismiss feature.\n   */\n  @Prop() backdropDismiss: boolean = true;\n\n  /**\n   * Optionally pass the aria-label text for the close button.\n   * Defaults to \"Close modal\" if not provided.\n   */\n  @Prop() closeText?: string = \"Close modal\";\n\n  /**\n   * Optionally you can pass false to not show the close button.\n   * If you decide to do so, you should either not also prevent dismissal by clicking the backdrop\n   * or provide your own dismissal logic in the modal content.\n   */\n  @Prop() showCloseButton?: boolean = true;\n\n  /**\n   * Reflects the visible state of the modal.\n   */\n  @Prop({mutable: true, reflect: true}) visible: boolean = false;\n\n  /**\n   * Shows the modal\n   */\n  @Method()\n  async show() {\n    this.visible = true;\n  }\n\n  /**\n   * Hides the modal\n   */\n  @Method()\n  async hide() {\n    this.visible = false;\n  }\n\n  /**\n   * Fires when the modal is dismissed.\n   */\n  @Event() dismissed!: EventEmitter;\n\n  private handleDismiss(){\n    this.visible = false;\n    this.dismissed.emit();\n  }\n\n  private handleBackdropClick(e: MouseEvent): void {\n    const element = (e.target as HTMLElement);\n    if (element.id === \"backdrop\" && this.backdropDismiss){\n      this.handleDismiss();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div id=\"backdrop\"\n          class={this.visible ? 'overlay visible' : 'overlay'}\n          onClick={e => this.handleBackdropClick(e)}\n        >\n          <div class=\"modal\">\n            {this.showCloseButton &&\n              <button\n                class=\"close\"\n                aria-label={this.closeText}\n                onClick={() => this.handleDismiss()}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"/></svg>\n              </button>\n            }\n            <div class=\"content\">\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","export const escapeCode = (code: string | undefined): string | undefined =>\n  code?.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n\nexport const unescapeCode = (code: string | undefined): string | undefined =>\n  code\n    ?.replace(/'&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#039;/g, \"'\");","\nimport { consoleError } from '@stencil/core/internal';\n\n\nconst isInstanceOf = (value, className) => {\n  const C = globalThis[className];\n  return C != null && value instanceof C;\n}\nconst getTransferables = (value) => {\n  if (value != null) {\n  if (\n    isInstanceOf(value, \"ArrayBuffer\") ||\n    isInstanceOf(value, \"MessagePort\") ||\n    isInstanceOf(value, \"ImageBitmap\") ||\n    isInstanceOf(value, \"OffscreenCanvas\")\n  ) {\n    return [value];\n  }\n  if (typeof value === \"object\") {\n    if (value.constructor === Object) {\n    value = Object.values(value);\n    }\n    if (Array.isArray(value)) {\n    return value.flatMap(getTransferables);\n    }\n    return getTransferables(value.buffer);\n  }\n  }\n  return [];\n};\n\nlet pendingIds = 0;\nlet callbackIds = 0;\nconst pending = new Map();\nconst callbacks = new Map();\n\nexport const createWorker = (workerPath, workerName, workerMsgId) => {\n  const worker = new Worker(workerPath, {name:workerName});\n\n  worker.addEventListener('message', ({data}) => {\n  if (data) {\n    const workerMsg = data[0];\n    const id = data[1];\n    const value = data[2];\n\n    if (workerMsg === workerMsgId) {\n    const err = data[3];\n    const [resolve, reject, callbackIds] = pending.get(id);\n    pending.delete(id);\n\n    if (err) {\n      const errObj = (err.isError)\n      ? Object.assign(new Error(err.value.message), err.value)\n      : err.value;\n\n      consoleError(errObj);\n      reject(errObj);\n    } else {\n      if (callbackIds) {\n      callbackIds.forEach(id => callbacks.delete(id));\n      }\n      resolve(value);\n    }\n    } else if (workerMsg === workerMsgId + '.cb') {\n    try {\n      callbacks.get(id)(...value);\n    } catch (e) {\n      consoleError(e);\n    }\n    }\n  }\n  });\n\n  return worker;\n};\n\nexport const createWorkerProxy = (worker, workerMsgId, exportedMethod) => (\n  (...args) => new Promise((resolve, reject) => {\n  let pendingId = pendingIds++;\n  let i = 0;\n  let argLen = args.length;\n  let mainData = [resolve, reject];\n  pending.set(pendingId, mainData);\n\n  for (; i < argLen; i++) {\n    if (typeof args[i] === 'function') {\n    const callbackId = callbackIds++;\n    callbacks.set(callbackId, args[i]);\n    args[i] = [workerMsgId + '.cb', callbackId];\n    (mainData[2] = mainData[2] || []).push(callbackId);\n    }\n  }\n  const postMessage = (w) => (\n    w.postMessage(\n    [workerMsgId, pendingId, exportedMethod, args],\n    getTransferables(args)\n    )\n  );\n  if (worker.then) {\n    worker.then(postMessage);\n  } else {\n    postMessage(worker);\n  }\n  })\n);\n","@import '~monaco-editor/dev/vs/editor/editor.main.css';\n\n:host {\n    /**\n    * @prop --monaco-editor-width: width of the editor, default is 100%\n    * @prop --monaco-editor-height: height of the editor, default is 50vh\n    */\n    --monaco-editor-width: 100%;\n    --monaco-editor-height: 50vh;\n}\n\n.editor-container {\n  width: var(--monaco-editor-width);\n  height: var(--monaco-editor-height);\n}","import {Component, Element, Event, EventEmitter, h, Host, Method, Prop, Watch} from '@stencil/core';\nimport { escapeCode, unescapeCode } from './utils/code.utils';\nimport { editor } from 'monaco-editor/esm/vs/editor/editor.api';\nimport { worker as jsonWorker } from 'monaco-editor/esm/vs/language/json/json.worker.js?worker';\nimport { worker as cssWorker } from 'monaco-editor/esm/vs/language/css/css.worker.js?worker';\nimport { worker as htmlWorker } from 'monaco-editor/esm/vs/language/html/html.worker.js?worker';\nimport { worker as tsWorker } from 'monaco-editor/esm/vs/language/typescript/ts.worker.js?worker';\nimport { worker as editorWorker } from 'monaco-editor/esm/vs/editor/editor.worker.js?worker';\n\ndeclare const monaco: any;\n\n@Component({\n  tag: 'dnn-monaco-editor',\n  styleUrl: 'dnn-monaco-editor.scss',\n  shadow: true\n})\nexport class DnnMonacoEditor {\n  \n  @Element() el: HTMLDnnMonacoEditorElement;\n\n  /** Sets the monaco editor options. */\n  @Prop() options: editor.IStandaloneEditorConstructionOptions;\n\n  /** Event to indicate editor has loaded */\n  @Event() editorDidLoad: EventEmitter<void>;\n\n  /** Watch editor option changes */\n  @Watch('options')\n  onOptionsChange() {\n    this.editor?.updateOptions(this.mergeOptions());\n  }\n\n  /** Set focus to editor */\n  @Method()\n  async setFocus() {\n    this.editor?.focus();\n  }\n\n  /** Update code language editor */\n  @Method()\n  async updateLanguage(languageId: string) {\n    monaco.editor.setModelLanguage(this.editor?.getModel(), languageId);\n  }\n\n  /** Get value of the current model attached to this editor. */\n  @Method()\n  async getValue(){\n    return Promise.resolve(escapeCode(this.editor?.getValue()));\n  }\n\n  /**\n   * Sets a new editor value.\n   * @param newValue The new value to set.\n   */\n  @Method()\n  async setValue(newValue: string){\n    this.editor?.setValue(unescapeCode(newValue));\n  }\n\n  private mergeOptions(): editor.IStandaloneEditorConstructionOptions {\n    return {\n      ...this.defaultOptions,\n      ...(this.options || {})\n    };\n  }\n  \n  private editor: editor.IStandaloneCodeEditor;\n\n  private readonly defaultOptions: editor.IStandaloneEditorConstructionOptions = {\n    automaticLayout: true,\n    language: 'typescript',\n    lineNumbers: \"on\",\n    fixedOverflowWidgets: true,\n    useShadowDOM: true,\n    minimap: {\n      enabled: true\n    },\n    readOnly: false,\n    roundedSelection: false,\n    scrollBeyondLastLine: false,\n    theme: 'vs-dark',\n    wordWrap: 'wordWrapColumn',\n    wordWrapColumn: 80,\n    wrappingIndent: \"indent\",\n  };\n\n  async componentWillLoad() {\n    await this.loadMonacoEditor();\n  }\n\n  componentDidLoad() {\n    this.initializeEditor();\n  }\n\n  private getSlottetCode(){\n    const slottedCode: HTMLElement = this.el.querySelector(':scope > *:first-of-type');\n    return unescapeCode(slottedCode?.innerHTML.trim() || '');\n  }\n\n  private loadScript(src: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => resolve();\n      script.onerror = (error) => reject(error);\n      document.head.appendChild(script);\n    });\n  }\n\n  private getFullAssetPath(path: string): string {\n    const monacoDir = new URL(\"assets/monaco-editor\", import.meta.url);\n    const finalPath = new URL(path, `${monacoDir}/`);\n    \n    return finalPath.toString();\n  }\n\n  private async loadMonacoEditor() {\n    await this.loadScript(this.getFullAssetPath(\"loader.js\"));\n    await new Promise<void>(resolve => {\n      (window as any).require.config({\n        paths: { vs: this.getFullAssetPath(\"\") },\n      });\n      (window as any).require([\"vs/editor/editor.main\"], () => {\n        resolve();\n      });\n    });\n  }\n\n  private initializeEditor() {\n    const container = this.el.shadowRoot.querySelector('.editor-container');\n    if (container) {\n      // Configure worker URLs\n      (window as any).MonacoEnvironment = {\n        getWorker: function (_moduleId: string, label: string) {\n          if (label === 'json') {\n            return jsonWorker;\n          }\n          if (label === 'css' || label === 'scss' || label === 'less') {\n            return cssWorker;\n          }\n          if (label === 'html' || label === 'handlebars' || label === 'razor') {\n            return htmlWorker;\n          }\n          if (label === 'typescript' || label === 'javascript') {\n            return tsWorker;\n          }\n          return editorWorker;\n        },\n      };\n\n      this.editor = (window as any).monaco.editor.create(container as HTMLElement, {\n        value: this.getSlottetCode(),\n        ...this.mergeOptions(),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"editor-container\"></div>\n      </Host>\n    );\n  }\n}",":host {\n  display: block;\n}\n\n.add-role-row{\n  display: flex;\n  gap: 1em;\n  align-items: center;\n  flex-wrap: wrap;\n  label{\n    margin-right:0.5em;\n  }\n}\n.search-user{\n  display: flex;\n  gap: 1em;\n  margin-top: 1em;\n  .search-control{\n    position: relative;\n    dnn-collapsible{\n      position: absolute;\n      left: 0;\n      top: calc(100% - 2px);\n      width: 100%;\n      box-shadow: 0px 4px 4px;\n      .dropdown{\n        background-color: white;\n        border: 1px solid lightgray;\n        display: flex;\n        flex-direction: column;\n        button{\n          background-color: transparent;\n          border: none;\n          border-bottom: 1px solid lightgray;\n          padding: 0.25em;\n          margin: 0;\n          text-align: left;\n        }\n      }\n    }\n  }\n}\ntable{\n  border: 1px solid lightgray;\n  border-collapse: collapse;\n  margin-top: 1em;\n  thead{\n    text-align: center;\n    tr{\n      border-bottom: 1px solid lightgray;\n    }\n    th{\n      background-color: lightgray;\n      padding: 0.25em 0.5em;\n      &:first-child{\n        border-right: 1px solid lightgray;\n      }\n    }\n  }\n  tbody{\n    tr{\n      border-bottom: 1px dotted lightgray;\n      th{\n        text-align: left;\n        border-right: 1px solid lightgray;\n        padding: 0 0.5em;\n      }\n      td{\n        text-align: center;\n        dnn-checkbox{\n          span{\n            display: none;\n          }\n        }\n        button{\n          background-color: transparent;\n          border: 0;\n          padding: 0;\n          margin: 0;\n          margin-right: 1em;\n        }\n      }\n    }\n  }\n}","import { Component, Host, h, Prop, State, Event, EventEmitter, Watch } from '@stencil/core';\nimport { ILocalization } from './localization-interface';\nimport { IPermissionDefinition, IPermissions, IRolePermission, IUserPermission } from './permissions-interface';\nimport { IRoleGroup } from './role-group-interface';\nimport { IRole } from './role-interface';\nimport { ISearchedUser } from './searched-user-interface';\n\n@Component({\n  tag: 'dnn-permissions-grid',\n  styleUrl: 'dnn-permissions-grid.scss',\n  shadow: true,\n})\nexport class DnnPermissionsGrid {\n\n  /** The list of permissions. */\n  @Prop({mutable: true}) permissions!: IPermissions;\n\n  /** The list of role groups. */\n  @Prop() roleGroups!: IRoleGroup[];\n\n  /** The list of possible roles. */\n  @Prop() roles!: IRole[];\n\n  /** Optionally allows localizing the component strings. */\n  @Prop() resx: ILocalization = {\n    Add: \"Add\",\n    AllRoles: \"All Roles\",\n    FilterByGroup: \"Filter By Group\",\n    GlobalRoles: \"Global Roles\",\n    Role: \"Role\",\n    RolePermissions: \"Role Permissions\",\n    SelectRole: \"Select Role\",\n    User: \"User\",\n    UserPermissions: \"User Permissions\",\n  }\n\n  /** The list of users to show under the search users field when a search is performed. */\n  @Prop() foundUsers: ISearchedUser[] = [];\n\n  /** Fires when searching for users to add to the permissions. Emits the search query. */\n  @Event() userSearchQueryChanged: EventEmitter<string>;\n  \n  /** Fires when any permissions have changed, can be used for instance to have linked permissions. */\n  @Event() permissionsChanged: EventEmitter<IPermissions>;\n\n  @State() selectedRoleGroupId = -1;\n  @State() userQuery: string;\n  @State() pickedUser: ISearchedUser;\n  \n  \n  @Watch(\"foundUsers\")\n  handleFoundUsersChanged(newValue: ISearchedUser[]){\n    if (newValue?.length > 0){\n      setTimeout(() => {\n        this.userCollapsible.expanded = true;\n      }, 100);\n    }\n  }\n  \n  componentWillLoad() {\n    document.addEventListener(\"click\", this.dismissUserResults.bind(this));\n  }\n  \n  disconnectedCallback() {\n    document.removeEventListener(\"click\", this.disconnectedCallback.bind(this));\n  }\n  \n  private roleDropDown: HTMLSelectElement;\n  private userCollapsible: HTMLDnnCollapsibleElement;\n\n  private dismissUserResults(e: MouseEvent){\n    const dropdownRect = this.roleDropDown.getBoundingClientRect();\n    if (\n      e.pageX > dropdownRect.right ||\n      e.pageX < dropdownRect.left ||\n      e.pageY > dropdownRect.bottom ||\n      e.pageY < dropdownRect.top){\n        this.userCollapsible.expanded = false;\n      }\n  } \n\n  private handleRoleGroupChanged(dropdown: HTMLSelectElement): void {\n    const index = dropdown.selectedIndex;\n    const value = Number.parseInt(dropdown.options[index].value);\n    this.selectedRoleGroupId = value;\n  }\n\n  private addRole(): void {\n    const roleId = Number.parseInt(this.roleDropDown.options[this.roleDropDown.selectedIndex].value);\n    const role = this.roles.filter(r => r.RoleId == roleId)[0];\n    this.permissions = {\n      ...this.permissions,\n      rolePermissions: [\n        ...this.permissions.rolePermissions,\n        {\n          default: false,\n          locked: false,\n          permissions: [],\n          roleId: role.RoleId,\n          roleName: role.RoleName,\n        }\n      ]\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private addUser(): void {\n    if (this.pickedUser != undefined){\n      this.permissions = {\n        ...this.permissions,\n        userPermissions: [\n          ...this.permissions.userPermissions,\n          {\n            displayName: this.pickedUser.displayName,\n            permissions: [],\n            userId: this.pickedUser.userId,\n          },\n        ],\n      };\n      this.pickedUser = undefined;\n      this.userQuery = \"\";\n      this.permissionsChanged.emit(this.permissions);\n    }\n  }\n\n  private getRoles(){\n    const filteredRoles = this.roles.filter(role => \n      !this.permissions.rolePermissions.some(rp => rp.roleId == role.RoleId))\n    if (this.selectedRoleGroupId == -2){\n      // All Roles\n      return filteredRoles;\n    }\n\n    if (this.selectedRoleGroupId == -1){\n      // Global Roles\n      return filteredRoles.filter(role => role.IsSystemRole);\n    }\n    \n    return filteredRoles.filter(role => role.RoleGroupId == this.selectedRoleGroupId);\n  }\n\n  private renderRoleCheckBox(rolePermission: IRolePermission, permissionDefinition: IPermissionDefinition) {\n    const item = rolePermission.permissions.filter(permission => permission.permissionId == permissionDefinition.permissionId)[0];\n    if (rolePermission.locked){\n      return(\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g fill=\"none\"><path d=\"M0 0h24v24H0V0z\"/><path d=\"M0 0h24v24H0V0z\" opacity=\".87\"/></g><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"/></svg>\n      )\n    }\n\n    const checked = item == undefined ? \"intermediate\" : item.allowAccess ? \"checked\" : \"unchecked\";\n    return(\n      <dnn-checkbox\n        use-intermediate\n        checked={checked}\n        onCheckedchange={e => this.handleRoleChanged(e.detail, rolePermission, permissionDefinition)}\n      >\n        <div slot=\"intermediateicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n        </div>\n        <div slot=\"uncheckedicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"/></svg>\n        </div>\n        <span>{permissionDefinition.permissionName}</span>\n      </dnn-checkbox>\n    )\n  }\n\n  private renderUserCheckBox(userPermission: IUserPermission, permissionDefinition: IPermissionDefinition) {\n    const item = userPermission.permissions.filter(permission => permission.permissionId == permissionDefinition.permissionId)[0];\n\n    const checked = item == undefined ? \"intermediate\" : item.allowAccess ? \"checked\" : \"unchecked\";\n    return(\n      <dnn-checkbox\n        use-intermediate\n        checked={checked}\n        onCheckedchange={e => this.handleUserChanged(e.detail, userPermission, permissionDefinition)}\n      >\n        <div slot=\"intermediateicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/></svg>\n        </div>\n        <div slot=\"uncheckedicon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"/></svg>\n        </div>\n        <span>{permissionDefinition.permissionName}</span>\n      </dnn-checkbox>\n    )\n  }\n  \n  private handleRoleChanged(\n    checked: \"checked\" | \"unchecked\" | \"intermediate\",\n    rolePermission: IRolePermission,\n    permissionDefinition: IPermissionDefinition\n  ): void {\n    switch (checked) {\n      case \"unchecked\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: false,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n      case \"checked\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: true,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n        case \"intermediate\":\n        this.permissions = {\n          ...this.permissions,\n          rolePermissions: [\n            ...this.permissions.rolePermissions.map(r => {\n              if (r.roleId != rolePermission.roleId){\n                return r;\n              }\n\n              const newRolePermission = Object.assign({}, r);\n              newRolePermission.permissions = [\n                ...newRolePermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n              ];\n              return newRolePermission;\n            }),\n          ],\n        };\n        break;\n      default:\n        break;\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private handleUserChanged(\n    checked: \"checked\" | \"unchecked\" | \"intermediate\",\n    userPermission: IUserPermission,\n    permissionDefinition: IPermissionDefinition\n  ): void {\n    switch (checked) {\n      case \"unchecked\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: false,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n      case \"checked\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n                {\n                  allowAccess: true,\n                  fullControl: false,\n                  permissionCode: permissionDefinition.permissionCode,\n                  permissionId: permissionDefinition.permissionId,\n                  permissionKey: permissionDefinition.permissionKey,\n                  permissionName: permissionDefinition.permissionName,\n                  view: false,\n                },\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n        case \"intermediate\":\n        this.permissions = {\n          ...this.permissions,\n          userPermissions: [\n            ...this.permissions.userPermissions.map(u => {\n              if (u.userId != userPermission.userId){\n                return u;\n              }\n\n              const newUserPermission = Object.assign({}, u);\n              newUserPermission.permissions = [\n                ...newUserPermission.permissions.filter(p => p.permissionId != permissionDefinition.permissionId),\n              ];\n              return newUserPermission;\n            }),\n          ],\n        };\n        break;\n      default:\n        break;\n    }\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private removeRole(rolePermission: IRolePermission): void {\n    this.permissions = {\n      ...this.permissions,\n      rolePermissions: [\n        ...this.permissions.rolePermissions.filter(rp => rp.roleId != rolePermission.roleId),\n      ],\n    };\n    this.permissionsChanged.emit();\n  }\n\n  private removeUser(userPermission: IUserPermission): void {\n    this.permissions = {\n      ...this.permissions,\n      userPermissions: [\n        ...this.permissions.userPermissions.filter(up => up.userId != userPermission.userId),\n      ]\n    };\n    this.permissionsChanged.emit(this.permissions);\n  }\n\n  private handleQueryChanged(query: string): void {\n    this.userQuery = query;\n    if (query == undefined || query.length == 0){\n      this.userCollapsible.expanded = false;\n      this.pickedUser = undefined;\n      this.foundUsers = [];\n      return;\n    }\n    this.userSearchQueryChanged.emit(query);\n  }\n\n  private handleSearchUserFieldKeyDown(e: KeyboardEvent): void {\n    if (e.key != \"ArrowDown\"){\n      return;\n    }\n\n    e.preventDefault();\n    const firstButton = this.userCollapsible.querySelector(\"button\");\n    if (firstButton != undefined){\n      firstButton.focus();\n    }\n  }\n\n  private handleSearchedUserKeyDown(e: KeyboardEvent): void {\n    const button = e.target as HTMLButtonElement;\n    \n    switch(e.key) {\n      case \"ArrowDown\":\n        e.preventDefault();\n        const nextButton = button.nextElementSibling as HTMLButtonElement;\n        nextButton?.focus();\n        break;\n      case \"ArrowUp\":\n        e.preventDefault();\n        const previousButton = button.previousElementSibling as HTMLButtonElement;\n        previousButton?.focus();\n      break;\n      default:\n        break;\n    }\n  }\n\n  private handleUserPicked(searchedUser: ISearchedUser): void {\n    this.userQuery = searchedUser.displayName;\n    this.pickedUser = searchedUser;\n  }\n\n  private getFilteredUsers() {\n    return this.foundUsers.filter(fu => !this.permissions.userPermissions.some(up => up.userId == fu.userId))\n  }\n  \n  render() {\n    const filteredRoles = this.getRoles();\n    return (\n      <Host>\n        <div class=\"add-role-row\">\n          <div class=\"dropdown\">\n            <label>{this.resx.FilterByGroup} :</label>\n            <select\n              onChange={e => this.handleRoleGroupChanged(e.target as HTMLSelectElement)}\n            >\n              <option\n                value={-2}\n                selected={this.selectedRoleGroupId == -2}\n              >\n                {this.resx.AllRoles}\n              </option>\n              <option\n                value={-1}\n                selected={this.selectedRoleGroupId == -1}\n              >\n                {this.resx.GlobalRoles}\n              </option>\n              {this.roleGroups.map(roleGroup =>\n                <option\n                  value={roleGroup.id}\n                  selected={this.selectedRoleGroupId == roleGroup.id}\n                >\n                  {roleGroup.name}\n                </option>\n              )}\n            </select>\n          </div>\n            {filteredRoles && filteredRoles.length > 0 && [\n              <div class=\"dropdown\">\n                <label>{this.resx.SelectRole} :</label>\n                <select ref={el => this.roleDropDown = el}>\n                  {this.getRoles().map(role =>\n                    <option value={role.RoleId}\n                    >\n                      {role.RoleName}\n                    </option>\n                  )}\n                </select>\n              </div>,\n              <dnn-button\n              type=\"primary\"\n              onClick={() => this.addRole()}\n              >\n                {this.resx.Add}\n              </dnn-button>\n            ]\n          }\n        </div>\n        <table class=\"roles-table\">\n          <caption>{this.resx.RolePermissions}</caption>\n          <thead>\n            <tr>\n              <th>{this.resx.Role}</th>\n              {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                <th>{permissionDefinition.permissionName}</th>\n              )}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.permissions.rolePermissions.map(rolePermission =>\n              <tr>\n                <th>{rolePermission.roleName}</th>\n                {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                  <td>\n                    {this.renderRoleCheckBox(rolePermission, permissionDefinition)}\n                  </td>\n                )}\n                <td>\n                  {!rolePermission.default &&\n                    <button\n                      onClick={() => this.removeRole(rolePermission)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/></svg>\n                    </button>\n                  }\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        <div class=\"search-user\">\n          <div class=\"search-control\">\n            <dnn-searchbox\n              placeholder={this.resx.User}\n              debounced\n              onQueryChanged={e => this.handleQueryChanged(e.detail)}\n              onKeyDown={e => this.handleSearchUserFieldKeyDown(e)}\n              query={this.userQuery}\n            />\n            <dnn-collapsible ref={el => this.userCollapsible = el}>\n              <div class=\"dropdown\">\n                {this.getFilteredUsers().map(searchedUser =>\n                  <button\n                    onKeyDown={e => this.handleSearchedUserKeyDown(e)}\n                    onClick={() => this.handleUserPicked(searchedUser)}\n                  >\n                    {searchedUser.displayName}\n                  </button>\n                )}\n              </div>\n            </dnn-collapsible>\n          </div>\n          {this.pickedUser &&\n            <dnn-button\n              onClick={() => this.addUser()}\n            >\n              {this.resx.Add}\n            </dnn-button>\n          }\n        </div>\n        {this.permissions.userPermissions && this.permissions.userPermissions.length > 0 &&\n          <table class=\"users-table\">\n            <caption>{this.resx.UserPermissions}</caption>\n            <thead>\n              <tr>\n                <th>{this.resx.User}</th>\n                {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                  <th>{permissionDefinition.permissionName}</th>\n                )}\n                <th>&nbsp;</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.permissions.userPermissions.map(userPermission =>\n                <tr>\n                  <th>{userPermission.displayName}</th>\n                  {this.permissions.permissionDefinitions.map(permissionDefinition =>\n                    <td>\n                      {this.renderUserCheckBox(userPermission, permissionDefinition)}\n                    </td>\n                  )}\n                  <td>\n                    <button\n                      onClick={() => this.removeUser(userPermission)}\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/></svg>\n                    </button>\n                </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        }\n      </Host>\n    );\n  }\n}",":host {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  --background-color: transparent;\n  --color: #333;\n  --border-size: 1px;\n  --border-color: grey;\n  --border-active-color: black;\n  --border-radius: var(--dnn-controls-radius, 5px);\n  --padding: var(--dnn-controls-padding, 5px);\n  --focus-color: var(--dnn-color-primary, blue);\n  input {\n    width:100%;\n    border: var(--border-size) solid var(--border-color);\n    outline: none;\n    border-radius: var(--border-radius);\n    padding: var(--padding);\n    padding-right: 32px;\n    transition: all 300ms ease-in-out;\n    &:focus, &:hover{\n      outline: none;\n      box-shadow: 0 0 2px 2px var(--focus-color);\n    }\n  }\n  svg{\n    position: absolute;\n    top:0;\n    right:0;\n    height: 100%;\n    transform: scale(0.7);\n    fill: var(--color);\n    outline: var(--color);\n    color: var(--color);\n    transition: all 300ms ease-in-out;\n  }\n  button{\n    background: transparent;\n    border: 0;\n    margin: 0;\n    padding: 0;\n    &:focus, &:hover{\n      svg{\n        fill: var(--focus-color);\n      outline: var(--focus-color);\n      color: var(--focus-color);\n      }\n    }\n  }\n}\n","import { Component, Host, h, Event, EventEmitter, Watch, Prop } from '@stencil/core';\nimport { Debounce } from '../../utilities/debounce';\n@Component({\n  tag: 'dnn-searchbox',\n  styleUrl: 'dnn-searchbox.scss',\n  shadow: true\n})\nexport class DnnSearchbox {\n\n  /**\n   * Sets the field placeholder text.\n   */\n  @Prop() placeholder?: string = \"\";\n\n  /**\n   * Debounces the queryChanged by 500ms.\n   */\n  @Prop() debounced: boolean = true;\n\n  /** Sets the query */\n  @Prop({mutable: true}) query: string = \"\";\n\n  /**\n   * Fires up each time the search query changes.\n   * The data passed is the new query.\n   */\n  @Event() queryChanged: EventEmitter<string>;\n\n  @Watch('query')\n  fireQueryChanged(){\n    if (this.debounced){\n      this.debouncedHandleQueryChanged();\n    }\n    else{\n      this.handleQueryChanged();\n    }\n  }\n  \n  private handleQueryChanged(){\n    this.queryChanged.emit(this.query);\n  }\n\n  @Debounce(500)\n  private debouncedHandleQueryChanged(){\n    this.handleQueryChanged();\n  }\n\n  render() {\n    return (\n      <Host>\n        <input type=\"text\" value={this.query}\n          placeholder={this.placeholder}\n          onInput={e => this.query = (e.target as HTMLInputElement).value}\n        />\n        {this.query !== \"\" ?\n          <button class=\"svg clear\"\n            onClick={() => this.query = \"\"}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"/></svg>\n          </button>\n        :\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>\n        }\n      </Host>\n    );\n  }\n\n}\n",":host {\n  /**\n  * @prop --color: Normal Color of the inactive sort icon.\n  * @prop --color-sorted: Color of the sorted sort icon.\n  * @prop --color-hover: Color of the icons when hovered.\n  */\n  --color: #888;\n  --color-sorted: var(--dnn-color-primary, rgb(2,139,255));\n  --color-hover: var(--dnn-color-primary-light, #36a1ff);\n  \n  display: inline-block;\n}\n\nbutton {\n  outline: none;\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: transparent;\n  outline: none;\n  display: inline-block;\n  line-height: 1em;\n  position: relative;\n  top: 0.25em;\n  svg{\n    height: 1.5em;\n    width: auto;\n    fill: var(--color);\n  }\n  &.active{\n    svg{\n      fill: var(--color-sorted);\n    }\n  }\n  &:hover, &:focus{\n    svg{\n      fill: var(--color-hover);\n    }\n  }\n}","import { Component, Host, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'dnn-sort-icon',\n  styleUrl: 'dnn-sort-icon.scss',\n  shadow: true\n})\nexport class DnnSortIcon {\n  /** Defines the current sort direction */\n  @Prop() sortDirection: \"asc\" | \"desc\" | \"none\" = \"none\";\n\n  /** Emitted when the sort is changed. */\n  @Event() sortChanged!: EventEmitter<\"asc\"|\"desc\"|\"none\">;\n  \n  private changeSort(): void {\n    switch (this.sortDirection) {\n      case \"asc\":\n        this.sortDirection = \"desc\";\n        break;\n      case \"desc\":\n        this.sortDirection = \"asc\";\n        break;\n      case \"none\":\n        this.sortDirection = \"asc\";\n        break;\n      default:\n        break;\n    }\n\n    this.sortChanged.emit(this.sortDirection);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          class={{\"active\": this.sortDirection != \"none\"}}\n          onClick={() => this.changeSort()}\n        >\n          {this.sortDirection == \"none\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z M 0 9 H 12 L 6 16 Z\"></path></svg>\n          }\n          {this.sortDirection == \"asc\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 7 H 12 L 6 0 Z\"></path></svg>\n          }\n          {this.sortDirection == \"desc\" &&\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 16\"><path d=\"M 0 9 H 12 L 6 16 Z\"></path></svg>\n          }\n        </button>\n      </Host>\n    );\n  }\n}\n",null,"import { Component, Host, h, Prop, State, Method } from \"@stencil/core\";\r\n\r\n/** Represents a single tab and must be used inside a dnn-tabs element. */\r\n@Component({\r\n    tag: 'dnn-tab',\r\n    styleUrl: 'dnn-tab.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTab {\r\n    /** Defines the tab title. */\r\n    @Prop() tabTitle!: string;\r\n\r\n    @State() visible: boolean = false;\r\n\r\n    /** Shows the tab. */\r\n    @Method()\r\n    async show(){\r\n        this.visible = true;\r\n    }\r\n\r\n    /** Hides the modal */\r\n    @Method()\r\n    async hide(){\r\n        this.visible = false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host>\r\n                {this.visible &&\r\n                    <slot></slot>\r\n                }\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\r\n    /**\r\n    * @prop --color-background: The color of the inactive tabs.\r\n    * @prop --color-text: The color of the text for inactive tabs.\r\n    * @prop --color-visible: The color of the active tab.\r\n    * @prop --color-visible-text: The color of the text for the active tab.\r\n    * @prop --color-focus: outline color when hovering or pre-selecting a tab.\r\n    */\r\n    display: block;\r\n    --color-background: var(--dnn-color-secondary-dark, lightgray);\r\n    --color-text: var(--dnn-color-secondary-contrast, #333);\r\n    --color-visible: var(--dnn-color-primary, #3792ED);\r\n    --color-visible-text: var(--dnn-color-primary-contrast, #FFF);\r\n    --color-focus: var(--dnn-color-primary, #3792ed);\r\n  }\r\n\r\n  .tabTitles{\r\n      display: flex;\r\n      background-color: var(--color-background);\r\n      color: var(--color-text);\r\n      button{\r\n          padding: 0.5rem 1rem;\r\n          border: 0;\r\n          margin: 0;\r\n          background-color: transparent;\r\n          &.visible{\r\n              background-color: var(--color-visible);\r\n              color: var(--color-bisible-text);\r\n          }\r\n          &:focus, &:hover{\r\n            outline: none;\r\n            box-shadow: 0 0 2px 2px var(--color-focus);\r\n          }\r\n      }\r\n  }\r\n\r\n  .currentTab{\r\n      border: 1px solid var(--color-background);\r\n  }","import { Component, Host, h, State } from \"@stencil/core\";\r\n\r\n@Component({\r\n    tag: 'dnn-tabs',\r\n    styleUrl: 'dnn-tabs.scss',\r\n    shadow: true,\r\n})\r\nexport class DnnTabs {\r\n    private component: HTMLElement;\r\n\r\n    @State() tabTitles: string[] = [];\r\n    @State() selectedTabTitle: string = \"\";\r\n\r\n    componentDidLoad(){\r\n        requestAnimationFrame(() => {\r\n            this.updateTitles();\r\n            this.showFirstTab();\r\n        });\r\n    }\r\n\r\n    private getTabs() {\r\n        return this.component.shadowRoot.querySelector(\"slot\").assignedElements() as HTMLDnnTabElement[];\r\n    }\r\n\r\n    private updateTitles(){\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => this.tabTitles = [...this.tabTitles, tab.tabTitle]);\r\n    }\r\n\r\n    private showFirstTab(){\r\n        const tab = this.getTabs()[0];\r\n        tab.show();\r\n        this.selectedTabTitle = tab.tabTitle;\r\n    }\r\n\r\n    private showTab(tabTitle: string) {\r\n        const tabs = this.getTabs();\r\n        tabs.forEach(tab => {\r\n            if (tab.tabTitle == tabTitle){\r\n                tab.show();\r\n                return;\r\n            }\r\n\r\n            tab.hide();\r\n        });\r\n        this.selectedTabTitle = tabTitle;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Host ref={el => this.component = el}>\r\n                <div class=\"tabTitles\">\r\n                    {this.tabTitles.map(tabTitle =>\r\n                        <button\r\n                            class={this.selectedTabTitle == tabTitle ? \"visible\": \"\"}\r\n                            onClick={() => this.showTab(tabTitle)}\r\n                        >\r\n                            {tabTitle}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div class=\"currentTab\">\r\n                    <slot></slot>\r\n                </div>\r\n            </Host>\r\n        );\r\n    }\r\n}",":host {\n    /**\n     * @prop --background: Background of the toggle.\n     * @prop --background-checked: Background of the toggle when checked.\n     * @prop --handle-background:  Background of the handle.\n     * @prop --handle-background-checked:  Background of the handle when checked.\n     * @prop --border-radius: The radius of the background borders.\n     * @prop --handle-border-radius: The radius of the handle.\n    */\n\n    display: inline-block;\n    outline: none;\n    cursor: pointer;\n}\n\nbutton {\n    height: 1.5em;\n    width: 2.5em;\n    outline: none;\n    background-color: var(--background, #888);\n    border: 0;\n    border-radius: var(--border-radius, var(--dnn-controls-radius, 0.75em));\n    padding: 0.1em;\n    position: relative;\n    margin: 0;\n    transition: background-color 300ms ease-in-out;\n    position: relative;\n    cursor: pointer;\n    &:hover, &:focus{\n        box-shadow: 0 0 2px 2px var(--dnn-color-primary);\n    }\n    &.checked{\n        background-color: var(--background-checked, var(--dnn-color-primary, blue));\n        .handle{\n            left: calc(1em + 4px);\n        }\n    }\n    &:disabled{\n        opacity: 0.5;\n        cursor: not-allowed;\n        box-shadow: none;\n    }\n    .handle{\n        transition: all 300ms ease-in-out;\n        background-color:white;\n        width: 1em;\n        height: 1em;\n        border-radius: var(--handle-border-radius, var(--dnn-controls-radius, 50%));\n        position: absolute;\n        top: calc(50% - 0.5em);\n        left: 2px;\n    }\n}","import { Component, h, Element, Prop, Event, EventEmitter, Watch, Host } from \"@stencil/core\";\nimport { DnnToggleChangeEventDetail } from \"./toggle-interface\";\n\n\n@Component({\n    tag: \"dnn-toggle\",\n    styleUrl: \"dnn-toggle.scss\",\n    shadow: true\n})\nexport class DnnToggle {\n\n    @Element() element: HTMLDnnToggleElement;\n\n    /** If 'true' the toggle is checked (on). */\n    @Prop({mutable: true}) checked = false;\n\n    /** If 'true' the toggle is not be interacted with. */\n    @Prop() disabled = false;\n\n    /** Fires when the toggle changed */\n    @Event() checkChanged!: EventEmitter<DnnToggleChangeEventDetail>;\n\n    @Watch(\"checked\")\n    checkedChanged(isChecked: boolean){\n        this.checkChanged.emit({checked: isChecked});\n    }\n\n    render() {\n        return (\n            <Host>\n                <button disabled={this.disabled} class={{'checked': this.checked}}\n                    onClick={() => {\n                        if (!this.disabled) {\n                            this.checked = !this.checked;\n                        }\n                    }}\n                >\n                    <div class=\"handle\"></div>\n                </button>\n            </Host>\n        );\n    }\n}\n",":host {\n  display: flex;\n  overflow: visible;\n}\n.expander{\n  width: 24px;\n  height: 24px;\n  button{\n    transition: all 150ms ease-in-out;\n    background-color:transparent;\n    border: none;\n    padding: 0;\n    margin: 0;\n    height: 1em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    position: relative;\n    top: 2px;\n    svg{\n      :first-child{\n        transition: all 150ms ease-in-out;\n        fill: white;\n        stroke: black\n      }\n    }\n  }\n  &.expanded{\n    button{\n      transform: rotate(45deg);\n      svg{\n        :first-child{\n          fill: black;\n          stroke: black;\n        }\n      }\n    }\n  }\n}\ndiv.item{\n  .item-slot{\n    display: flex;\n    align-items: center;\n    gap: 0.25em;\n    min-height: 24px;\n  }\n  div.children{\n    overflow: hidden;\n    height:0;\n    transition: all 150ms ease-in-out;\n  }\n}","import { Component, Host, h, Prop, State, Element, Event, EventEmitter, Watch } from '@stencil/core';\n\n/** \n * @slot - The content of this node.\n * @slot children - The content nested under this node.\n*/\n@Component({\n  tag: 'dnn-treeview-item',\n  styleUrl: 'dnn-treeview-item.scss',\n  shadow: true,\n})\nexport class DnnTreeviewItem {\n  \n  private expander!: HTMLDivElement;\n\n  @Element() el!: HTMLDnnTreeviewItemElement;\n  \n  /** Defines if the current node is expanded.  */\n  @Prop({mutable: true, reflect: true}) expanded: boolean = false;\n\n  /** Fires when the user expands a node. */\n  @Event({bubbles: false}) userExpanded: EventEmitter<void>;\n\n  /** Fires when the user collapses a node. */\n  @Event({bubbles: false}) userCollapsed: EventEmitter<void>;\n\n  /** Manages state for whether or not item has children. */\n  @State() hasChildren: boolean = false;\n\n  /** Watch expanded Prop */\n  @Watch('expanded')\n  watchExpanded(expanded: boolean) {\n    if (expanded) {\n      this.expander.classList.add(\"expanded\");\n      this.collapsible.expanded = true;\n      return;\n    }\n    \n    this.expander.classList.remove(\"expanded\");\n    this.collapsible.expanded = false;\n  }\n      \n  \n  private childElement!: HTMLDivElement;\n  private collapsible!: HTMLDnnCollapsibleElement;\n\n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      const child = this.childElement.children[0] as HTMLSlotElement;\n      const count = child.assignedElements().length\n      if (count > 0){\n        this.hasChildren = true;\n      }\n      if (this.expanded){\n        this.expander.classList.add(\"expanded\");\n        this.collapsible.expanded = false;\n        setTimeout(() => {\n          this.collapsible.expanded = true;\n        }, 300);\n      }\n    });\n  }\n\n  private toggleCollapse(): void {\n    this.expanded = !this.expanded;\n    if (this.expanded){\n      this.expander.classList.add(\"expanded\");\n      this.userExpanded.emit();\n      return;\n    }\n\n    this.expander.classList.remove(\"expanded\");\n    this.userCollapsed.emit();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"expander\" ref={el => this.expander = el}>\n          {this.hasChildren &&\n            <button\n              onClick={() => this.toggleCollapse()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M10 17l5-5-5-5v10z\"/><path d=\"M0 24V0h24v24H0z\" fill=\"none\"/></svg>\n            </button>\n          }\n        </div>\n        <div class=\"item\">\n          <div class=\"item-slot\">\n            <slot></slot>\n          </div>\n          <dnn-collapsible ref={el => this.collapsible = el} expanded={this.expanded}>\n            <div ref={el => this.childElement = el}>\n              <slot name=\"children\"></slot>\n            </div>\n          </dnn-collapsible>\n          </div>\n      </Host>\n    );\n  }\n}\n\nexport interface ExpandedToggledEvent{\n  state: \"expanded\" | \"collapsed\";\n  height: number;\n}",":host {\n  /**\n    * @prop --background-color:  Defines the menu background color.\n    * @prop --foreground-color: A color that contrasts with the background color.\n  */\n  --background-color: var(--dnn-color-primary-contrast, white);\n  --foreground-color: var(--dnn-color-primary, #3792ED);\n\n  display: block;\n}\n\n.menu-container{\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: var(--background-color);\n  .menu{\n    margin: 0.5em;\n    display: flex;\n    gap: 1em;\n    justify-content: flex-start;\n    align-items: center;\n    white-space: nowrap;\n    width: 100%;\n  }\n  .overflow {\n    margin-left: auto;\n    position: relative;\n    button{\n      cursor: pointer;\n      svg{\n        fill: var(--foreground-color);\n      }\n      padding: 0;\n      margin: 0;\n      background-color: transparent;\n      border: none;\n    }\n    .dropdown{\n      position:absolute;\n      display: flex;\n      flex-direction: column;\n      white-space: nowrap;\n      right: 0;\n      transition: 100ms ease-in-out;\n      height: 0;\n      overflow: hidden;\n      &.visible{\n        padding: 1em;\n        gap: 0.5em;\n        background-color: var(--background-color);\n        box-shadow: 2px 2px 4px rgba(0,0,0,0.7);\n      }\n    }\n  }\n}\n","import { Component, Element, Host, h, State } from '@stencil/core';\n\n/**\n * A component that shows a vertical list of items as they fit. When they don't all fit, it puts the ones that don't fit into a dropdown menu.\n * @slot() - The items to show in the menu. \n */\n@Component({\n  tag: 'dnn-vertical-overflow-menu',\n  styleUrl: 'dnn-vertical-overflow-menu.scss',\n  shadow: true,\n})\nexport class DnnVerticalOverflowMenu {\n\n  @Element() element!: HTMLDnnVerticalOverflowMenuElement;\n  \n  @State() showDropdownButton = false;\n  @State() showDropdownMenu = false;\n\n  private menu!: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n  private button!: HTMLButtonElement;\n  private previousMenuWidth = 0;\n\n  componentDidRender() {\n    requestAnimationFrame(() => {\n      this.moveItemsToDropDownIfNecessery();\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (let entry of entries){\n          if (entry.contentRect.width < this.previousMenuWidth){\n            this.moveItemsToDropDownIfNecessery()\n          }\n          if (this.previousMenuWidth > 0 && entry.contentRect.width > this.previousMenuWidth){\n            this.moveItemsToMenuIfPossible();\n          }\n          this.previousMenuWidth = entry.contentRect.width;\n        }\n      });\n      this.resizeObserver.observe(this.element);\n    });\n  }\n\n  private moveItemsToDropDownIfNecessery(){\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    if (neededWidth > availableWidth){\n      this.showDropdownButton = true;\n      var lastItem = menuItems[menuItems.length -1];\n      if (this.dropdown == undefined){\n        return;\n      }\n      lastItem.slot = \"dropdown\";\n      this.moveItemsToDropDownIfNecessery();\n    }\n  }\n  \n  private moveItemsToMenuIfPossible(){\n    if (this.dropdown == undefined || !this.dropdown.hasChildNodes()){\n      return;\n    }\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    const firstItem = this.dropdown.querySelector(\"slot\").assignedElements()[0];\n    if (firstItem != undefined){\n      neededWidth += this.getFullWidth(firstItem);\n    }\n\n    if (neededWidth < availableWidth){\n      if (firstItem != undefined){\n        firstItem.slot = \"\";\n      }\n      if(firstItem == undefined){\n        this.dropdown.classList.remove(\"visible\");\n        this.showDropdownMenu = false;\n        this.showDropdownButton = false;\n      }\n    }    \n  }\n\n  private getFullWidth(item: Element) {\n    var width = item.getBoundingClientRect().width;\n    var styles = getComputedStyle(item);\n    width += parseFloat(styles.marginLeft);\n    width += parseFloat(styles.marginRight);\n    width += parseFloat(styles.paddingLeft);\n    width += parseFloat(styles.paddingRight);\n    return width;\n  }\n\n  private toggleOverflowMenu(): void {\n    this.showDropdownMenu = !this.showDropdownMenu;\n    if (this.showDropdownMenu){\n      this.dropdown.classList.add(\"visible\");\n      let contentHeight = 0;\n      const items = Array.from(this.dropdown.querySelector(\"slot\").assignedElements());\n      items.forEach(item => contentHeight += item.getBoundingClientRect().height);\n      const emHeight = parseFloat(getComputedStyle(this.dropdown).fontSize);\n      const gapsHeight = emHeight * (this.dropdown.children.length - 1) / 2;\n      contentHeight += gapsHeight;\n      const marginHeight = emHeight * 2;\n      contentHeight += marginHeight;\n      this.dropdown.style.height = `${contentHeight}px`;\n      const dismissMenu = (e: MouseEvent) => {\n        const buttonRect = this.button.getBoundingClientRect();\n        if (\n          e.clientX < buttonRect.left ||\n          e.clientX > buttonRect.right ||\n          e.clientY < buttonRect.top ||\n          e.clientY > buttonRect.bottom){\n            this.toggleOverflowMenu();\n          }\n          document.removeEventListener(\"click\", dismissMenu);\n      };\n      setTimeout(() => {\n        document.addEventListener(\"click\", dismissMenu, false);\n      }, 100);\n    }\n    else{\n      this.dropdown.classList.remove(\"visible\");\n      this.dropdown.style.height = \"0px\";\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"menu-container\">\n          <div class=\"menu\" ref={el => this.menu = el}>\n            <slot></slot>\n          </div>\n            {this.showDropdownButton &&\n              <div class=\"overflow\">\n                <button\n                  ref={el => this.button = el}\n                  class=\"icon\"\n                  onClick={() => this.toggleOverflowMenu()}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n                <div class=\"dropdown\" ref={el => this.dropdown = el}>\n                  <slot name=\"dropdown\"></slot>\n                </div>\n              </div>\n            }\n          </div>\n      </Host>\n    );\n  }\n}\n",":host {\n    /**\n      * @prop --left-pane-background-color:  Allows customizing the left pane background-color\n      * @prop --right-pane-background-color: Allows customizing the right pane background-color\n    */\n\n    display: flex;\n    align-items: stretch;\n    margin: 0 auto;\n    position: relative;\n\n    --left-pane-background-color: transparent;\n    --right-pane-background-color: transparent;\n}\n\nbutton{\n  border: none;\n  margin:0;\n  padding:0;\n  cursor: ew-resize;\n  position: absolute;\n  height: 100%;\n  background-color: transparent;\n  &.transition{\n    transition: all 300ms ease-in-out;\n  }\n}\n\n\n.pane{\n  overflow-y: auto;\n  &.transition{\n    transition: all 300ms ease-in-out;\n  }\n  &.left{\n    background-color: var(--left-pane-background-color);\n  }\n  &.right{\n    background-color: var(--right-pane-background-color);\n    flex-grow: 1;\n  }\n}","import { Component, Host, h, Prop, Element, State, Method, Event, EventEmitter } from '@stencil/core';\nimport { getMovementFromEvent } from \"../../utilities/mouseUtilities\";\n\n/**\n * @slot default - The split divider control you want to use.\n * @slot left - The content of the left pane.\n * @slot right - The content of the right pane.\n */\n@Component({\n  tag: 'dnn-vertical-splitview',\n  styleUrl: 'dnn-vertical-splitview.scss',\n  shadow: true,\n})\nexport class DnnVerticalSplitview {\n\n  /** The width of the splitter area. */\n  @Prop() splitterWidth = 16;\n\n  /** The percentage position of the splitter in the container. */\n  @Prop({mutable: true}) splitWidthPercentage = 30;\n  \n  private splitter!: HTMLButtonElement;\n\n  private resizeObserver: ResizeObserver;\n\n  /** Sets the width percentage of the divider */\n  @Method()\n  async setSplitWidthPercentage(newWidth: number) {\n    const panes = this.element.shadowRoot.querySelectorAll(\".pane\");\n    requestAnimationFrame(() => {\n      panes.forEach(pane => pane.classList.add(\"transition\"));\n      this.splitter.classList.add(\"transition\");\n      requestAnimationFrame(() => {\n        const fullWidth = this.element.getBoundingClientRect().width;\n        let newLeft = fullWidth * newWidth / 100;\n        if (newLeft < 0){\n          newLeft = 0;\n        }\n        if (newLeft > fullWidth){\n          newLeft = fullWidth;\n        }\n        this.leftWidth = newLeft;\n        this.rightWidth = fullWidth - newLeft;\n        setTimeout(() => {\n          panes.forEach(pane => pane.classList.remove(\"transition\"));\n          this.splitter.classList.remove(\"transition\");\n        }, 300);\n      });\n    });\n  }\n\n  /** Gets the current divider position percentage. */\n  @Method()\n  async getSplitWidthPercentage(){\n    const fullWidth = this.element.getBoundingClientRect().width;\n    return this.leftWidth / fullWidth;\n  }\n\n  /** Fires when the width of the divider changes. */\n  @Event() widthChanged: EventEmitter<number>;\n\n  @State() leftWidth = 0;\n  @State() rightWidth = 0;\n\n  @Element() element : HTMLDnnVerticalSplitviewElement;\n  \n  componentDidLoad() {\n    requestAnimationFrame(() => {\n      this.resizeObserver = new ResizeObserver(() => {\n        const fullWidth = this.element.getBoundingClientRect().width;\n        this.leftWidth = fullWidth * this.splitWidthPercentage / 100;\n        this.rightWidth = fullWidth - this.leftWidth;\n        this.widthChanged.emit(this.splitWidthPercentage);\n      });\n      this.resizeObserver.observe(this.element);\n    });\n  }\n  \n  private previousTouch: Touch;\n\n  private handleMouseDown(event: MouseEvent | TouchEvent) {\n    event.preventDefault();\n    const handleDrag = (ev: MouseEvent | TouchEvent) => {\n      requestAnimationFrame(() => {\n        let fullWidth = this.element.getBoundingClientRect().width;\n        let {movementX} = getMovementFromEvent(ev, this.previousTouch);\n        let newLeft = this.leftWidth + movementX;\n        if (newLeft < 0){\n          newLeft = 0;\n        }\n        if (newLeft > fullWidth){\n          newLeft = fullWidth;\n        }\n        this.leftWidth = newLeft;\n        this.rightWidth = fullWidth - newLeft;\n        this.splitWidthPercentage = this.leftWidth / fullWidth * 100;\n      });\n    }\n    const handleDragFinished = () => {\n      document.removeEventListener(\"mousemove\", handleDrag);\n      document.removeEventListener(\"touchmove\", handleDrag);\n      const fullWidth = this.element.getBoundingClientRect().width;\n      const newPercentage = this.leftWidth / fullWidth * 100;\n      this.widthChanged.emit(newPercentage);\n    };\n    document.addEventListener(\"mouseup\", handleDragFinished);\n    document.addEventListener(\"touchend\", handleDragFinished);\n    document.addEventListener(\"mousemove\", handleDrag);\n    document.addEventListener(\"touchmove\", handleDrag);\n  }\n\n  private handleKeyDown(e: KeyboardEvent): void {\n    let movementX = 0;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        movementX = -10;\n        break;\n      case \"ArrowRight\":\n        movementX = 10;\n        break;\n      default:\n        return;\n    }\n    if (e.shiftKey){\n      movementX = movementX * 10;\n    }\n    const fullWidth = this.element.getBoundingClientRect().width;\n    let newLeft = this.leftWidth + movementX;\n    if (newLeft < 0){\n      newLeft = 0;\n    }\n    if (newLeft > fullWidth){\n      newLeft = fullWidth;\n    }\n    this.leftWidth = newLeft;\n    this.rightWidth = fullWidth - this.leftWidth;\n  }\n\n  render() {\n    return (\n      <Host>\n          <div class=\"left pane\" style={{\n              width: `${this.leftWidth}px`,\n            }}>\n            <slot name=\"left\"></slot>\n          </div>\n          <button\n            onMouseDown={e => this.handleMouseDown(e)}\n            onTouchStart={e => this.handleMouseDown(e)}\n            onKeyDown={e => this.handleKeyDown(e)}\n            ref={el => this.splitter = el}\n            style={{\n              minWidth: `${this.splitterWidth.toString()}px`,\n              left: `${this.leftWidth - 2}px`,\n            }}\n          >\n            <slot></slot>\n          </button>\n          <div\n            class=\"right pane\"\n            style={{\n              width: `${this.rightWidth}px`,\n            }}>\n            <slot name=\"right\"></slot>\n          </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}