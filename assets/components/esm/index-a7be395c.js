/*! For license information please see index-a7be395c.js.LICENSE.txt */
const NAMESPACE="dnn";let scopeId,hostTagName,isSvgMode=!1,queuePending=!1;const createTime=(fnName,tagName="")=>()=>{},uniqueTime=(key,measureText)=>()=>{},HYDRATED_CSS="{visibility:hidden}.hydrated{visibility:inherit}",EMPTY_OBJ={},SVG_NS="http://www.w3.org/2000/svg",HTML_NS="http://www.w3.org/1999/xhtml",isDef=v=>null!=v,isComplexType=o=>"object"===(o=typeof o)||"function"===o;function queryNonceMetaTagContent(doc){var _a,_b,_c;return null!==(_c=null===(_b=null===(_a=doc.head)||void 0===_a?void 0:_a.querySelector('meta[name="csp-nonce"]'))||void 0===_b?void 0:_b.getAttribute("content"))&&void 0!==_c?_c:void 0}const h=(nodeName,vnodeData,...children)=>{let child=null,simple=!1,lastSimple=!1;const vNodeChildren=[],walk=c=>{for(let i=0;i<c.length;i++)child=c[i],Array.isArray(child)?walk(child):null!=child&&"boolean"!=typeof child&&((simple="function"!=typeof nodeName&&!isComplexType(child))&&(child=String(child)),simple&&lastSimple?vNodeChildren[vNodeChildren.length-1].$text$+=child:vNodeChildren.push(simple?newVNode(null,child):child),lastSimple=simple)};if(walk(children),vnodeData){const classData=vnodeData.className||vnodeData.class;classData&&(vnodeData.class="object"!=typeof classData?classData:Object.keys(classData).filter((k=>classData[k])).join(" "))}const vnode=newVNode(nodeName,null);return vnode.$attrs$=vnodeData,vNodeChildren.length>0&&(vnode.$children$=vNodeChildren),vnode},newVNode=(tag,text)=>{const vnode={$flags$:0,$tag$:tag,$text$:text,$elm$:null,$children$:null,$attrs$:null};return vnode},Host={},isHost=node=>node&&node.$tag$===Host,parsePropertyValue=(propValue,propType)=>null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue,getElement=ref=>getHostRef(ref).$hostElement$,createEvent=(ref,name,flags)=>{const elm=getElement(ref);return{emit:detail=>emitEvent(elm,name,{bubbles:!!(4&flags),composed:!!(2&flags),cancelable:!!(1&flags),detail})}},emitEvent=(elm,name,opts)=>{const ev=plt.ce(name,opts);return elm.dispatchEvent(ev),ev},rootAppliedStyles=new WeakMap,registerStyle=(scopeId,cssText,allowCS)=>{let style=styles.get(scopeId);supportsConstructableStylesheets&&allowCS?(style=style||new CSSStyleSheet,"string"==typeof style?style=cssText:style.replaceSync(cssText)):style=cssText,styles.set(scopeId,style)},addStyle=(styleContainerNode,cmpMeta,mode,hostElm)=>{var _a;let scopeId=getScopeId(cmpMeta);const style=styles.get(scopeId);if(styleContainerNode=11===styleContainerNode.nodeType?styleContainerNode:doc,style)if("string"==typeof style){styleContainerNode=styleContainerNode.head||styleContainerNode;let styleElm,appliedStyles=rootAppliedStyles.get(styleContainerNode);if(appliedStyles||rootAppliedStyles.set(styleContainerNode,appliedStyles=new Set),!appliedStyles.has(scopeId)){{styleElm=doc.createElement("style"),styleElm.innerHTML=style;const nonce=null!==(_a=plt.$nonce$)&&void 0!==_a?_a:queryNonceMetaTagContent(doc);null!=nonce&&styleElm.setAttribute("nonce",nonce),styleContainerNode.insertBefore(styleElm,styleContainerNode.querySelector("link"))}appliedStyles&&appliedStyles.add(scopeId)}}else styleContainerNode.adoptedStyleSheets.includes(style)||(styleContainerNode.adoptedStyleSheets=[...styleContainerNode.adoptedStyleSheets,style]);return scopeId},attachStyles=hostRef=>{const cmpMeta=hostRef.$cmpMeta$,elm=hostRef.$hostElement$,flags=cmpMeta.$flags$,endAttachStyles=(cmpMeta.$tagName$,()=>{}),scopeId=addStyle(elm.shadowRoot?elm.shadowRoot:elm.getRootNode(),cmpMeta);10&flags&&(elm["s-sc"]=scopeId,elm.classList.add(scopeId+"-h")),endAttachStyles()},getScopeId=(cmp,mode)=>"sc-"+cmp.$tagName$,setAccessor=(elm,memberName,oldValue,newValue,isSvg,flags)=>{if(oldValue!==newValue){let isProp=isMemberInElement(elm,memberName),ln=memberName.toLowerCase();if("class"===memberName){const classList=elm.classList,oldClasses=parseClassList(oldValue),newClasses=parseClassList(newValue);classList.remove(...oldClasses.filter((c=>c&&!newClasses.includes(c)))),classList.add(...newClasses.filter((c=>c&&!oldClasses.includes(c))))}else if("style"===memberName){for(const prop in oldValue)newValue&&null!=newValue[prop]||(prop.includes("-")?elm.style.removeProperty(prop):elm.style[prop]="");for(const prop in newValue)oldValue&&newValue[prop]===oldValue[prop]||(prop.includes("-")?elm.style.setProperty(prop,newValue[prop]):elm.style[prop]=newValue[prop])}else if("ref"===memberName)newValue&&newValue(elm);else if(isProp||"o"!==memberName[0]||"n"!==memberName[1]){const isComplex=isComplexType(newValue);if((isProp||isComplex&&null!==newValue)&&!isSvg)try{if(elm.tagName.includes("-"))elm[memberName]=newValue;else{const n=null==newValue?"":newValue;"list"===memberName?isProp=!1:null!=oldValue&&elm[memberName]==n||(elm[memberName]=n)}}catch(e){}null==newValue||!1===newValue?!1===newValue&&""!==elm.getAttribute(memberName)||elm.removeAttribute(memberName):(!isProp||4&flags||isSvg)&&!isComplex&&(newValue=!0===newValue?"":newValue,elm.setAttribute(memberName,newValue))}else memberName="-"===memberName[2]?memberName.slice(3):isMemberInElement(win,ln)?ln.slice(2):ln[2]+memberName.slice(3),oldValue&&plt.rel(elm,memberName,oldValue,!1),newValue&&plt.ael(elm,memberName,newValue,!1)}},parseClassListRegex=/\s/,parseClassList=value=>value?value.split(parseClassListRegex):[],updateElement=(oldVnode,newVnode,isSvgMode,memberName)=>{const elm=11===newVnode.$elm$.nodeType&&newVnode.$elm$.host?newVnode.$elm$.host:newVnode.$elm$,oldVnodeAttrs=oldVnode&&oldVnode.$attrs$||EMPTY_OBJ,newVnodeAttrs=newVnode.$attrs$||EMPTY_OBJ;for(memberName in oldVnodeAttrs)memberName in newVnodeAttrs||setAccessor(elm,memberName,oldVnodeAttrs[memberName],void 0,isSvgMode,newVnode.$flags$);for(memberName in newVnodeAttrs)setAccessor(elm,memberName,oldVnodeAttrs[memberName],newVnodeAttrs[memberName],isSvgMode,newVnode.$flags$)},createElm=(oldParentVNode,newParentVNode,childIndex,parentElm)=>{const newVNode=newParentVNode.$children$[childIndex];let elm,childNode,i=0;if(null!==newVNode.$text$)elm=newVNode.$elm$=doc.createTextNode(newVNode.$text$);else{if(isSvgMode||(isSvgMode="svg"===newVNode.$tag$),elm=newVNode.$elm$=doc.createElementNS(isSvgMode?SVG_NS:HTML_NS,newVNode.$tag$),isSvgMode&&"foreignObject"===newVNode.$tag$&&(isSvgMode=!1),updateElement(null,newVNode,isSvgMode),null!=scopeId&&elm["s-si"]!==scopeId&&elm.classList.add(elm["s-si"]=scopeId),newVNode.$children$)for(i=0;i<newVNode.$children$.length;++i)childNode=createElm(oldParentVNode,newVNode,i),childNode&&elm.appendChild(childNode);"svg"===newVNode.$tag$?isSvgMode=!1:"foreignObject"===elm.tagName&&(isSvgMode=!0)}return elm},addVnodes=(parentElm,before,parentVNode,vnodes,startIdx,endIdx)=>{let childNode,containerElm=parentElm;for(containerElm.shadowRoot&&containerElm.tagName===hostTagName&&(containerElm=containerElm.shadowRoot);startIdx<=endIdx;++startIdx)vnodes[startIdx]&&(childNode=createElm(null,parentVNode,startIdx),childNode&&(vnodes[startIdx].$elm$=childNode,containerElm.insertBefore(childNode,before)))},removeVnodes=(vnodes,startIdx,endIdx)=>{for(let index=startIdx;index<=endIdx;++index){const vnode=vnodes[index];if(vnode){const elm=vnode.$elm$;nullifyVNodeRefs(vnode),elm&&elm.remove()}}},updateChildren=(parentElm,oldCh,newVNode,newCh)=>{let node,oldStartIdx=0,newStartIdx=0,oldEndIdx=oldCh.length-1,oldStartVnode=oldCh[0],oldEndVnode=oldCh[oldEndIdx],newEndIdx=newCh.length-1,newStartVnode=newCh[0],newEndVnode=newCh[newEndIdx];for(;oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx;)null==oldStartVnode?oldStartVnode=oldCh[++oldStartIdx]:null==oldEndVnode?oldEndVnode=oldCh[--oldEndIdx]:null==newStartVnode?newStartVnode=newCh[++newStartIdx]:null==newEndVnode?newEndVnode=newCh[--newEndIdx]:isSameVnode(oldStartVnode,newStartVnode)?(patch(oldStartVnode,newStartVnode),oldStartVnode=oldCh[++oldStartIdx],newStartVnode=newCh[++newStartIdx]):isSameVnode(oldEndVnode,newEndVnode)?(patch(oldEndVnode,newEndVnode),oldEndVnode=oldCh[--oldEndIdx],newEndVnode=newCh[--newEndIdx]):isSameVnode(oldStartVnode,newEndVnode)?(patch(oldStartVnode,newEndVnode),parentElm.insertBefore(oldStartVnode.$elm$,oldEndVnode.$elm$.nextSibling),oldStartVnode=oldCh[++oldStartIdx],newEndVnode=newCh[--newEndIdx]):isSameVnode(oldEndVnode,newStartVnode)?(patch(oldEndVnode,newStartVnode),parentElm.insertBefore(oldEndVnode.$elm$,oldStartVnode.$elm$),oldEndVnode=oldCh[--oldEndIdx],newStartVnode=newCh[++newStartIdx]):(node=createElm(oldCh&&oldCh[newStartIdx],newVNode,newStartIdx),newStartVnode=newCh[++newStartIdx],node&&oldStartVnode.$elm$.parentNode.insertBefore(node,oldStartVnode.$elm$));oldStartIdx>oldEndIdx?addVnodes(parentElm,null==newCh[newEndIdx+1]?null:newCh[newEndIdx+1].$elm$,newVNode,newCh,newStartIdx,newEndIdx):newStartIdx>newEndIdx&&removeVnodes(oldCh,oldStartIdx,oldEndIdx)},isSameVnode=(leftVNode,rightVNode)=>leftVNode.$tag$===rightVNode.$tag$,patch=(oldVNode,newVNode)=>{const elm=newVNode.$elm$=oldVNode.$elm$,oldChildren=oldVNode.$children$,newChildren=newVNode.$children$,tag=newVNode.$tag$,text=newVNode.$text$;null===text?(isSvgMode="svg"===tag||"foreignObject"!==tag&&isSvgMode,"slot"===tag||updateElement(oldVNode,newVNode,isSvgMode),null!==oldChildren&&null!==newChildren?updateChildren(elm,oldChildren,newVNode,newChildren):null!==newChildren?(null!==oldVNode.$text$&&(elm.textContent=""),addVnodes(elm,null,newVNode,newChildren,0,newChildren.length-1)):null!==oldChildren&&removeVnodes(oldChildren,0,oldChildren.length-1),isSvgMode&&"svg"===tag&&(isSvgMode=!1)):oldVNode.$text$!==text&&(elm.data=text)},nullifyVNodeRefs=vNode=>{vNode.$attrs$&&vNode.$attrs$.ref&&vNode.$attrs$.ref(null),vNode.$children$&&vNode.$children$.map(nullifyVNodeRefs)},renderVdom=(hostRef,renderFnResults)=>{const hostElm=hostRef.$hostElement$,cmpMeta=hostRef.$cmpMeta$,oldVNode=hostRef.$vnode$||newVNode(null,null),rootVnode=(node=renderFnResults)&&node.$tag$===Host?renderFnResults:h(null,null,renderFnResults);var node;hostTagName=hostElm.tagName,cmpMeta.$attrsToReflect$&&(rootVnode.$attrs$=rootVnode.$attrs$||{},cmpMeta.$attrsToReflect$.map((([propName,attribute])=>rootVnode.$attrs$[attribute]=hostElm[propName]))),rootVnode.$tag$=null,rootVnode.$flags$|=4,hostRef.$vnode$=rootVnode,rootVnode.$elm$=oldVNode.$elm$=hostElm.shadowRoot||hostElm,scopeId=hostElm["s-sc"],patch(oldVNode,rootVnode)},attachToAncestor=(hostRef,ancestorComponent)=>{ancestorComponent&&!hostRef.$onRenderResolve$&&ancestorComponent["s-p"]&&ancestorComponent["s-p"].push(new Promise((r=>hostRef.$onRenderResolve$=r)))},scheduleUpdate=(hostRef,isInitialLoad)=>{if(hostRef.$flags$|=16,4&hostRef.$flags$)return void(hostRef.$flags$|=512);attachToAncestor(hostRef,hostRef.$ancestorComponent$);return writeTask((()=>dispatchHooks(hostRef,isInitialLoad)))},dispatchHooks=(hostRef,isInitialLoad)=>{const endSchedule=(hostRef.$cmpMeta$.$tagName$,()=>{}),instance=hostRef.$lazyInstance$;let maybePromise;return isInitialLoad&&(hostRef.$flags$|=256,hostRef.$queuedListeners$&&(hostRef.$queuedListeners$.map((([methodName,event])=>safeCall(instance,methodName,event))),hostRef.$queuedListeners$=null),maybePromise=safeCall(instance,"componentWillLoad")),endSchedule(),enqueue(maybePromise,(()=>updateComponent(hostRef,instance,isInitialLoad)))},enqueue=(maybePromise,fn)=>maybePromise instanceof Promise?maybePromise.then(fn):fn(),updateComponent=async(hostRef,instance,isInitialLoad)=>{const elm=hostRef.$hostElement$,endUpdate=(hostRef.$cmpMeta$.$tagName$,()=>{}),rc=elm["s-rc"];isInitialLoad&&attachStyles(hostRef);const endRender=(hostRef.$cmpMeta$.$tagName$,()=>{});callRender(hostRef,instance),rc&&(rc.map((cb=>cb())),elm["s-rc"]=void 0),endRender(),endUpdate();{const childrenPromises=elm["s-p"],postUpdate=()=>postUpdateComponent(hostRef);0===childrenPromises.length?postUpdate():(Promise.all(childrenPromises).then(postUpdate),hostRef.$flags$|=4,childrenPromises.length=0)}},callRender=(hostRef,instance,elm)=>{try{instance=instance.render(),hostRef.$flags$&=-17,hostRef.$flags$|=2,renderVdom(hostRef,instance)}catch(e){consoleError(e,hostRef.$hostElement$)}return null},postUpdateComponent=hostRef=>{hostRef.$cmpMeta$.$tagName$;const elm=hostRef.$hostElement$,endPostUpdate=()=>{},instance=hostRef.$lazyInstance$,ancestorComponent=hostRef.$ancestorComponent$;safeCall(instance,"componentDidRender"),64&hostRef.$flags$?endPostUpdate():(hostRef.$flags$|=64,addHydratedFlag(elm),safeCall(instance,"componentDidLoad"),endPostUpdate(),hostRef.$onReadyResolve$(elm),ancestorComponent||appDidLoad()),hostRef.$onInstanceResolve$(elm),hostRef.$onRenderResolve$&&(hostRef.$onRenderResolve$(),hostRef.$onRenderResolve$=void 0),512&hostRef.$flags$&&nextTick((()=>scheduleUpdate(hostRef,!1))),hostRef.$flags$&=-517},appDidLoad=who=>{addHydratedFlag(doc.documentElement),nextTick((()=>emitEvent(win,"appload",{detail:{namespace:"dnn"}})))},safeCall=(instance,method,arg)=>{if(instance&&instance[method])try{return instance[method](arg)}catch(e){consoleError(e)}},addHydratedFlag=elm=>elm.classList.add("hydrated"),getValue=(ref,propName)=>getHostRef(ref).$instanceValues$.get(propName),setValue=(ref,propName,newVal,cmpMeta)=>{const hostRef=getHostRef(ref),elm=hostRef.$hostElement$,oldVal=hostRef.$instanceValues$.get(propName),flags=hostRef.$flags$,instance=hostRef.$lazyInstance$;var propValue,propType;propValue=newVal,propType=cmpMeta.$members$[propName][0],newVal=null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue;const areBothNaN=Number.isNaN(oldVal)&&Number.isNaN(newVal);if((!(8&flags)||void 0===oldVal)&&(newVal!==oldVal&&!areBothNaN)&&(hostRef.$instanceValues$.set(propName,newVal),instance)){if(cmpMeta.$watchers$&&128&flags){const watchMethods=cmpMeta.$watchers$[propName];watchMethods&&watchMethods.map((watchMethodName=>{try{instance[watchMethodName](newVal,oldVal,propName)}catch(e){consoleError(e,elm)}}))}2==(18&flags)&&scheduleUpdate(hostRef,!1)}},proxyComponent=(Cstr,cmpMeta,flags)=>{if(cmpMeta.$members$){Cstr.watchers&&(cmpMeta.$watchers$=Cstr.watchers);const members=Object.entries(cmpMeta.$members$),prototype=Cstr.prototype;if(members.map((([memberName,[memberFlags]])=>{31&memberFlags||2&flags&&32&memberFlags?Object.defineProperty(prototype,memberName,{get(){return propName=memberName,getHostRef(this).$instanceValues$.get(propName);var propName},set(newValue){setValue(this,memberName,newValue,cmpMeta)},configurable:!0,enumerable:!0}):1&flags&&64&memberFlags&&Object.defineProperty(prototype,memberName,{value(...args){const ref=getHostRef(this);return ref.$onInstancePromise$.then((()=>ref.$lazyInstance$[memberName](...args)))}})})),1&flags){const attrNameToPropName=new Map;prototype.attributeChangedCallback=function(attrName,_oldValue,newValue){plt.jmp((()=>{const propName=attrNameToPropName.get(attrName);if(this.hasOwnProperty(propName))newValue=this[propName],delete this[propName];else if(prototype.hasOwnProperty(propName)&&"number"==typeof this[propName]&&this[propName]==newValue)return;this[propName]=(null!==newValue||"boolean"!=typeof this[propName])&&newValue}))},Cstr.observedAttributes=members.filter((([_,m])=>15&m[0])).map((([propName,m])=>{const attrName=m[1]||propName;return attrNameToPropName.set(attrName,propName),512&m[0]&&cmpMeta.$attrsToReflect$.push([propName,attrName]),attrName}))}}return Cstr},initializeComponent=async(elm,hostRef,cmpMeta,hmrVersionId,Cstr)=>{if(0==(32&hostRef.$flags$)){hostRef.$flags$|=32;{if((Cstr=loadModule(cmpMeta)).then){const endLoad=()=>{};Cstr=await Cstr,endLoad()}Cstr.isProxied||(cmpMeta.$watchers$=Cstr.watchers,proxyComponent(Cstr,cmpMeta,2),Cstr.isProxied=!0);const endNewInstance=(cmpMeta.$tagName$,()=>{});hostRef.$flags$|=8;try{new Cstr(hostRef)}catch(e){consoleError(e)}hostRef.$flags$&=-9,hostRef.$flags$|=128,endNewInstance()}if(Cstr.style){let style=Cstr.style;const scopeId=getScopeId(cmpMeta);if(!styles.has(scopeId)){const endRegisterStyles=(cmpMeta.$tagName$,()=>{});registerStyle(scopeId,style,!!(1&cmpMeta.$flags$)),endRegisterStyles()}}}const ancestorComponent=hostRef.$ancestorComponent$,schedule=()=>scheduleUpdate(hostRef,!0);ancestorComponent&&ancestorComponent["s-rc"]?ancestorComponent["s-rc"].push(schedule):schedule()},connectedCallback=elm=>{if(0==(1&plt.$flags$)){const hostRef=getHostRef(elm),cmpMeta=hostRef.$cmpMeta$,endConnected=(cmpMeta.$tagName$,()=>{});if(1&hostRef.$flags$)addHostEventListeners(elm,hostRef,cmpMeta.$listeners$);else{hostRef.$flags$|=1;{let ancestorComponent=elm;for(;ancestorComponent=ancestorComponent.parentNode||ancestorComponent.host;)if(ancestorComponent["s-p"]){attachToAncestor(hostRef,hostRef.$ancestorComponent$=ancestorComponent);break}}cmpMeta.$members$&&Object.entries(cmpMeta.$members$).map((([memberName,[memberFlags]])=>{if(31&memberFlags&&elm.hasOwnProperty(memberName)){const value=elm[memberName];delete elm[memberName],elm[memberName]=value}})),initializeComponent(0,hostRef,cmpMeta)}endConnected()}},disconnectedCallback=elm=>{if(0==(1&plt.$flags$)){const hostRef=getHostRef(elm),instance=hostRef.$lazyInstance$;hostRef.$rmListeners$&&(hostRef.$rmListeners$.map((rmListener=>rmListener())),hostRef.$rmListeners$=void 0),safeCall(instance,"disconnectedCallback")}},bootstrapLazy=(lazyBundles,options={})=>{var _a;const endBootstrap=()=>{},cmpTags=[],exclude=options.exclude||[],customElements=win.customElements,head=doc.head,metaCharset=head.querySelector("meta[charset]"),visibilityStyle=doc.createElement("style"),deferredConnectedCallbacks=[];let appLoadFallback,isBootstrapping=!0;Object.assign(plt,options),plt.$resourcesUrl$=new URL(options.resourcesUrl||"./",doc.baseURI).href,lazyBundles.map((lazyBundle=>{lazyBundle[1].map((compactMeta=>{const cmpMeta={$flags$:compactMeta[0],$tagName$:compactMeta[1],$members$:compactMeta[2],$listeners$:compactMeta[3]};cmpMeta.$members$=compactMeta[2],cmpMeta.$listeners$=compactMeta[3],cmpMeta.$attrsToReflect$=[],cmpMeta.$watchers$={};const tagName=cmpMeta.$tagName$,HostElement=class extends HTMLElement{constructor(self){super(self),registerHost(self=this,cmpMeta),1&cmpMeta.$flags$&&self.attachShadow({mode:"open"})}connectedCallback(){appLoadFallback&&(clearTimeout(appLoadFallback),appLoadFallback=null),isBootstrapping?deferredConnectedCallbacks.push(this):plt.jmp((()=>connectedCallback(this)))}disconnectedCallback(){plt.jmp((()=>disconnectedCallback(this)))}componentOnReady(){return getHostRef(this).$onReadyPromise$}};cmpMeta.$lazyBundleId$=lazyBundle[0],exclude.includes(tagName)||customElements.get(tagName)||(cmpTags.push(tagName),customElements.define(tagName,proxyComponent(HostElement,cmpMeta,1)))}))}));{visibilityStyle.innerHTML=cmpTags+HYDRATED_CSS,visibilityStyle.setAttribute("data-styles","");const nonce=null!==(_a=plt.$nonce$)&&void 0!==_a?_a:queryNonceMetaTagContent(doc);null!=nonce&&visibilityStyle.setAttribute("nonce",nonce),head.insertBefore(visibilityStyle,metaCharset?metaCharset.nextSibling:head.firstChild)}isBootstrapping=!1,deferredConnectedCallbacks.length?deferredConnectedCallbacks.map((host=>host.connectedCallback())):plt.jmp((()=>appLoadFallback=setTimeout(appDidLoad,30))),endBootstrap()},addHostEventListeners=(elm,hostRef,listeners,attachParentListeners)=>{listeners&&listeners.map((([flags,name,method])=>{const target=elm,handler=hostListenerProxy(hostRef,method),opts=hostListenerOpts(flags);plt.ael(target,name,handler,opts),(hostRef.$rmListeners$=hostRef.$rmListeners$||[]).push((()=>plt.rel(target,name,handler,opts)))}))},hostListenerProxy=(hostRef,methodName)=>ev=>{try{256&hostRef.$flags$?hostRef.$lazyInstance$[methodName](ev):(hostRef.$queuedListeners$=hostRef.$queuedListeners$||[]).push([methodName,ev])}catch(e){consoleError(e)}},hostListenerOpts=flags=>0!=(2&flags),setNonce=nonce=>plt.$nonce$=nonce,hostRefs=new WeakMap,getHostRef=ref=>hostRefs.get(ref),registerInstance=(lazyInstance,hostRef)=>hostRefs.set(hostRef.$lazyInstance$=lazyInstance,hostRef),registerHost=(elm,cmpMeta)=>{const hostRef={$flags$:0,$hostElement$:elm,$cmpMeta$:cmpMeta,$instanceValues$:new Map};return hostRef.$onInstancePromise$=new Promise((r=>hostRef.$onInstanceResolve$=r)),hostRef.$onReadyPromise$=new Promise((r=>hostRef.$onReadyResolve$=r)),elm["s-p"]=[],elm["s-rc"]=[],addHostEventListeners(elm,hostRef,cmpMeta.$listeners$),hostRefs.set(elm,hostRef)},isMemberInElement=(elm,memberName)=>memberName in elm,consoleError=(e,el)=>(0,console.error)(e,el),cmpModules=new Map,loadModule=(cmpMeta,hostRef,hmrVersionId)=>{const exportName=cmpMeta.$tagName$.replace(/-/g,"_"),bundleId=cmpMeta.$lazyBundleId$,module=cmpModules.get(bundleId);return module?module[exportName]:import(`./${bundleId}.entry.js`).then((importedModule=>(cmpModules.set(bundleId,importedModule),importedModule[exportName])),consoleError)},styles=new Map,win="undefined"!=typeof window?window:{},doc=win.document||{head:{}},plt={$flags$:0,$resourcesUrl$:"",jmp:h=>h(),raf:h=>requestAnimationFrame(h),ael:(el,eventName,listener,opts)=>el.addEventListener(eventName,listener,opts),rel:(el,eventName,listener,opts)=>el.removeEventListener(eventName,listener,opts),ce:(eventName,opts)=>new CustomEvent(eventName,opts)},promiseResolve=v=>Promise.resolve(v),supportsConstructableStylesheets=(()=>{try{return new CSSStyleSheet,"function"==typeof(new CSSStyleSheet).replaceSync}catch(e){}return!1})(),queueDomReads=[],queueDomWrites=[],queueTask=(queue,write)=>cb=>{queue.push(cb),queuePending||(queuePending=!0,write&&4&plt.$flags$?nextTick(flush):plt.raf(flush))},consume=queue=>{for(let i=0;i<queue.length;i++)try{queue[i](performance.now())}catch(e){consoleError(e)}queue.length=0},flush=()=>{consume(queueDomReads),consume(queueDomWrites),(queuePending=queueDomReads.length>0)&&plt.raf(flush)},nextTick=cb=>promiseResolve().then(cb),writeTask=queueTask(queueDomWrites,!0);export{Host as H,consoleError as a,bootstrapLazy as b,createEvent as c,getElement as g,h,promiseResolve as p,registerInstance as r,setNonce as s};