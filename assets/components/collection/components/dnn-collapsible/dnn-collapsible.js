import{Host,h}from"@stencil/core";export class DnnCollapsible{constructor(){this.expanded=!1,this.transitionDuration=150}handleHeightChanged(){requestAnimationFrame((()=>{this.updateSize()}))}async updateSize(){this.expanded&&(requestAnimationFrame((()=>{this.container.style.maxHeight=`${this.container.scrollHeight}px`})),setTimeout((()=>{this.container.style.maxHeight="none"}),this.transitionDuration))}handledExpandedChanged(expanded){expanded?this.updateSize():requestAnimationFrame((()=>{this.container.style.maxHeight=`${this.container.scrollHeight}px`,requestAnimationFrame((()=>{this.container.style.maxHeight="0px"}))})),setTimeout((()=>{requestAnimationFrame((()=>{this.dnnCollapsibleHeightChanged.emit()}))}),this.transitionDuration)}componentDidLoad(){this.container.style.transition=`max-height ${this.transitionDuration}ms ease-in-out`}render(){return h(Host,null,h("div",{id:"container",class:this.expanded&&"expanded",ref:el=>this.container=el,style:{transition:`max-height ${this.transitionDuration}ms ease-in-out`}},h("slot",null)))}static get is(){return"dnn-collapsible"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["dnn-collapsible.scss"]}}static get styleUrls(){return{$:["dnn-collapsible.css"]}}static get properties(){return{expanded:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Defines if the panel is expanded or not."},attribute:"expanded",reflect:!0,defaultValue:"false"},transitionDuration:{type:"number",mutable:!1,complexType:{original:"number",resolved:"number",references:{}},required:!1,optional:!0,docs:{tags:[],text:"Defines the transition time in ms, defaults to 150ms"},attribute:"transition-duration",reflect:!1,defaultValue:"150"}}}static get events(){return[{method:"dnnCollapsibleHeightChanged",name:"dnnCollapsibleHeightChanged",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:"Fires whenever the collapsible height has changed"},complexType:{original:"void",resolved:"void",references:{}}}]}static get methods(){return{updateSize:{complexType:{signature:"() => Promise<void>",parameters:[],references:{Promise:{location:"global"}},return:"Promise<void>"},docs:{text:"Updates the component height, use to update after a slot content changes.",tags:[]}}}}static get elementRef(){return"el"}static get watchers(){return[{propName:"expanded",methodName:"handledExpandedChanged"}]}static get listeners(){return[{name:"dnnCollapsibleHeightChanged",method:"handleHeightChanged",target:void 0,capture:!1,passive:!1}]}}