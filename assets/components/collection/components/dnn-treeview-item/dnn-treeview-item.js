import{Host,h}from"@stencil/core";export class DnnTreeviewItem{constructor(){this.expanded=!1,this.hasChildren=!1}watchExpanded(expanded){if(expanded)return this.expander.classList.add("expanded"),void(this.collapsible.expanded=!0);this.expander.classList.remove("expanded"),this.collapsible.expanded=!1}componentDidLoad(){requestAnimationFrame((()=>{this.childElement.children[0].assignedElements().length>0&&(this.hasChildren=!0),this.expanded&&(this.expander.classList.add("expanded"),this.collapsible.expanded=!1,setTimeout((()=>{this.collapsible.expanded=!0}),300))}))}toggleCollapse(){if(this.expanded=!this.expanded,this.expanded)return this.expander.classList.add("expanded"),void this.userExpanded.emit();this.expander.classList.remove("expanded"),this.userCollapsed.emit()}render(){return h(Host,null,h("div",{class:"expander",ref:el=>this.expander=el},this.hasChildren&&h("button",{onClick:()=>this.toggleCollapse()},h("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24px",viewBox:"0 0 24 24",width:"24px",fill:"#000000"},h("path",{d:"M10 17l5-5-5-5v10z"}),h("path",{d:"M0 24V0h24v24H0z",fill:"none"})))),h("div",{class:"item"},h("div",{class:"item-slot"},h("slot",null)),h("dnn-collapsible",{ref:el=>this.collapsible=el,expanded:this.expanded},h("div",{ref:el=>this.childElement=el},h("slot",{name:"children"})))))}static get is(){return"dnn-treeview-item"}static get encapsulation(){return"shadow"}static get originalStyleUrls(){return{$:["dnn-treeview-item.scss"]}}static get styleUrls(){return{$:["dnn-treeview-item.css"]}}static get properties(){return{expanded:{type:"boolean",mutable:!0,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Defines if the current node is expanded."},attribute:"expanded",reflect:!0,defaultValue:"false"}}}static get states(){return{hasChildren:{}}}static get events(){return[{method:"userExpanded",name:"userExpanded",bubbles:!1,cancelable:!0,composed:!0,docs:{tags:[],text:"Fires when the user expands a node."},complexType:{original:"void",resolved:"void",references:{}}},{method:"userCollapsed",name:"userCollapsed",bubbles:!1,cancelable:!0,composed:!0,docs:{tags:[],text:"Fires when the user collapses a node."},complexType:{original:"void",resolved:"void",references:{}}}]}static get elementRef(){return"el"}static get watchers(){return[{propName:"expanded",methodName:"watchExpanded"}]}}