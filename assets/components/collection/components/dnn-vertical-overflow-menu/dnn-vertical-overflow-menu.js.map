{"version":3,"file":"dnn-vertical-overflow-menu.js","sourceRoot":"","sources":["../../../src/components/dnn-vertical-overflow-menu/dnn-vertical-overflow-menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, h, State } from '@stencil/core';\n\n/**\n * A component that shows a vertical list of items as they fit. When they don't all fit, it puts the ones that don't fit into a dropdown menu.\n * @slot() - The items to show in the menu. \n */\n@Component({\n  tag: 'dnn-vertical-overflow-menu',\n  styleUrl: 'dnn-vertical-overflow-menu.scss',\n  shadow: true,\n})\nexport class DnnVerticalOverflowMenu {\n\n  @Element() element!: HTMLDnnVerticalOverflowMenuElement;\n  \n  @State() showDropdownButton = false;\n  @State() showDropdownMenu = false;\n\n  private menu!: HTMLDivElement;\n  private dropdown: HTMLDivElement;\n  private resizeObserver: ResizeObserver;\n  private button!: HTMLButtonElement;\n  private previousMenuWidth = 0;\n\n  componentDidRender() {\n    requestAnimationFrame(() => {\n      this.moveItemsToDropDownIfNecessery();\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (let entry of entries){\n          if (entry.contentRect.width < this.previousMenuWidth){\n            this.moveItemsToDropDownIfNecessery()\n          }\n          if (this.previousMenuWidth > 0 && entry.contentRect.width > this.previousMenuWidth){\n            this.moveItemsToMenuIfPossible();\n          }\n          this.previousMenuWidth = entry.contentRect.width;\n        }\n      });\n      this.resizeObserver.observe(this.element);\n    });\n  }\n\n  private moveItemsToDropDownIfNecessery(){\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    if (neededWidth > availableWidth){\n      this.showDropdownButton = true;\n      var lastItem = menuItems[menuItems.length -1];\n      if (this.dropdown == undefined){\n        return;\n      }\n      lastItem.slot = \"dropdown\";\n      this.moveItemsToDropDownIfNecessery();\n    }\n  }\n  \n  private moveItemsToMenuIfPossible(){\n    if (this.dropdown == undefined || !this.dropdown.hasChildNodes()){\n      return;\n    }\n    const menuItems = Array.from(this.menu.querySelector(\"slot\").assignedElements());\n    const availableWidth = this.menu.getBoundingClientRect().width;\n    let neededWidth = parseFloat(getComputedStyle(this.element).fontSize)*2;\n    neededWidth += (menuItems.length - 1) * parseFloat(getComputedStyle(this.element).fontSize);\n    menuItems.forEach(item => neededWidth += this.getFullWidth(item));\n    const firstItem = this.dropdown.querySelector(\"slot\").assignedElements()[0];\n    if (firstItem != undefined){\n      neededWidth += this.getFullWidth(firstItem);\n    }\n\n    if (neededWidth < availableWidth){\n      if (firstItem != undefined){\n        firstItem.slot = \"\";\n      }\n      if(firstItem == undefined){\n        this.dropdown.classList.remove(\"visible\");\n        this.showDropdownMenu = false;\n        this.showDropdownButton = false;\n      }\n    }    \n  }\n\n  private getFullWidth(item: Element) {\n    var width = item.getBoundingClientRect().width;\n    var styles = getComputedStyle(item);\n    width += parseFloat(styles.marginLeft);\n    width += parseFloat(styles.marginRight);\n    width += parseFloat(styles.paddingLeft);\n    width += parseFloat(styles.paddingRight);\n    return width;\n  }\n\n  private toggleOverflowMenu(): void {\n    this.showDropdownMenu = !this.showDropdownMenu;\n    if (this.showDropdownMenu){\n      this.dropdown.classList.add(\"visible\");\n      let contentHeight = 0;\n      const items = Array.from(this.dropdown.querySelector(\"slot\").assignedElements());\n      items.forEach(item => contentHeight += item.getBoundingClientRect().height);\n      const emHeight = parseFloat(getComputedStyle(this.dropdown).fontSize);\n      const gapsHeight = emHeight * (this.dropdown.children.length - 1) / 2;\n      contentHeight += gapsHeight;\n      const marginHeight = emHeight * 2;\n      contentHeight += marginHeight;\n      this.dropdown.style.height = `${contentHeight}px`;\n      const dismissMenu = (e: MouseEvent) => {\n        const buttonRect = this.button.getBoundingClientRect();\n        if (\n          e.clientX < buttonRect.left ||\n          e.clientX > buttonRect.right ||\n          e.clientY < buttonRect.top ||\n          e.clientY > buttonRect.bottom){\n            this.toggleOverflowMenu();\n          }\n          document.removeEventListener(\"click\", dismissMenu);\n      };\n      setTimeout(() => {\n        document.addEventListener(\"click\", dismissMenu, false);\n      }, 100);\n    }\n    else{\n      this.dropdown.classList.remove(\"visible\");\n      this.dropdown.style.height = \"0px\";\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"menu-container\">\n          <div class=\"menu\" ref={el => this.menu = el}>\n            <slot></slot>\n          </div>\n            {this.showDropdownButton &&\n              <div class=\"overflow\">\n                <button\n                  ref={el => this.button = el}\n                  class=\"icon\"\n                  onClick={() => this.toggleOverflowMenu()}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"/></svg>\n                </button>\n                <div class=\"dropdown\" ref={el => this.dropdown = el}>\n                  <slot name=\"dropdown\"></slot>\n                </div>\n              </div>\n            }\n          </div>\n      </Host>\n    );\n  }\n}\n"]}