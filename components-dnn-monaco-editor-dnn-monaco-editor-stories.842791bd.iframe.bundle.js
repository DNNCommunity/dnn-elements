"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[761],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nw:()=>actions});var chunk_KKE3V3AL=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-KKE3V3AL.mjs"),actions=(...args)=>{let options=chunk_KKE3V3AL.vc,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...chunk_KKE3V3AL.vc,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=(0,chunk_KKE3V3AL.aD)(namesObject[name],options)})),actionsObject};__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs")},"./src/components/dnn-monaco-editor/dnn-monaco-editor.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HTML:()=>HTML,Typescript:()=>Typescript,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_monaco_editor_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const dnn_monaco_editor_stories={title:"Elements/Monaco Editor",component:"dnn-monaco-editor",tags:["autodocs"],parameters:{docs:{description:{component:'# dnn-monaco-editor\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                           | Type                                                                                                                                                                                                                                                                                                                                                                                                                                    | Default     |\n| ---------- | ---------- | ------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `language` | `language` | Defines the language for the editor.  | `"html" \\| "ruby" \\| "plaintext" \\| "bat" \\| "coffeescript" \\| "c" \\| "cpp" \\| "csharp" \\| "dockerfile" \\| "fsharp" \\| "go" \\| "handlebars" \\| "ini" \\| "pug" \\| "java" \\| "lua" \\| "markdown" \\| "msdax" \\| "objective-c" \\| "postiats" \\| "php" \\| "powershell" \\| "python" \\| "r" \\| "razor" \\| "swift" \\| "sql" \\| "vb" \\| "xml" \\| "less" \\| "scss" \\| "css" \\| "yaml" \\| "sol" \\| "sb" \\| "json" \\| "typescript" \\| "javascript"` | `"html"`    |\n| `value`    | `value`    | Sets the code contained in the editor | `string`                                                                                                                                                                                                                                                                                                                                                                                                                                | `undefined` |\n\n\n## Events\n\n| Event            | Description                                            | Type                  |\n| ---------------- | ------------------------------------------------------ | --------------------- |\n| `contentChanged` | Emits the new value of the content when it is changed. | `CustomEvent<string>` |\n\n\n## CSS Custom Properties\n\n| Name                     | Description                           |\n| ------------------------ | ------------------------------------- |\n| `--monaco-editor-height` | height of the editor, default is 50vh |\n| `--monaco-editor-width`  | width of the editor, default is 100%  |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}}},argTypes:{language:{options:["bat","c","coffeescript","cpp","csharp","css","dockerfile","fsharp","go","handlebars","html","ini","java","javascript","json","less","lua","markdown","msdax","objective-c","php","plaintext","postiats","powershell","pug","python","r","razor","ruby","sb","scss","sol","sql","swift","typescript","vb","xml","yaml"],control:{type:"select"}},value:{control:"text"}}},eventsFromNames=(0,dist.Nw)("onContentChanged"),Template=args=>lit.dy`
    <dnn-monaco-editor
        language=${args.language}
        value=${args.value}
        @contentChanged=${eventsFromNames.onContentChanged}
    />
    `,HTML=Template.bind({});HTML.args={language:"html",value:'<h1>Hello World</h1>\n<div class="card">\n    <p>Some text</p>\n</div>\n'};const Typescript=Template.bind({});Typescript.args={language:"typescript",value:'/** Defines basic info about a person. */\ninterface Person {\n\n    /** The person\'s first name. */\n    firstName: string;\n\n    /** The person\'s last name. */\n    lastName: string;\n}\n\n/** Greets a person. */\nconst greeter = (person: Person) =>\n{\n    return "Hello, " + person.firstName + " " + person.lastName;\n}\n\nexport default greeter;\n'},HTML.parameters={...HTML.parameters,docs:{...HTML.parameters?.docs,source:{originalSource:"args => html`\n    <dnn-monaco-editor\n        language=${args.language}\n        value=${args.value}\n        @contentChanged=${eventsFromNames.onContentChanged}\n    />\n    `",...HTML.parameters?.docs?.source}}},Typescript.parameters={...Typescript.parameters,docs:{...Typescript.parameters?.docs,source:{originalSource:"args => html`\n    <dnn-monaco-editor\n        language=${args.language}\n        value=${args.value}\n        @contentChanged=${eventsFromNames.onContentChanged}\n    />\n    `",...Typescript.parameters?.docs?.source}}};const __namedExportsOrder=["HTML","Typescript"]}}]);