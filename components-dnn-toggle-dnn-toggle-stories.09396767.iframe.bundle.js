/*! For license information please see components-dnn-toggle-dnn-toggle-stories.09396767.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[339],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nw:()=>actions});var chunk_KKE3V3AL=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-KKE3V3AL.mjs"),actions=(...args)=>{let options=chunk_KKE3V3AL.vc,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...chunk_KKE3V3AL.vc,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=(0,chunk_KKE3V3AL.aD)(namesObject[name],options)})),actionsObject};__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs")},"./src/components/dnn-toggle/dnn-toggle.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toggle:()=>Toggle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_toggle_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),if_defined=__webpack_require__("../../node_modules/lit-html/directives/if-defined.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const dnn_toggle_stories={title:"Elements/Toggle",component:"dnn-toggle",tags:["autodocs"],parameters:{docs:{description:{component:"# dnn-toggle\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                                     | Type      | Default |\n| ---------- | ---------- | ----------------------------------------------- | --------- | ------- |\n| `checked`  | `checked`  | If 'true' the toggle is checked (on).           | `boolean` | `false` |\n| `disabled` | `disabled` | If 'true' the toggle is not be interacted with. | `boolean` | `false` |\n\n\n## Events\n\n| Event          | Description                   | Type                                      |\n| -------------- | ----------------------------- | ----------------------------------------- |\n| `checkChanged` | Fires when the toggle changed | `CustomEvent<DnnToggleChangeEventDetail>` |\n\n\n## CSS Custom Properties\n\n| Name                          | Description                            |\n| ----------------------------- | -------------------------------------- |\n| `--background`                | Background of the toggle.              |\n| `--background-checked`        | Background of the toggle when checked. |\n| `--border-radius`             | The radius of the background borders.  |\n| `--handle-background`         | Background of the handle.              |\n| `--handle-background-checked` | Background of the handle when checked. |\n| `--handle-border-radius`      | The radius of the handle.              |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"}}},argTypes:{checked:{control:"boolean"},disabled:{control:"boolean"},background:{control:"color"},backgroundChecked:{control:"color"},handleBackground:{control:"color"},handleBackgroundChecked:{control:"color"},borderRadius:{control:"text"},handleBorderRadius:{control:"text"}}},Toggle=((0,dist.Nw)("checkChanged"),((args,context)=>lit.dy`
        <dnn-toggle
            ?checked=${(0,if_defined.o)(args.checked)}
            ?disabled=${(0,if_defined.o)(args.disabled)}>
        </dnn-toggle>
    `).bind({}));Toggle.args={checked:!1,disabled:!1},Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:"(args: {\n  checked: boolean;\n  disabled: boolean;\n}, context) => html`\n        <dnn-toggle\n            ?checked=${ifDefined(args.checked)}\n            ?disabled=${ifDefined(args.disabled)}>\n        </dnn-toggle>\n    `",...Toggle.parameters?.docs?.source}}};const __namedExportsOrder=["Toggle"]},"../../node_modules/lit-html/directives/if-defined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>l});var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit-html/lit-html.js"),l=l=>null!=l?l:_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.Ld}}]);