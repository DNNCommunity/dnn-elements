{"version":3,"sources":["node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__copyProps","to","from","except","desc","call","get","__reExport","target","mod","secondTarget","__publicField","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","[object Object]","_modeId","_defaults","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","resources","client","_getClient","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","path","indexOf","slice","fileName","Uri","parse","getModel","isLibFile","createModel","matchedLibFile","typescriptDefaults","content","uris","_containsLibFile","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","create","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","fetchLibFilesIfNecessary","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","getOrCreateModel","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","getSignatureHelpItems","triggerReason","_toSignatureHelpTriggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","getQuickInfoAtPosition","contents","_textSpanToRange","textSpan","OccurrencesAdapter","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","DefinitionAdapter","getDefinitionAtPosition","refModel","ReferenceAdapter","getReferencesAtPosition","OutlineAdapter","getNavigationBarItems","convert","bucket","containerLabel","result2","outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","Method","const","localFunction","FormatHelper","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","change","newText","FormatAdapter","startOffset","endOffset","edits","getFormattingEditsForRange","_convertOptions","edit","_convertTextChanges","FormatOnTypeAdapter","autoFormatTriggerCharacters","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","action","title","description","RenameAdapter","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","tsHints","provideInlayHints","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","javaScriptWorker","typeScriptWorker","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","getLanguageServiceWorker","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","registerCodeActionProvider","registerRenameProvider","registerInlayHintsProvider"],"mappings":";;;;;;iFAOA,IAAIA,EAAYC,OAAOC,eACvB,IAAIC,EAAmBF,OAAOG,yBAC9B,IAAIC,EAAoBJ,OAAOK,oBAC/B,IAAIC,EAAeN,OAAOO,UAAUC,eACpC,IAAIC,EAAkB,CAACC,EAAKC,EAAKC,IAAUD,KAAOD,EAAMX,EAAUW,EAAKC,EAAK,CAAEE,WAAY,KAAMC,aAAc,KAAMC,SAAU,KAAMH,MAAAA,IAAWF,EAAIC,GAAOC,EAC1J,IAAII,EAAc,CAACC,EAAIC,EAAMC,EAAQC,KACnC,GAAIF,UAAeA,IAAS,iBAAmBA,IAAS,WAAY,CAClE,IAAK,IAAIP,KAAOP,EAAkBc,GAChC,IAAKZ,EAAae,KAAKJ,EAAIN,IAAQA,IAAQQ,EACzCpB,EAAUkB,EAAIN,EAAK,CAAEW,IAAK,IAAMJ,EAAKP,GAAME,aAAcO,EAAOlB,EAAiBgB,EAAMP,KAASS,EAAKP,aAE3G,OAAOI,GAET,IAAIM,EAAa,CAACC,EAAQC,EAAKC,KAAkBV,EAAYQ,EAAQC,EAAK,WAAYC,GAAgBV,EAAYU,EAAcD,EAAK,YACrI,IAAIE,EAAgB,CAACjB,EAAKC,EAAKC,KAC7BH,EAAgBC,SAAYC,IAAQ,SAAWA,EAAM,GAAKA,EAAKC,GAC/D,OAAOA,GAIT,IAAIgB,EAA6B,GACjCL,EAAWK,EAA4BC,GAIpC,IAACC,EAAgB,MAClBC,YAAYC,EAASC,GACnBC,KAAKF,QAAUA,EACfE,KAAKD,UAAYA,EACjBC,KAAKC,QAAU,KACfD,KAAKE,QAAU,KACfF,KAAKG,sBAAwBH,KAAKD,UAAUK,aAAY,IAAMJ,KAAKK,gBACnEL,KAAKM,sBAAwB,EAC7BN,KAAKO,yBAA2BP,KAAKD,UAAUS,sBAAqB,IAAMR,KAAKS,qBAEjFZ,sBACAA,sBACAA,yBACAA,QACAA,QACAA,UACEG,KAAKG,sBAAsBO,UAC3BV,KAAKO,yBAAyBG,UAC9BV,KAAKK,cAEPR,cACE,GAAIG,KAAKC,QAAS,CAChBD,KAAKC,QAAQS,UACbV,KAAKC,QAAU,KAEjBD,KAAKE,QAAU,KAEjBL,yBACE,IAAKG,KAAKC,QAAS,CACjB,OAEF,MAAMU,IAAYX,KAAKM,sBACvB,MAAMM,QAAcZ,KAAKC,QAAQY,WACjC,GAAIb,KAAKM,wBAA0BK,EAAS,CAC1C,OAEFC,EAAME,gBAAgBd,KAAKD,UAAUgB,gBAEvClB,aACE,IAAKG,KAAKE,QAAS,CACjBF,KAAKE,QAAU,WACbF,KAAKC,QAAUP,EAA2BsB,OAAOC,gBAAgB,CAC/DC,SAAU,kCACVC,MAAOnB,KAAKF,QACZsB,eAAgB,KAChBC,WAAY,CACVC,gBAAiBtB,KAAKD,UAAUwB,qBAChCC,UAAWxB,KAAKD,UAAUgB,eAC1BU,iBAAkBzB,KAAKD,UAAU2B,cAAcD,iBAC/CE,kBAAmB3B,KAAKD,UAAU4B,qBAGtC,GAAI3B,KAAKD,UAAU6B,oBAAqB,CACtC,aAAa5B,KAAKC,QAAQ4B,oBAAoBnC,EAA2BsB,OAAOc,YAAYC,QAAQC,GAAUA,EAAMC,kBAAoBjC,KAAKF,UAASoC,KAAKF,GAAUA,EAAMG,OAE7K,aAAanC,KAAKC,QAAQY,YAfb,GAkBjB,OAAOb,KAAKE,QAEdL,kCAAkCuC,GAChC,MAAMC,QAAerC,KAAKsC,aAC1B,GAAItC,KAAKC,QAAS,OACVD,KAAKC,QAAQ4B,oBAAoBO,GAEzC,OAAOC,IAUX,IAAIE,EAAa,GACjBA,EAAW,YAAc,KACzBA,EAAW,gBAAkB,KAC7BA,EAAW,yBAA2B,KACtCA,EAAW,8BAAgC,KAC3CA,EAAW,wBAA0B,KACrCA,EAAW,mBAAqB,KAChCA,EAAW,6BAA+B,KAC1CA,EAAW,4BAA8B,KACzCA,EAAW,2BAA6B,KACxCA,EAAW,yBAA2B,KACtCA,EAAW,2BAA6B,KACxCA,EAAW,0BAA4B,KACvCA,EAAW,oCAAsC,KACjDA,EAAW,iCAAmC,KAC9CA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,wBAA0B,KACrCA,EAAW,0BAA4B,KACvCA,EAAW,gCAAkC,KAC7CA,EAAW,0BAA4B,KACvCA,EAAW,+BAAiC,KAC5CA,EAAW,kCAAoC,KAC/CA,EAAW,iCAAmC,KAC9CA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,wBAA0B,KACrCA,EAAW,2BAA6B,KACxCA,EAAW,0BAA4B,KACvCA,EAAW,yBAA2B,KACtCA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,0BAA4B,KACvCA,EAAW,0BAA4B,KACvCA,EAAW,0BAA4B,KACvCA,EAAW,0BAA4B,KACvCA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,wBAA0B,KACrCA,EAAW,2BAA6B,KACxCA,EAAW,gCAAkC,KAC7CA,EAAW,0BAA4B,KACvCA,EAAW,oCAAsC,KACjDA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,wBAA0B,KACrCA,EAAW,2BAA6B,KACxCA,EAAW,0BAA4B,KACvCA,EAAW,2BAA6B,KACxCA,EAAW,gBAAkB,KAC7BA,EAAW,gBAAkB,KAC7BA,EAAW,mBAAqB,KAChCA,EAAW,wBAA0B,KACrCA,EAAW,wBAA0B,KACrCA,EAAW,2BAA6B,KACxCA,EAAW,0BAA4B,KACvCA,EAAW,2BAA6B,KACxCA,EAAW,uBAAyB,KACpCA,EAAW,sBAAwB,KACnCA,EAAW,oCAAsC,KACjDA,EAAW,+BAAiC,KAG5C,SAASC,EAA6BC,EAAMC,EAASC,EAAS,GAC5D,UAAWF,IAAS,SAAU,CAC5B,OAAOA,OACF,GAAIA,SAAc,EAAG,CAC1B,MAAO,GAET,IAAIG,EAAS,GACb,GAAID,EAAQ,CACVC,GAAUF,EACV,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/BD,GAAU,MAGdA,GAAUH,EAAKK,YACfH,IACA,GAAIF,EAAKM,KAAM,CACb,IAAK,MAAMC,KAAOP,EAAKM,KAAM,CAC3BH,GAAUJ,EAA6BQ,EAAKN,EAASC,IAGzD,OAAOC,EAET,SAASK,EAAqBC,GAC5B,GAAIA,EAAc,CAChB,OAAOA,EAAahB,KAAKiB,GAAgBA,EAAYC,OAAMC,KAAK,IAElE,MAAO,GAEN,IAACC,EAAU,MACZzD,YAAYI,GACVD,KAAKC,QAAUA,EAEjBJ,iBAAiBmC,EAAOuB,GACtB,IAAIC,EAAKxB,EAAMyB,cAAcF,EAAKG,OAClC,IAAIC,EAAK3B,EAAMyB,cAAcF,EAAKG,MAAQH,EAAKK,QAC/C,IAAMC,WAAYC,EAAiBC,OAAQC,GAAgBR,EAC3D,IAAMK,WAAYI,EAAeF,OAAQG,GAAcP,EACvD,MAAO,CAAEG,gBAAAA,EAAiBE,YAAAA,EAAaC,cAAAA,EAAeC,UAAAA,KAGvD,IAACC,EAAW,MACbtE,YAAYI,GACVD,KAAKC,QAAUA,EACfD,KAAKoE,UAAY,GACjBpE,KAAKqE,oBAAsB,MAC3BrE,KAAKsE,sBAAwB,KAE/BzE,UACAA,oBACAA,sBACAA,UAAUsC,GACR,IAAKA,EAAK,CACR,OAAO,MAET,GAAIA,EAAIoC,KAAKC,QAAQ,WAAa,EAAG,CACnC,QAASjC,EAAWJ,EAAIoC,KAAKE,MAAM,IAErC,OAAO,MAET5E,iBAAiB6E,GACf,MAAMvC,EAAMzC,EAA2BiF,IAAIC,MAAMF,GACjD,MAAM1C,EAAQtC,EAA2BsB,OAAO6D,SAAS1C,GACzD,GAAIH,EAAO,CACT,OAAOA,EAET,GAAIhC,KAAK8E,UAAU3C,IAAQnC,KAAKqE,oBAAqB,CACnD,OAAO3E,EAA2BsB,OAAO+D,YAAY/E,KAAKoE,UAAUjC,EAAIoC,KAAKE,MAAM,IAAK,aAActC,GAExG,MAAM6C,EAAiBC,EAAmBlE,eAAe2D,GACzD,GAAIM,EAAgB,CAClB,OAAOtF,EAA2BsB,OAAO+D,YAAYC,EAAeE,QAAS,aAAc/C,GAE7F,OAAO,KAETtC,iBAAiBsF,GACf,IAAK,IAAIhD,KAAOgD,EAAM,CACpB,GAAInF,KAAK8E,UAAU3C,GAAM,CACvB,OAAO,MAGX,OAAO,MAETtC,+BAA+BsF,GAC7B,IAAKnF,KAAKoF,iBAAiBD,GAAO,CAChC,aAEInF,KAAKqF,iBAEbxF,iBACE,IAAKG,KAAKsE,sBAAuB,CAC/BtE,KAAKsE,sBAAwBtE,KAAKC,UAAUqF,MAAMC,GAAMA,EAAEC,gBAAeF,MAAMG,IAC7EzF,KAAKqE,oBAAsB,KAC3BrE,KAAKoE,UAAYqB,KAGrB,OAAOzF,KAAKsE,wBAGb,IAACoB,EAAqB,cAAcpC,EACrCzD,YAAYuE,EAAWrE,EAAW4F,EAAWC,GAC3CC,MAAMD,GACN5F,KAAKoE,UAAYA,EACjBpE,KAAKD,UAAYA,EACjBC,KAAK2F,UAAYA,EACjB,MAAMG,EAAc9D,IAClB,GAAIA,EAAMC,kBAAoB0D,EAAW,CACvC,OAEF,MAAMI,EAAgB,KACpB,MAAMC,YAAEA,GAAgBhG,KAAKD,UAAUkG,wBACvC,GAAID,EAAa,CACf,GAAIhE,EAAMkE,qBAAsB,CAC9BlG,KAAKmG,YAAYnE,QAEd,CACLhC,KAAKmG,YAAYnE,KAGrB,IAAIoE,EACJ,MAAMC,EAAqBrE,EAAMsE,oBAAmB,KAClDC,aAAaH,GACbA,EAASI,OAAOC,WAAWV,EAAe,QAE5C,MAAMW,EAAsB1E,EAAM2E,qBAAoB,KACpD,MAAMX,YAAEA,GAAgBhG,KAAKD,UAAUkG,wBACvC,GAAID,EAAa,CACf,GAAIhE,EAAMkE,qBAAsB,CAC9BH,QACK,CACLrG,EAA2BsB,OAAO4F,gBAAgB5E,EAAOhC,KAAK2F,UAAW,SAI/E3F,KAAK6G,UAAU7E,EAAMG,IAAI2E,YAAc,CACrCjH,UACEwG,EAAmB3F,UACnBgG,EAAoBhG,UACpB6F,aAAaH,KAGjBL,KAEF,MAAMgB,EAAkB/E,IACtBtC,EAA2BsB,OAAO4F,gBAAgB5E,EAAOhC,KAAK2F,UAAW,IACzE,MAAMlH,EAAMuD,EAAMG,IAAI2E,WACtB,GAAI9G,KAAK6G,UAAUpI,GAAM,CACvBuB,KAAK6G,UAAUpI,GAAKiC,iBACbV,KAAK6G,UAAUpI,KAG1BuB,KAAKgH,aAAaC,KAAKvH,EAA2BsB,OAAOkG,kBAAkBlF,GAAU8D,EAAW9D,MAChGhC,KAAKgH,aAAaC,KAAKvH,EAA2BsB,OAAOmG,mBAAmBJ,IAC5E/G,KAAKgH,aAAaC,KAAKvH,EAA2BsB,OAAOoG,0BAA0BC,IACjFN,EAAeM,EAAMrF,OACrB8D,EAAWuB,EAAMrF,WAEnBhC,KAAKgH,aAAaC,KAAK,CACrBpH,UACE,IAAK,MAAMmC,KAAStC,EAA2BsB,OAAOc,YAAa,CACjEiF,EAAe/E,OAIrB,MAAMsF,EAAsB,KAC1B,IAAK,MAAMtF,KAAStC,EAA2BsB,OAAOc,YAAa,CACjEiF,EAAe/E,GACf8D,EAAW9D,KAGfhC,KAAKgH,aAAaC,KAAKjH,KAAKD,UAAUK,YAAYkH,IAClDtH,KAAKgH,aAAaC,KAAKjH,KAAKD,UAAUS,qBAAqB8G,IAC3D5H,EAA2BsB,OAAOc,YAAYyF,SAASvF,GAAU8D,EAAW9D,KAE9EnC,aAAe,GACfA,UAA4B/B,OAAO0J,OAAO,MAC1C3H,UACEG,KAAKgH,aAAaO,SAASE,GAAMA,GAAKA,EAAE/G,YACxCV,KAAKgH,aAAe,GAEtBnH,kBAAkBmC,GAChB,MAAM4D,QAAe5F,KAAKC,QAAQ+B,EAAMG,KACxC,GAAIH,EAAM0F,aAAc,CACtB,OAEF,MAAMC,EAAW,GACjB,MAAMC,mBAAEA,EAAkBC,qBAAEA,EAAoBC,wBAAEA,GAA4B9H,KAAKD,UAAUkG,wBAC7F,IAAK2B,EAAoB,CACvBD,EAASV,KAAKrB,EAAOmC,wBAAwB/F,EAAMG,IAAI2E,aAEzD,IAAKe,EAAsB,CACzBF,EAASV,KAAKrB,EAAOoC,uBAAuBhG,EAAMG,IAAI2E,aAExD,IAAKgB,EAAyB,CAC5BH,EAASV,KAAKrB,EAAOqC,yBAAyBjG,EAAMG,IAAI2E,aAE1D,MAAMoB,QAAuBC,QAAQC,IAAIT,GACzC,IAAKO,GAAkBlG,EAAM0F,aAAc,CACzC,OAEF,MAAMW,EAAcH,EAAeI,QAAO,CAACC,EAAGC,IAAMA,EAAEC,OAAOF,IAAI,IAAIxG,QAAQ0F,IAAOzH,KAAKD,UAAUkG,wBAAwByC,yBAA2B,IAAIlE,QAAQiD,EAAEkB,SAAW,IAC/K,MAAMC,EAAcP,EAAYnG,KAAKuF,GAAMA,EAAEoB,oBAAsB,KAAIP,QAAO,CAACC,EAAGC,IAAMA,EAAEC,OAAOF,IAAI,IAAIrG,KAAK2G,GAAuBA,EAAmBC,KAAOpJ,EAA2BiF,IAAIC,MAAMiE,EAAmBC,KAAKpE,UAAY,aAClO1E,KAAKoE,UAAU2E,yBAAyBH,GAC9C,GAAI5G,EAAM0F,aAAc,CACtB,OAEFhI,EAA2BsB,OAAO4F,gBAAgB5E,EAAOhC,KAAK2F,UAAW0C,EAAYnG,KAAKuF,GAAMzH,KAAKgJ,oBAAoBhH,EAAOyF,MAElI5H,oBAAoBmC,EAAOS,GACzB,MAAMwG,EAAYxG,EAAKiB,OAAS,EAChC,MAAMwF,EAAazG,EAAKmB,QAAU,EAClC,MAAQC,WAAYC,EAAiBC,OAAQC,GAAgBhC,EAAMyB,cAAcwF,GACjF,MAAQpF,WAAYI,EAAeF,OAAQG,GAAclC,EAAMyB,cAAcwF,EAAYC,GACzF,MAAMC,EAAO,GACb,GAAI1G,EAAK2G,mBAAoB,CAC3BD,EAAKlC,KAAKvH,EAA2B2J,UAAUC,aAEjD,GAAI7G,EAAK8G,kBAAmB,CAC1BJ,EAAKlC,KAAKvH,EAA2B2J,UAAUG,YAEjD,MAAO,CACLC,SAAUzJ,KAAK0J,sCAAsCjH,EAAKkH,UAC1D7F,gBAAAA,EACAE,YAAAA,EACAC,cAAAA,EACAC,UAAAA,EACA0F,QAASpH,EAA6BC,EAAKK,YAAa,MACxD6F,KAAMlG,EAAKkG,KAAK7B,WAChBqC,KAAAA,EACAN,mBAAoB7I,KAAK6J,2BAA2B7H,EAAOS,EAAKoG,qBAGpEhJ,2BAA2BmC,EAAO6G,GAChC,IAAKA,EAAoB,CACvB,MAAO,GAET,MAAMjG,EAAS,GACfiG,EAAmBtB,SAASuC,IAC1B,IAAIC,EAAkB/H,EACtB,GAAI8H,EAAKhB,KAAM,CACbiB,EAAkB/J,KAAKoE,UAAU4F,iBAAiBF,EAAKhB,KAAKpE,UAE9D,IAAKqF,EAAiB,CACpB,OAEF,MAAME,EAAYH,EAAKpG,OAAS,EAChC,MAAMwG,EAAaJ,EAAKlG,QAAU,EAClC,MAAQC,WAAYC,EAAiBC,OAAQC,GAAgB+F,EAAgBtG,cAAcwG,GAC3F,MAAQpG,WAAYI,EAAeF,OAAQG,GAAc6F,EAAgBtG,cAAcwG,EAAYC,GACnGtH,EAAOqE,KAAK,CACVkD,SAAUJ,EAAgB5H,IAC1B2B,gBAAAA,EACAE,YAAAA,EACAC,cAAAA,EACAC,UAAAA,EACA0F,QAASpH,EAA6BsH,EAAKhH,YAAa,WAG5D,OAAOF,EAET/C,sCAAsC8J,GACpC,OAAQA,GACN,KAAK,EACH,OAAOjK,EAA2B0K,eAAeC,MACnD,KAAK,EACH,OAAO3K,EAA2B0K,eAAeE,KACnD,KAAK,EACH,OAAO5K,EAA2B0K,eAAeG,QACnD,KAAK,EACH,OAAO7K,EAA2B0K,eAAeI,KAErD,OAAO9K,EAA2B0K,eAAeE,OAGlD,IAACG,EAAiB,cAAcnH,EACjCoH,wBACE,MAAO,CAAC,KAEV7K,6BAA6BmC,EAAO2I,EAAUC,EAAUC,GACtD,MAAMC,EAAW9I,EAAM+I,qBAAqBJ,GAC5C,MAAMK,EAAY,IAAItL,EAA2BuL,MAAMN,EAAS9G,WAAYiH,EAAS9G,YAAa2G,EAAS9G,WAAYiH,EAAS5G,WAChI,MAAMiG,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMoC,QAAalE,EAAOwF,yBAAyBjB,EAASrD,WAAYoE,GACxE,IAAKpB,GAAQ9H,EAAM0F,aAAc,CAC/B,OAEF,MAAM2D,EAAcvB,EAAKwB,QAAQpJ,KAAKqJ,IACpC,IAAIC,EAAQR,EACZ,GAAIO,EAAME,gBAAiB,CACzB,MAAMjI,EAAKxB,EAAMyB,cAAc8H,EAAME,gBAAgB/H,OACrD,MAAMC,EAAK3B,EAAMyB,cAAc8H,EAAME,gBAAgB/H,MAAQ6H,EAAME,gBAAgB7H,QACnF4H,EAAQ,IAAI9L,EAA2BuL,MAAMzH,EAAGK,WAAYL,EAAGO,OAAQJ,EAAGE,WAAYF,EAAGI,QAE3F,MAAMoF,EAAO,GACb,GAAIoC,EAAMG,eAAelH,QAAQ,iBAAmB,EAAG,CACrD2E,EAAKlC,KAAKvH,EAA2BiM,UAAUC,kBAAkBpC,YAEnE,MAAO,CACLrH,IAAKgI,EACLQ,SAAAA,EACAO,OAAAA,EACAM,MAAAA,EACArK,MAAOoK,EAAMM,KACbC,WAAYP,EAAMM,KAClBE,SAAUR,EAAMQ,SAChBC,KAAMvB,EAAewB,YAAYV,EAAMS,MACvC7C,KAAAA,MAGJ,MAAO,CACLkC,YAAAA,GAGJxL,4BAA4BqM,EAAMrB,GAChC,MAAMsB,EAASD,EACf,MAAM/B,EAAWgC,EAAOhK,IACxB,MAAMwI,EAAWwB,EAAOxB,SACxB,MAAMO,EAASiB,EAAOjB,OACtB,MAAMtF,QAAe5F,KAAKC,QAAQkK,GAClC,MAAMiC,QAAgBxG,EAAOyG,0BAA0BlC,EAASrD,WAAYoE,EAAQiB,EAAOhL,OAC3F,IAAKiL,EAAS,CACZ,OAAOD,EAET,MAAO,CACLhK,IAAKgI,EACLQ,SAAAA,EACAxJ,MAAOiL,EAAQP,KACfG,KAAMvB,EAAewB,YAAYG,EAAQJ,MACzCM,OAAQrJ,EAAqBmJ,EAAQlJ,cACrCqJ,cAAe,CACb7N,MAAO+L,EAAe+B,0BAA0BJ,KAItDvM,mBAAmBmM,GACjB,OAAQA,GACN,KAAKS,EAAKC,cACV,KAAKD,EAAKE,QACR,OAAOjN,EAA2BiM,UAAUiB,mBAAmBC,QACjE,KAAKJ,EAAKK,SACV,KAAKL,EAAKM,cACR,OAAOrN,EAA2BiM,UAAUiB,mBAAmBI,SACjE,KAAKP,EAAKQ,eACV,KAAKR,EAAKS,kBACV,KAAKT,EAAKU,kBACR,OAAOzN,EAA2BiM,UAAUiB,mBAAmBQ,MACjE,KAAKX,EAAKY,SACV,KAAKZ,EAAKa,eACV,KAAKb,EAAKc,mBACV,KAAKd,EAAKe,cACV,KAAKf,EAAKgB,eACR,OAAO/N,EAA2BiM,UAAUiB,mBAAmBc,SACjE,KAAKjB,EAAKkB,KACR,OAAOjO,EAA2BiM,UAAUiB,mBAAmBgB,KACjE,KAAKnB,EAAKoB,OACR,OAAOnO,EAA2BiM,UAAUiB,mBAAmBkB,OACjE,KAAKrB,EAAKsB,MACR,OAAOrO,EAA2BiM,UAAUiB,mBAAmBoB,MACjE,KAAKvB,EAAKwB,UACR,OAAOvO,EAA2BiM,UAAUiB,mBAAmBsB,UACjE,KAAKzB,EAAK0B,QACR,OAAOzO,EAA2BiM,UAAUiB,mBAAmBwB,KAEnE,OAAO1O,EAA2BiM,UAAUiB,mBAAmByB,SAEjExO,iCAAiCuM,GAC/B,IAAIkC,EAAsBrL,EAAqBmJ,EAAQG,eACvD,GAAIH,EAAQjD,KAAM,CAChB,IAAK,MAAMoF,KAAOnC,EAAQjD,KAAM,CAC9BmF,GAAuB,OAE7BE,EAAYD,MAGV,OAAOD,IAGX,SAASE,EAAYD,GACnB,IAAIE,EAAW,KAAKF,EAAI1C,QACxB,GAAI0C,EAAI1C,OAAS,SAAW0C,EAAInL,KAAM,CACpC,MAAOsL,KAAcC,GAAQJ,EAAInL,KACjCqL,GAAY,KAAKC,EAAUtL,SAC3B,GAAIuL,EAAK/K,OAAS,EAChB6K,GAAY,MAAWE,EAAKzM,KAAK0M,GAAMA,EAAExL,OAAMC,KAAK,YACjD,GAAIwL,MAAMC,QAAQP,EAAInL,MAAO,CAClCqL,GAAY,MAAWF,EAAInL,KAAKlB,KAAK0M,GAAMA,EAAExL,OAAMC,KAAK,YACnD,GAAIkL,EAAInL,KAAM,CACnBqL,GAAY,MAAWF,EAAInL,OAE7B,OAAOqL,EAEN,IAACM,EAAuB,cAAczL,EACvCzD,+BAAiC,CAAC,IAAK,KACvCA,qCAAqCmP,GACnC,OAAQA,EAAQC,aACd,KAAKvP,EAA2BiM,UAAUuD,yBAAyBC,iBACjE,GAAIH,EAAQI,iBAAkB,CAC5B,GAAIJ,EAAQK,YAAa,CACvB,MAAO,CAAErD,KAAM,YAAaoD,iBAAkBJ,EAAQI,sBACjD,CACL,MAAO,CAAEpD,KAAM,iBAAkBoD,iBAAkBJ,EAAQI,uBAExD,CACL,MAAO,CAAEpD,KAAM,WAEnB,KAAKtM,EAA2BiM,UAAUuD,yBAAyBI,cACjE,OAAON,EAAQK,YAAc,CAAErD,KAAM,aAAgB,CAAEA,KAAM,WAC/D,KAAKtM,EAA2BiM,UAAUuD,yBAAyBK,OACnE,QACE,MAAO,CAAEvD,KAAM,YAGrBnM,2BAA2BmC,EAAO2I,EAAUE,EAAOmE,GACjD,MAAM7E,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMoC,QAAalE,EAAO4J,sBAAsBrF,EAASrD,WAAYoE,EAAQ,CAC3EuE,cAAeV,EAAqBW,8BAA8BV,KAEpE,IAAKlF,GAAQ9H,EAAM0F,aAAc,CAC/B,OAEF,MAAMiI,EAAM,CACVC,gBAAiB9F,EAAK+F,kBACtBC,gBAAiBhG,EAAKiG,cACtBC,WAAY,IAEdlG,EAAKmG,MAAM1I,SAAS2E,IAClB,MAAMgE,EAAY,CAChB/O,MAAO,GACPgP,WAAY,IAEdD,EAAU3D,cAAgB,CACxB7N,MAAOuE,EAAqBiJ,EAAKK,gBAEnC2D,EAAU/O,OAAS8B,EAAqBiJ,EAAKkE,oBAC7ClE,EAAKiE,WAAW5I,SAAQ,CAACgB,EAAG1F,EAAGwN,KAC7B,MAAMlP,EAAQ8B,EAAqBsF,EAAErF,cACrC,MAAMoN,EAAY,CAChBnP,MAAAA,EACAoL,cAAe,CACb7N,MAAOuE,EAAqBsF,EAAEgE,iBAGlC2D,EAAU/O,OAASA,EACnB+O,EAAUC,WAAWlJ,KAAKqJ,GAC1B,GAAIzN,EAAIwN,EAAEzM,OAAS,EAAG,CACpBsM,EAAU/O,OAAS8B,EAAqBiJ,EAAKqE,2BAGjDL,EAAU/O,OAAS8B,EAAqBiJ,EAAKsE,oBAC7Cb,EAAIK,WAAW/I,KAAKiJ,MAEtB,MAAO,CACLxR,MAAOiR,EACP9P,eAKH,IAAC4Q,EAAmB,cAAcnN,EACnCzD,mBAAmBmC,EAAO2I,EAAUE,GAClC,MAAMV,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMoC,QAAalE,EAAO8K,uBAAuBvG,EAASrD,WAAYoE,GACtE,IAAKpB,GAAQ9H,EAAM0F,aAAc,CAC/B,OAEF,MAAM6E,EAAgBtJ,EAAqB6G,EAAKyC,eAChD,MAAMpD,EAAOW,EAAKX,KAAOW,EAAKX,KAAKjH,KAAKqM,GAAQC,EAAYD,KAAMlL,KAAK,UAAY,GACnF,MAAMsN,EAAW1N,EAAqB6G,EAAK5G,cAC3C,MAAO,CACLsI,MAAOxL,KAAK4Q,iBAAiB5O,EAAO8H,EAAK+G,UACzCF,SAAU,CACR,CACEjS,MAAO,kBAAoBiS,EAAW,WAExC,CACEjS,MAAO6N,GAAiBpD,EAAO,OAASA,EAAO,SAMtD,IAAC2H,EAAqB,cAAcxN,EACrCzD,gCAAgCmC,EAAO2I,EAAUE,GAC/C,MAAMV,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAM4D,QAAgB1F,EAAOmL,yBAAyB5G,EAASrD,WAAYoE,GAC3E,IAAKI,GAAWtJ,EAAM0F,aAAc,CAClC,OAEF,OAAO4D,EAAQpJ,KAAKqJ,IACX,CACLC,MAAOxL,KAAK4Q,iBAAiB5O,EAAOuJ,EAAMsF,UAC1C7E,KAAMT,EAAMyF,cAAgBtR,EAA2BiM,UAAUsF,sBAAsBC,MAAQxR,EAA2BiM,UAAUsF,sBAAsBE,WAK/J,IAACC,EAAoB,cAAc9N,EACpCzD,YAAYuE,EAAWwB,GACrBC,MAAMD,GACN5F,KAAKoE,UAAYA,EAEnBvE,wBAAwBmC,EAAO2I,EAAUE,GACvC,MAAMV,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAM4D,QAAgB1F,EAAOyL,wBAAwBlH,EAASrD,WAAYoE,GAC1E,IAAKI,GAAWtJ,EAAM0F,aAAc,CAClC,aAEI1H,KAAKoE,UAAU2E,yBAAyBuC,EAAQpJ,KAAKqJ,GAAU7L,EAA2BiF,IAAIC,MAAM2G,EAAM7G,aAChH,GAAI1C,EAAM0F,aAAc,CACtB,OAEF,MAAM9E,EAAS,GACf,IAAK,IAAI2I,KAASD,EAAS,CACzB,MAAMgG,EAAWtR,KAAKoE,UAAU4F,iBAAiBuB,EAAM7G,UACvD,GAAI4M,EAAU,CACZ1O,EAAOqE,KAAK,CACV9E,IAAKmP,EAASnP,IACdqJ,MAAOxL,KAAK4Q,iBAAiBU,EAAU/F,EAAMsF,aAInD,OAAOjO,IAGR,IAAC2O,EAAmB,cAAcjO,EACnCzD,YAAYuE,EAAWwB,GACrBC,MAAMD,GACN5F,KAAKoE,UAAYA,EAEnBvE,wBAAwBmC,EAAO2I,EAAUqE,EAASnE,GAChD,MAAMV,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAM4D,QAAgB1F,EAAO4L,wBAAwBrH,EAASrD,WAAYoE,GAC1E,IAAKI,GAAWtJ,EAAM0F,aAAc,CAClC,aAEI1H,KAAKoE,UAAU2E,yBAAyBuC,EAAQpJ,KAAKqJ,GAAU7L,EAA2BiF,IAAIC,MAAM2G,EAAM7G,aAChH,GAAI1C,EAAM0F,aAAc,CACtB,OAEF,MAAM9E,EAAS,GACf,IAAK,IAAI2I,KAASD,EAAS,CACzB,MAAMgG,EAAWtR,KAAKoE,UAAU4F,iBAAiBuB,EAAM7G,UACvD,GAAI4M,EAAU,CACZ1O,EAAOqE,KAAK,CACV9E,IAAKmP,EAASnP,IACdqJ,MAAOxL,KAAK4Q,iBAAiBU,EAAU/F,EAAMsF,aAInD,OAAOjO,IAGR,IAAC6O,EAAiB,cAAcnO,EACjCzD,6BAA6BmC,EAAO6I,GAClC,MAAMV,EAAWnI,EAAMG,IACvB,MAAMyD,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMuI,QAAcrK,EAAO8L,sBAAsBvH,EAASrD,YAC1D,IAAKmJ,GAASjO,EAAM0F,aAAc,CAChC,OAEF,MAAMiK,EAAU,CAACC,EAAQ1F,EAAM2F,KAC7B,IAAIC,EAAU,CACZjG,KAAMK,EAAK9I,KACXkJ,OAAQ,GACRN,KAAM+F,EAAiB7F,EAAKF,OAAStM,EAA2BiM,UAAUqG,WAAWhF,SACrFxB,MAAOxL,KAAK4Q,iBAAiB5O,EAAOkK,EAAK+F,MAAM,IAC/CC,eAAgBlS,KAAK4Q,iBAAiB5O,EAAOkK,EAAK+F,MAAM,IACxD9I,KAAM,IAER,GAAI0I,EACFC,EAAQK,cAAgBN,EAC1B,GAAI3F,EAAKkG,YAAclG,EAAKkG,WAAWxO,OAAS,EAAG,CACjD,IAAK,IAAIyO,KAASnG,EAAKkG,WAAY,CACjCT,EAAQC,EAAQS,EAAOP,EAAQjG,OAGnC+F,EAAO3K,KAAK6K,IAEd,IAAIlP,EAAS,GACbqN,EAAM1I,SAAS2E,GAASyF,EAAQ/O,EAAQsJ,KACxC,OAAOtJ,IAGR,IAAC6J,EAAO,QAEXhN,EAAcgN,EAAM,UAAW,IAC/BhN,EAAcgN,EAAM,UAAW,WAC/BhN,EAAcgN,EAAM,SAAU,UAC9BhN,EAAcgN,EAAM,SAAU,UAC9BhN,EAAcgN,EAAM,QAAS,SAC7BhN,EAAcgN,EAAM,YAAa,aACjChN,EAAcgN,EAAM,OAAQ,QAC5BhN,EAAcgN,EAAM,OAAQ,QAC5BhN,EAAcgN,EAAM,WAAY,OAChChN,EAAcgN,EAAM,gBAAiB,aACrChN,EAAcgN,EAAM,WAAY,YAChChN,EAAcgN,EAAM,gBAAiB,kBACrChN,EAAcgN,EAAM,iBAAkB,UACtChN,EAAcgN,EAAM,oBAAqB,UACzChN,EAAcgN,EAAM,oBAAqB,UACzChN,EAAcgN,EAAM,iBAAkB,YACtChN,EAAcgN,EAAM,4BAA6B,eACjDhN,EAAcgN,EAAM,gBAAiB,QACrChN,EAAcgN,EAAM,iBAAkB,SACtChN,EAAcgN,EAAM,qBAAsB,aAC1ChN,EAAcgN,EAAM,YAAa,aACjChN,EAAcgN,EAAM,gBAAiB,kBACrChN,EAAcgN,EAAM,gBAAiB,kBACrChN,EAAcgN,EAAM,QAAS,SAC7BhN,EAAcgN,EAAM,QAAS,SAC7BhN,EAAcgN,EAAM,QAAS,SAC7BhN,EAAcgN,EAAM,MAAO,OAC3BhN,EAAcgN,EAAM,UAAW,WAC/B,IAAIsF,EAAmCjU,OAAO0J,OAAO,MACrDuK,EAAiBtF,EAAKoB,QAAUnO,EAA2BiM,UAAUqG,WAAWlE,OAChFiE,EAAiBtF,EAAKsB,OAASrO,EAA2BiM,UAAUqG,WAAWhE,MAC/E+D,EAAiBtF,EAAKkB,MAAQjO,EAA2BiM,UAAUqG,WAAWpE,KAC9EmE,EAAiBtF,EAAKwB,WAAavO,EAA2BiM,UAAUqG,WAAW9D,UACnF6D,EAAiBtF,EAAKa,gBAAkB5N,EAA2BiM,UAAUqG,WAAWM,OACxFP,EAAiBtF,EAAKQ,gBAAkBvN,EAA2BiM,UAAUqG,WAAW3D,SACxF0D,EAAiBtF,EAAKS,mBAAqBxN,EAA2BiM,UAAUqG,WAAW3D,SAC3F0D,EAAiBtF,EAAKU,mBAAqBzN,EAA2BiM,UAAUqG,WAAW3D,SAC3F0D,EAAiBtF,EAAKK,UAAYpN,EAA2BiM,UAAUqG,WAAWhF,SAClF+E,EAAiBtF,EAAK8F,OAAS7S,EAA2BiM,UAAUqG,WAAWhF,SAC/E+E,EAAiBtF,EAAKM,eAAiBrN,EAA2BiM,UAAUqG,WAAWhF,SACvF+E,EAAiBtF,EAAKK,UAAYpN,EAA2BiM,UAAUqG,WAAWhF,SAClF+E,EAAiBtF,EAAKY,UAAY3N,EAA2BiM,UAAUqG,WAAWtE,SAClFqE,EAAiBtF,EAAK+F,eAAiB9S,EAA2BiM,UAAUqG,WAAWtE,SACpF,IAAC+E,EAAe,cAAcnP,EAC/BzD,uBAAuB6S,GACrB,MAAO,CACLC,oBAAqBD,EAAQE,aAC7BC,QAASH,EAAQI,QACjBC,WAAYL,EAAQI,QACpBE,YAAa,EACbC,iBAAkB,KAClBC,+BAAgC,KAChCC,yCAA0C,KAC1CC,yCAA0C,KAC1CC,gDAAiD,KACjDC,qDAAsD,KACtDC,2DAA4D,MAC5DC,wDAAyD,MACzDC,4DAA6D,MAC7DC,wCAAyC,MACzCC,oCAAqC,OAGzC9T,oBAAoBmC,EAAO4R,GACzB,MAAO,CACLxQ,KAAMwQ,EAAOC,QACbrI,MAAOxL,KAAK4Q,iBAAiB5O,EAAO4R,EAAOrQ,SAI9C,IAACuQ,EAAgB,cAAcrB,EAChC5S,0CAA0CmC,EAAOwJ,EAAOkH,EAAS7H,GAC/D,MAAMV,EAAWnI,EAAMG,IACvB,MAAM4R,EAAc/R,EAAMmJ,YAAY,CACpCtH,WAAY2H,EAAM1H,gBAClBC,OAAQyH,EAAMxH,cAEhB,MAAMgQ,EAAYhS,EAAMmJ,YAAY,CAClCtH,WAAY2H,EAAMvH,cAClBF,OAAQyH,EAAMtH,YAEhB,MAAM0B,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMuM,QAAcrO,EAAOsO,2BAA2B/J,EAASrD,WAAYiN,EAAaC,EAAWvB,EAAa0B,gBAAgBzB,IAChI,IAAKuB,GAASjS,EAAM0F,aAAc,CAChC,OAEF,OAAOuM,EAAM/R,KAAKkS,GAASpU,KAAKqU,oBAAoBrS,EAAOoS,OAG5D,IAACE,EAAsB,cAAc7B,EACtC8B,kCACE,MAAO,CAAC,IAAK,IAAK,MAEpB1U,mCAAmCmC,EAAO2I,EAAU6J,EAAI9B,EAAS7H,GAC/D,MAAMV,EAAWnI,EAAMG,IACvB,MAAM+I,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMuM,QAAcrO,EAAO6O,iCAAiCtK,EAASrD,WAAYoE,EAAQsJ,EAAI/B,EAAa0B,gBAAgBzB,IAC1H,IAAKuB,GAASjS,EAAM0F,aAAc,CAChC,OAEF,OAAOuM,EAAM/R,KAAKkS,GAASpU,KAAKqU,oBAAoBrS,EAAOoS,OAG5D,IAACM,EAAoB,cAAcjC,EACpC5S,yBAAyBmC,EAAOwJ,EAAOwD,EAASnE,GAC9C,MAAMV,EAAWnI,EAAMG,IACvB,MAAMuB,EAAQ1B,EAAMmJ,YAAY,CAC9BtH,WAAY2H,EAAM1H,gBAClBC,OAAQyH,EAAMxH,cAEhB,MAAM2Q,EAAM3S,EAAMmJ,YAAY,CAC5BtH,WAAY2H,EAAMvH,cAClBF,OAAQyH,EAAMtH,YAEhB,MAAM0Q,EAAgBnC,EAAa0B,gBAAgBnS,EAAM6S,cACzD,MAAMC,EAAa9F,EAAQ+F,QAAQhT,QAAQiT,GAAMA,EAAErM,OAAMzG,KAAK8S,GAAMA,EAAErM,OAAMzG,IAAI+S,QAChF,MAAMrP,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMwN,QAAkBtP,EAAOuP,uBAAuBhL,EAASrD,WAAYpD,EAAOiR,EAAKG,EAAYF,GACnG,IAAKM,GAAalT,EAAM0F,aAAc,CACpC,MAAO,CAAE0N,QAAS,GAAI1U,QAAS,QAGjC,MAAM0U,EAAUF,EAAUnT,QAAQsT,GACzBA,EAAIC,QAAQvT,QAAQ6R,GAAWA,EAAO2B,YAAW3R,SAAW,IAClE1B,KAAKmT,GACCrV,KAAKwV,mCAAmCxT,EAAOgN,EAASqG,KAEjE,MAAO,CACLD,QAAAA,EACA1U,QAAS,QAIbb,mCAAmCmC,EAAOgN,EAASyG,GACjD,MAAMxB,EAAQ,GACd,IAAK,MAAML,KAAU6B,EAAQH,QAAS,CACpC,IAAK,MAAMI,KAAc9B,EAAO+B,YAAa,CAC3C1B,EAAMhN,KAAK,CACTkD,SAAUnI,EAAMG,IAChByT,eAAgB,EAChBC,SAAU,CACRrK,MAAOxL,KAAK4Q,iBAAiB5O,EAAO0T,EAAWnS,MAC/CH,KAAMsS,EAAW7B,YAKzB,MAAMiC,EAAS,CACbC,MAAON,EAAQO,YACf5B,KAAM,CAAEH,MAAAA,GACR5L,YAAa2G,EAAQ+F,QACrB/I,KAAM,YAER,OAAO8J,IAGR,IAACG,EAAgB,cAAc3S,EAChCzD,YAAYuE,EAAWwB,GACrBC,MAAMD,GACN5F,KAAKoE,UAAYA,EAEnBvE,yBAAyBmC,EAAO2I,EAAUuL,EAASrL,GACjD,MAAMV,EAAWnI,EAAMG,IACvB,MAAMuC,EAAWyF,EAASrD,WAC1B,MAAMoE,EAASlJ,EAAMmJ,YAAYR,GACjC,MAAM/E,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAEF,MAAMyO,QAAmBvQ,EAAOwQ,cAAc1R,EAAUwG,EAAQ,CAC9DmL,wBAAyB,QAE3B,GAAIF,EAAWG,YAAc,MAAO,CAClC,MAAO,CACLrC,MAAO,GACPsC,aAAcJ,EAAWK,uBAG7B,GAAIL,EAAWM,oBAAsB,EAAG,CACtC,MAAM,IAAIpM,MAAM,oCAElB,MAAMqM,QAAwB9Q,EAAO+Q,oBAAoBjS,EAAUwG,EAAQ,MAAO,MAAO,OACzF,IAAKwL,GAAmB1U,EAAM0F,aAAc,CAC1C,OAEF,MAAMuM,EAAQ,GACd,IAAK,MAAM2C,KAAkBF,EAAiB,CAC5C,MAAMG,EAAS7W,KAAKoE,UAAU4F,iBAAiB4M,EAAelS,UAC9D,GAAImS,EAAQ,CACV5C,EAAMhN,KAAK,CACTkD,SAAU0M,EAAO1U,IACjByT,eAAgB,EAChBC,SAAU,CACRrK,MAAOxL,KAAK4Q,iBAAiBiG,EAAQD,EAAe/F,UACpDzN,KAAM8S,SAGL,CACL,MAAM,IAAI7L,MAAM,gBAAgBuM,EAAelS,cAGnD,MAAO,CAAEuP,MAAAA,KAGV,IAAC6C,EAAoB,cAAcxT,EACpCzD,wBAAwBmC,EAAOwJ,EAAOX,GACpC,MAAMV,EAAWnI,EAAMG,IACvB,MAAMuC,EAAWyF,EAASrD,WAC1B,MAAMpD,EAAQ1B,EAAMmJ,YAAY,CAC9BtH,WAAY2H,EAAM1H,gBAClBC,OAAQyH,EAAMxH,cAEhB,MAAM2Q,EAAM3S,EAAMmJ,YAAY,CAC5BtH,WAAY2H,EAAMvH,cAClBF,OAAQyH,EAAMtH,YAEhB,MAAM0B,QAAe5F,KAAKC,QAAQkK,GAClC,GAAInI,EAAM0F,aAAc,CACtB,OAAO,KAET,MAAMqP,QAAgBnR,EAAOoR,kBAAkBtS,EAAUhB,EAAOiR,GAChE,MAAMsC,EAAQF,EAAQ7U,KAAKgV,IAClB,IACFA,EACH/V,MAAO+V,EAAK9T,KACZuH,SAAU3I,EAAMyB,cAAcyT,EAAKvM,UACnCqB,KAAMhM,KAAKmX,iBAAiBD,EAAKlL,UAGrC,MAAO,CAAEiL,MAAAA,EAAOvW,QAAS,QAG3Bb,iBAAiBmM,GACf,OAAQA,GACN,IAAK,YACH,OAAOtM,EAA2BiM,UAAUyL,cAAcC,UAC5D,IAAK,OACH,OAAO3X,EAA2BiM,UAAUyL,cAAcE,KAC5D,QACE,OAAO5X,EAA2BiM,UAAUyL,cAAcE,QAMlE,IAAIC,EACJ,IAAIC,EACJ,SAASC,EAAgBC,GACvBF,EAAmBG,EAAUD,EAAU,cAEzC,SAASE,EAAgBF,GACvBH,EAAmBI,EAAUD,EAAU,cAEzC,SAASG,IACP,OAAO,IAAI1P,SAAQ,CAAC2P,EAASC,KAC3B,IAAKR,EAAkB,CACrB,OAAOQ,EAAO,8BAEhBD,EAAQP,MAGZ,SAASS,IACP,OAAO,IAAI7P,SAAQ,CAAC2P,EAASC,KAC3B,IAAKP,EAAkB,CACrB,OAAOO,EAAO,8BAEhBD,EAAQN,MAGZ,SAASG,EAAUD,EAAUO,GAC3B,MAAM5V,EAAS,IAAIzC,EAAcqY,EAAQP,GACzC,MAAM9R,EAAS,IAAIT,IACV9C,EAAO6V,4BAA4B/S,GAE5C,MAAMM,EAAW,IAAItB,EAASyB,GAC9BlG,EAA2BiM,UAAUwM,+BAA+BF,EAAQ,IAAIxN,EAAe7E,IAC/FlG,EAA2BiM,UAAUyM,8BAA8BH,EAAQ,IAAIlJ,EAAqBnJ,IACpGlG,EAA2BiM,UAAU0M,sBAAsBJ,EAAQ,IAAIxH,EAAiB7K,IACxFlG,EAA2BiM,UAAU2M,kCAAkCL,EAAQ,IAAInH,EAAmBlL,IACtGlG,EAA2BiM,UAAU4M,2BAA2BN,EAAQ,IAAI7G,EAAkB3L,EAAUG,IACxGlG,EAA2BiM,UAAU6M,0BAA0BP,EAAQ,IAAI1G,EAAiB9L,EAAUG,IACtGlG,EAA2BiM,UAAU8M,+BAA+BR,EAAQ,IAAIxG,EAAe7L,IAC/FlG,EAA2BiM,UAAU+M,4CAA4CT,EAAQ,IAAInE,EAAclO,IAC3GlG,EAA2BiM,UAAUgN,qCAAqCV,EAAQ,IAAI3D,EAAoB1O,IAC1GlG,EAA2BiM,UAAUiN,2BAA2BX,EAAQ,IAAIvD,EAAkB9O,IAC9FlG,EAA2BiM,UAAUkN,uBAAuBZ,EAAQ,IAAIhC,EAAcxQ,EAAUG,IAChGlG,EAA2BiM,UAAUmN,2BAA2Bb,EAAQ,IAAInB,EAAkBlR,IAC9F,IAAIF,EAAmBD,EAAUiS,EAAUO,EAAQrS,GACnD,OAAOA","sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.1(547870b6881302c5b4ff32173c16d06009e3588f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.esnext.string.d.ts\"] = true;\nlibFileSet[\"lib.esnext.weakref.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers?.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar OccurrencesAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getOccurrencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.map((entry) => {\n      return {\n        range: this._textSpanToRange(model, entry.textSpan),\n        kind: entry.isWriteAccess ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n      };\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const items = await worker.getNavigationBarItems(resource.toString());\n    if (!items || model.isDisposed()) {\n      return;\n    }\n    const convert = (bucket, item, containerLabel) => {\n      let result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: []\n      };\n      if (containerLabel)\n        result2.containerName = containerLabel;\n      if (item.childItems && item.childItems.length > 0) {\n        for (let child of item.childItems) {\n          convert(bucket, child, result2.name);\n        }\n      }\n      bucket.push(result2);\n    };\n    let result = [];\n    items.forEach((item) => convert(result, item));\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const client = new WorkerManager(modeId, defaults);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker));\n  monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new OccurrencesAdapter(worker));\n  monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker));\n  monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker));\n  monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker));\n  new DiagnosticsAdapter(libFiles, defaults, modeId, worker);\n  return worker;\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OccurrencesAdapter,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"]}