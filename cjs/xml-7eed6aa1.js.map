{"file":"xml-7eed6aa1.js","mappings":"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","names":["monaco_editor_core_star"],"sources":["./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.1(547870b6881302c5b4ff32173c16d06009e3588f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"version":3}