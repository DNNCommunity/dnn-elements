/*! For license information please see components-dnn-checkbox-dnn-checkbox-stories.6d3f5b94.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[7065],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o1:()=>actions});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a};function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id="object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}var actions=(...args)=>{let options=config,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...config,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=action(namesObject[name],options)})),actionsObject}},"./src/components/dnn-checkbox/dnn-checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_checkbox_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),if_defined=__webpack_require__("../../node_modules/lit-html/directives/if-defined.js");const meta={title:"Elements/Checkbox",component:"dnn-checkbox",tags:["autodocs"],parameters:{docs:{description:{Component:'# dnn-checkbox\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n> **[DEPRECATED]** - The label for the checkbox - Obsolete, implement your own label.\n\n## Usage\n\n### HTML\n\n```html\n<dnn-checkbox\n    checked="unchecked"\n    name="agree"\n    value="1"\n    use-intermediate="false">\n</dnn-checkbox>\n```\n\n\n### JSX-TSX\n\n```tsx\n<dnn-checkbox\n    checked="unchecked"\n    name="agree"\n    value="1"\n    useIntermediate="false">\n</dnn-checkbox>\n```\n\n\n\n## Properties\n\n| Property           | Attribute          | Description                                                                                                                                                                                                                                             | Type                                           | Default                        |\n| ------------------ | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------- | ------------------------------ |\n| `checked`          | `checked`          | Defines if the checkbox is checked (true) or unchecked (false) or in an intermediate state (undefined)                                                                                                                                                  | `"checked" \\| "intermediate" \\| "unchecked"`   | `"unchecked"`                  |\n| `name`             | `name`             | The name to show in the formData (if using forms).                                                                                                                                                                                                      | `string`                                       | `undefined`                    |\n| `nextStateHandler` | --                 | A function that will be called when the checkbox needs to change state and returns the next state. Can be used to customize the order of the states when the component is clicked. Only called if you also use the tri-state feature (useIntermediate). | `(currentState: CheckedState) => CheckedState` | `this.defaultNextStateHandler` |\n| `useIntermediate`  | `use-intermediate` | Defines if clicking the checkbox will go through the intermediate state between checked and unchecked (tri-state)                                                                                                                                       | `boolean`                                      | `false`                        |\n| `value`            | `value`            | The value for this checkbox (not to be confused with its checked state).                                                                                                                                                                                | `string`                                       | `"on"`                         |\n\n\n## Events\n\n| Event           | Description                                          | Type                                                      |\n| --------------- | ---------------------------------------------------- | --------------------------------------------------------- |\n| `checkedchange` | Fires up when the checkbox checked property changes. | `CustomEvent<"checked" \\| "intermediate" \\| "unchecked">` |\n\n\n## Slots\n\n| Slot                 | Description                                                |\n| -------------------- | ---------------------------------------------------------- |\n| `"checkedicon"`      | Allows overriding the default checked icon.                |\n| `"intermediateicon"` | If intermadiate state is used, allows overriding its icon. |\n| `"uncheckedicon"`    | Allows overriding the unchecked icon.                      |\n\n\n## CSS Custom Properties\n\n| Name            | Description                                                                                  |\n| --------------- | -------------------------------------------------------------------------------------------- |\n| `--focus-color` | The color to outline the checkbox when hovered or focused, default to the dnn primary color. |\n\n\n## Dependencies\n\n### Used by\n\n - [dnn-example-form](../examples/dnn-example-form)\n - [dnn-permissions-grid](../dnn-permissions-grid)\n\n### Graph\n```mermaid\ngraph TD;\n  dnn-example-form --\x3e dnn-checkbox\n  dnn-permissions-grid --\x3e dnn-checkbox\n  style dnn-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}}},argTypes:{checked:{options:["checked","unchecked","intermediate"],control:"radio"},useIntermediate:{control:"boolean"},value:{control:"text"}}},dnn_checkbox_stories=((0,__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs").o1)("checkedchange"),meta),Checkbox=(args=>lit.qy`
        <dnn-checkbox
            checked=${args.checked}
            ?use-intermediate=${(0,if_defined.J)(args.useIntermediate)}
            value=${args.value}>
        </dnn-checkbox>
    `).bind({});Checkbox.args={checked:"unchecked",useIntermediate:!1,value:"1"};const __namedExportsOrder=["Checkbox"];Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:"args => html`\n        <dnn-checkbox\n            checked=${args.checked}\n            ?use-intermediate=${ifDefined(args.useIntermediate)}\n            value=${args.value}>\n        </dnn-checkbox>\n    `",...Checkbox.parameters?.docs?.source}}}},"../../node_modules/lit-html/directives/if-defined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J:()=>to});var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit-html/lit-html.js");const to=t=>t??_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.s6}}]);
//# sourceMappingURL=components-dnn-checkbox-dnn-checkbox-stories.6d3f5b94.iframe.bundle.js.map