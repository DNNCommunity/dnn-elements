/*! For license information please see components-dnn-chevron-dnn-chevron-stories.adc4630c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_dnncommunity_dnn_elements=self.webpackChunk_dnncommunity_dnn_elements||[]).push([[892],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Nw:()=>actions});var v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),preview_errors=__webpack_require__("../../node_modules/@storybook/addon-actions/node_modules/@storybook/core-events/dist/errors/preview-errors.mjs"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a};function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new preview_errors.is({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id="object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler}var actions=(...args)=>{let options=config,names=args;1===names.length&&Array.isArray(names[0])&&([names]=names),1!==names.length&&"string"!=typeof names[names.length-1]&&(options={...config,...names.pop()});let namesObject=names[0];(1!==names.length||"string"==typeof namesObject)&&(namesObject={},names.forEach((name=>{namesObject[name]=name})));let actionsObject={};return Object.keys(namesObject).forEach((name=>{actionsObject[name]=action(namesObject[name],options)})),actionsObject}},"./src/components/dnn-chevron/dnn-chevron.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Chevron:()=>Chevron,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dnn_chevron_stories});var lit=__webpack_require__("../../node_modules/lit/index.js"),if_defined=__webpack_require__("../../node_modules/lit-html/directives/if-defined.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const dnn_chevron_stories={title:"Elements/Chevron",component:"dnn-chevron",tags:["autodocs"],parameters:{docs:{description:{component:'# dnn-chevron\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property       | Attribute       | Description                      | Type      | Default      |\n| -------------- | --------------- | -------------------------------- | --------- | ------------ |\n| `collapseText` | `collapse-text` | Collapse text for screen readers | `string`  | `"collapse"` |\n| `expandText`   | `expand-text`   | Expand text for screen readers   | `string`  | `"expand"`   |\n| `expanded`     | `expanded`      | Is the chevron expanded          | `boolean` | `false`      |\n\n\n## Events\n\n| Event     | Description                               | Type               |\n| --------- | ----------------------------------------- | ------------------ |\n| `changed` | Fires up when the expanded status changes | `CustomEvent<any>` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'}}},argTypes:{expandText:{control:"text"},collapseText:{control:"text"},expanded:{control:"boolean"}}},Chevron=((0,dist.Nw)("changed"),(args=>lit.dy`
        <dnn-chevron
            expand-text=${(0,if_defined.o)(args.expandText)}
            collapse-text=${(0,if_defined.o)(args.collapseText)}
            ?expanded=${(0,if_defined.o)(args.expanded)}>
        </dnn-chevron>
    `).bind({}));Chevron.args={expandText:"expand",collapseText:"collapse",expanded:!1},Chevron.parameters={...Chevron.parameters,docs:{...Chevron.parameters?.docs,source:{originalSource:"args => html`\n        <dnn-chevron\n            expand-text=${ifDefined(args.expandText)}\n            collapse-text=${ifDefined(args.collapseText)}\n            ?expanded=${ifDefined(args.expanded)}>\n        </dnn-chevron>\n    `",...Chevron.parameters?.docs?.source}}};const __namedExportsOrder=["Chevron"]},"../../node_modules/lit-html/directives/if-defined.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>o});var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/lit-html/lit-html.js"),o=o=>null!=o?o:_lit_html_js__WEBPACK_IMPORTED_MODULE_0__.Ld}}]);
//# sourceMappingURL=components-dnn-chevron-dnn-chevron-stories.adc4630c.iframe.bundle.js.map