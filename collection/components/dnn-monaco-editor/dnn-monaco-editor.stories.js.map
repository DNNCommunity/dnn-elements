{"version":3,"file":"dnn-monaco-editor.stories.js","sourceRoot":"","sources":["../../../src/components/dnn-monaco-editor/dnn-monaco-editor.stories.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAIhC,OAAO,MAAM,MAAM,aAAa,CAAC;AAEjC,eAAe;EACX,KAAK,EAAE,wBAAwB;EAC/B,SAAS,EAAE,mBAAmB;EAC9B,UAAU,EAAE;IACR,OAAO,EAAE;MACL,OAAO,EAAE,EAAE;KACd;IACD,KAAK,EAAG,MAAM;GACjB;EACD,QAAQ,EAAE,EAAE;CACP,CAAC;AAEV,MAAM,QAAQ,GAAG,GAAG,EAAE,CAClB,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyCH,CAAC;AAEN,MAAM,CAAC,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9C,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC","sourcesContent":["import { html } from \"lit-html\";\r\n//import { ifDefined } from 'lit-html/directives/if-defined';\r\n//import { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\r\nimport { Meta } from \"@storybook/web-components\";\r\nimport readme from './readme.md';\r\n\r\nexport default {\r\n    title: 'Elements/Monaco Editor',\r\n    component: 'dnn-monaco-editor',\r\n    parameters: {\r\n        actions: {\r\n            handles: [],\r\n        },\r\n        notes:  readme,\r\n    },\r\n    argTypes: {},\r\n} as Meta;\r\n\r\nconst Template = () =>\r\n    html`\r\n<script>\r\n    self.MonacoEnvironment = {\r\n        getWorkerUrl: function (_moduleId, label) {\r\n            if (label === 'json') {\r\n                return './dnn/json.worker.js';\r\n            }\r\n            if (label === 'css' || label === 'scss' || label === 'less') {\r\n                return './dnn/css.worker.js';\r\n            }\r\n            if (label === 'html' || label === 'handlebars' || label === 'razor') {\r\n                return './dnn/html.worker.js';\r\n            }\r\n            if (label === 'typescript' || label === 'javascript') {\r\n                return './dnn/ts.worker.js';\r\n            }\r\n            return './dnn/editor.worker.js';\r\n        }\r\n    };\r\n</script>\r\n<dnn-monaco-editor>\r\n    <code>\r\nexport interface Employee{\r\n  firstName: string;\r\n  lastName: string;\r\n  fullName(): string;\r\n}\r\n\r\nlet employee: Employee = {\r\n  firstName : \"jane\",\r\n  lastName: \"doe\",\r\n  fullName(): string{\r\n    return this.firstName + \" \" + this.lastName;\r\n  }\r\n}\r\n\r\nconsole.log(employee.firstName);\r\nconsole.log(employee.lastName);\r\nconsole.log(employee.fullName());\r\n    </code>\r\n</dnn-monaco-editor>\r\n    `;\r\n\r\nexport const MonacoEditor = Template.bind({});\r\nMonacoEditor.args = {};\r\n"]}