{"version":3,"file":"components-dnn-color-input-dnn-color-input-stories.2fd376e4.iframe.bundle.js","mappings":";;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5BA;;AAqCA","sources":["webpack://@dnncommunity/dnn-elements/./src/components/dnn-color-input/dnn-color-input.stories.ts"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/web-components';\r\nimport { html, nothing, TemplateResult } from 'lit';\r\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\r\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\r\nimport { actions } from '@storybook/addon-actions';\r\nimport readme from \"./readme.md\";\r\n\r\nconst meta: Meta = {\r\n  title: 'Elements/Color Input',\r\n  component: 'dnn-color-input',\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    docs: {\r\n      description: {\r\n        component: readme,\r\n      }\r\n    }\r\n  },\r\n  argTypes: {\r\n    \"color\":{\r\n      control: 'string',\r\n    },\r\n    \"contrast-color\":{\r\n      control: 'string',\r\n    },\r\n    \"light-color\":{\r\n      control: 'string',\r\n    },\r\n    \"dark-color\":{\r\n      control: 'string',\r\n    },\r\n    \"help-text\": {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    name: {\r\n      control: 'text',\r\n    },\r\n    readonly: {\r\n      control: 'boolean',\r\n    },\r\n    localization: {\r\n      control: 'object',\r\n    },\r\n    \"use-contrast-color\": {\r\n      control: 'boolean',\r\n    },\r\n    \"use-light-color\": {\r\n      control: 'boolean',\r\n    },\r\n    \"use-dark-color\": {\r\n      control: 'boolean',\r\n    },\r\n    prefix: {\r\n      control: 'text',\r\n    },\r\n    suffix: {\r\n      control: 'text',\r\n    },\r\n  },\r\n};\r\nexport default meta;\r\n\r\nconst eventsFromNames = actions(\"colorChange\", \"colorInput\");\r\n\r\nfunction getSlots(args: any): TemplateResult<1>[] {\r\n  const slots: TemplateResult<1>[] = [];\r\n  if (args.prefix){\r\n    slots.push(html`<div slot=\"prefix\">${args.prefix}</div>`);\r\n  }\r\n\r\n  if (args.suffix){\r\n    slots.push(html`<div slot=\"suffix\">${args.suffix}</div>`);\r\n  }\r\n\r\n  return slots;\r\n}\r\n\r\nconst Template = (args) =>\r\n    html`\r\n        <dnn-color-input\r\n          color=${ifDefined(args.color)}\r\n          contrast-color=${ifDefined(args[\"contrast-color\"])}\r\n          light-color=${ifDefined(args[\"light-color\"])}\r\n          dark-color=${ifDefined(args[\"dark-color\"])}\r\n          ?use-contrast-color=${ifDefined(args[\"use-contrast-color\"])}\r\n          ?use-light-color=${ifDefined(args[\"use-light-color\"])}\r\n          ?use-dark-color=${ifDefined(args[\"use-dark-color\"])}\r\n          help-text=${ifDefined(args[\"help-text\"])}\r\n          label=${ifDefined(args.label)}\r\n          name=${ifDefined(args.name)}\r\n          ?readonly=${ifDefined(args.readonly)}\r\n          @colorChange=${e => eventsFromNames.colorChange(e)}\r\n          @colorInput=${e => eventsFromNames.colorInput(e)}\r\n        >\r\n        ${getSlots(args)}\r\n        </dnn-input>\r\n    `;\r\n\r\n\r\ntype Story = StoryObj;\r\n\r\nexport const Color : Story = Template.bind({});\r\nColor.args = {\r\n  \"allow-show-password\": false,\r\n  autocomplete: \"off\",\r\n  disabled: false,\r\n  \"disable-validity-reporting\": false,\r\n  multiple: false,\r\n  readonly: false,\r\n  required: false,\r\n  color: \"000088\",\r\n};\r\n\r\nexport const WithLabelAndHelp : Story = Template.bind({});\r\nWithLabelAndHelp.args = {\r\n  ...Color.args,\r\n  \"help-text\": \"Choose a color\",\r\n  label: \"Color\",\r\n};\r\n\r\nexport const WithContrast : Story = Template.bind({});\r\nWithContrast.args = {\r\n  ...Color.args,\r\n  \"contrast-color\": \"FFFFFF\",\r\n  \"color\": \"0000AA\",\r\n  \"use-contrast-color\": true,\r\n};\r\n\r\nexport const ColorSystem : Story = Template.bind({});\r\nColorSystem.args = {\r\n  ...WithContrast.args,\r\n  \"light-color\": \"0000FF\",\r\n  \"dark-color\": \"000055\",\r\n  \"use-light-color\": true,\r\n  \"use-dark-color\": true,\r\n};"],"names":[],"sourceRoot":""}